{"version":3,"file":"PuppetDbClient.esm.js","sources":["../../src/api/PuppetDbClient.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  PuppetDbApi,\n  PuppetDbReport,\n  PuppetDbReportEvent,\n  PuppetDbReportLog,\n} from './types';\nimport { DiscoveryApi, FetchApi } from '@backstage/core-plugin-api';\nimport { ResponseError } from '@backstage/errors';\n\nexport class PuppetDbClient implements PuppetDbApi {\n  discoveryApi: DiscoveryApi;\n  fetchApi: FetchApi;\n\n  constructor({\n    discoveryApi,\n    fetchApi,\n  }: {\n    discoveryApi: DiscoveryApi;\n    fetchApi: FetchApi;\n  }) {\n    this.discoveryApi = discoveryApi;\n    this.fetchApi = fetchApi;\n  }\n\n  private async callApi<T>(\n    path: string,\n    query: { [key in string]: any },\n  ): Promise<T | undefined> {\n    const apiUrl = `${await this.discoveryApi.getBaseUrl('proxy')}/puppetdb`;\n    const response = await this.fetchApi.fetch(\n      `${apiUrl}${path}?${new URLSearchParams(query).toString()}`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    if (response.ok) {\n      return (await response.json()) as T;\n    }\n    throw await ResponseError.fromResponse(response);\n  }\n\n  async getPuppetDbReportEvents(\n    puppetDbReportHash: string,\n  ): Promise<PuppetDbReportEvent[] | undefined> {\n    if (!puppetDbReportHash) {\n      throw new Error('PuppetDB report hash is required');\n    }\n\n    const events = (await this.callApi(\n      `/pdb/query/v4/reports/${puppetDbReportHash}/events`,\n      {},\n    )) as PuppetDbReportEvent[];\n\n    if (!events || events.length === 0) {\n      return undefined;\n    }\n\n    return events;\n  }\n\n  async getPuppetDbReportLogs(\n    puppetDbReportHash: string,\n  ): Promise<PuppetDbReportLog[] | undefined> {\n    if (!puppetDbReportHash) {\n      throw new Error('PuppetDB report hash is required');\n    }\n\n    const events = (await this.callApi(\n      `/pdb/query/v4/reports/${puppetDbReportHash}/logs`,\n      {},\n    )) as PuppetDbReportLog[];\n\n    if (!events || events.length === 0) {\n      return undefined;\n    }\n\n    return events;\n  }\n\n  async getPuppetDbNodeReports(\n    puppetDbCertName: string,\n  ): Promise<PuppetDbReport[] | undefined> {\n    if (!puppetDbCertName) {\n      throw new Error('PuppetDB certname is required');\n    }\n\n    return this.callApi(`/pdb/query/v4/reports`, {\n      query: `[\"=\",\"certname\",\"${puppetDbCertName}\"]`,\n      order_by: `[{\"field\": \"start_time\", \"order\": \"desc\"},{\"field\": \"end_time\", \"order\": \"desc\"}]`,\n      limit: 100,\n    });\n  }\n}\n"],"names":[],"mappings":";;AAwBO,MAAM,cAAsC,CAAA;AAAA,EACjD,YAAA,CAAA;AAAA,EACA,QAAA,CAAA;AAAA,EAEA,WAAY,CAAA;AAAA,IACV,YAAA;AAAA,IACA,QAAA;AAAA,GAIC,EAAA;AACD,IAAA,IAAA,CAAK,YAAe,GAAA,YAAA,CAAA;AACpB,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GAClB;AAAA,EAEA,MAAc,OACZ,CAAA,IAAA,EACA,KACwB,EAAA;AACxB,IAAA,MAAM,SAAS,CAAG,EAAA,MAAM,KAAK,YAAa,CAAA,UAAA,CAAW,OAAO,CAAC,CAAA,SAAA,CAAA,CAAA;AAC7D,IAAM,MAAA,QAAA,GAAW,MAAM,IAAA,CAAK,QAAS,CAAA,KAAA;AAAA,MACnC,CAAA,EAAG,MAAM,CAAA,EAAG,IAAI,CAAA,CAAA,EAAI,IAAI,eAAgB,CAAA,KAAK,CAAE,CAAA,QAAA,EAAU,CAAA,CAAA;AAAA,MACzD;AAAA,QACE,OAAS,EAAA;AAAA,UACP,cAAgB,EAAA,kBAAA;AAAA,SAClB;AAAA,OACF;AAAA,KACF,CAAA;AACA,IAAA,IAAI,SAAS,EAAI,EAAA;AACf,MAAQ,OAAA,MAAM,SAAS,IAAK,EAAA,CAAA;AAAA,KAC9B;AACA,IAAM,MAAA,MAAM,aAAc,CAAA,YAAA,CAAa,QAAQ,CAAA,CAAA;AAAA,GACjD;AAAA,EAEA,MAAM,wBACJ,kBAC4C,EAAA;AAC5C,IAAA,IAAI,CAAC,kBAAoB,EAAA;AACvB,MAAM,MAAA,IAAI,MAAM,kCAAkC,CAAA,CAAA;AAAA,KACpD;AAEA,IAAM,MAAA,MAAA,GAAU,MAAM,IAAK,CAAA,OAAA;AAAA,MACzB,yBAAyB,kBAAkB,CAAA,OAAA,CAAA;AAAA,MAC3C,EAAC;AAAA,KACH,CAAA;AAEA,IAAA,IAAI,CAAC,MAAA,IAAU,MAAO,CAAA,MAAA,KAAW,CAAG,EAAA;AAClC,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACT;AAEA,IAAO,OAAA,MAAA,CAAA;AAAA,GACT;AAAA,EAEA,MAAM,sBACJ,kBAC0C,EAAA;AAC1C,IAAA,IAAI,CAAC,kBAAoB,EAAA;AACvB,MAAM,MAAA,IAAI,MAAM,kCAAkC,CAAA,CAAA;AAAA,KACpD;AAEA,IAAM,MAAA,MAAA,GAAU,MAAM,IAAK,CAAA,OAAA;AAAA,MACzB,yBAAyB,kBAAkB,CAAA,KAAA,CAAA;AAAA,MAC3C,EAAC;AAAA,KACH,CAAA;AAEA,IAAA,IAAI,CAAC,MAAA,IAAU,MAAO,CAAA,MAAA,KAAW,CAAG,EAAA;AAClC,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACT;AAEA,IAAO,OAAA,MAAA,CAAA;AAAA,GACT;AAAA,EAEA,MAAM,uBACJ,gBACuC,EAAA;AACvC,IAAA,IAAI,CAAC,gBAAkB,EAAA;AACrB,MAAM,MAAA,IAAI,MAAM,+BAA+B,CAAA,CAAA;AAAA,KACjD;AAEA,IAAO,OAAA,IAAA,CAAK,QAAQ,CAAyB,qBAAA,CAAA,EAAA;AAAA,MAC3C,KAAA,EAAO,oBAAoB,gBAAgB,CAAA,EAAA,CAAA;AAAA,MAC3C,QAAU,EAAA,CAAA,iFAAA,CAAA;AAAA,MACV,KAAO,EAAA,GAAA;AAAA,KACR,CAAA,CAAA;AAAA,GACH;AACF;;;;"}