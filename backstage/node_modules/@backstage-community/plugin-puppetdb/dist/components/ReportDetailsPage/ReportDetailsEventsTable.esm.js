import Typography from '@material-ui/core/Typography';
import React from 'react';
import { puppetDbApiRef } from '../../api/types.esm.js';
import '@backstage/errors';
import { ResponseErrorPanel, Table } from '@backstage/core-components';
import useAsync from 'react-use/esm/useAsync';
import { useApi } from '@backstage/core-plugin-api';
import { makeStyles } from '@material-ui/core/styles';
import { StatusField } from '../StatusField/StatusField.esm.js';

const useStyles = makeStyles((theme) => ({
  empty: {
    padding: theme.spacing(2),
    display: "flex",
    justifyContent: "center"
  }
}));
const ReportDetailsEventsTable = (props) => {
  const { hash } = props;
  const puppetDbApi = useApi(puppetDbApiRef);
  const classes = useStyles();
  const { value, loading, error } = useAsync(async () => {
    return puppetDbApi.getPuppetDbReportEvents(hash);
  }, [puppetDbApi, hash]);
  if (error) {
    return /* @__PURE__ */ React.createElement(ResponseErrorPanel, { error });
  }
  const columns = [
    {
      title: "Run Start Time",
      field: "run_start_time",
      align: "center",
      width: "300px",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, new Date(Date.parse(rowData.run_start_time)).toLocaleString())
    },
    {
      title: "Run End Time",
      field: "run_end_time",
      align: "center",
      width: "300px",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, new Date(Date.parse(rowData.run_end_time)).toLocaleString())
    },
    {
      title: "Containing Class",
      field: "containing_class",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true, title: rowData.file || "" }, rowData.containing_class)
    },
    {
      title: "Resource",
      field: "resource_title",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, rowData.resource_type, "[", rowData.resource_title, "]")
    },
    {
      title: "Property",
      field: "property",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, rowData.property)
    },
    {
      title: "Old Value",
      field: "old_value",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, rowData.old_value)
    },
    {
      title: "New Value",
      field: "new_value",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, rowData.new_value)
    },
    {
      title: "Status",
      field: "status",
      render: (rowData) => /* @__PURE__ */ React.createElement(StatusField, { status: rowData.status })
    }
  ];
  return /* @__PURE__ */ React.createElement(
    Table,
    {
      options: {
        sorting: true,
        actionsColumnIndex: -1,
        loadingType: "linear",
        padding: "dense",
        showEmptyDataSourceMessage: !loading,
        showTitle: true,
        toolbar: true,
        pageSize: 10,
        pageSizeOptions: [10]
      },
      emptyContent: /* @__PURE__ */ React.createElement(Typography, { color: "textSecondary", className: classes.empty }, "No events"),
      title: "Latest events",
      columns,
      data: value || [],
      isLoading: loading
    }
  );
};

export { ReportDetailsEventsTable };
//# sourceMappingURL=ReportDetailsEventsTable.esm.js.map
