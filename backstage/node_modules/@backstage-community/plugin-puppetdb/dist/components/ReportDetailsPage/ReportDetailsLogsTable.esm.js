import Typography from '@material-ui/core/Typography';
import React from 'react';
import { puppetDbApiRef } from '../../api/types.esm.js';
import '@backstage/errors';
import { ResponseErrorPanel, Table } from '@backstage/core-components';
import useAsync from 'react-use/esm/useAsync';
import { useApi } from '@backstage/core-plugin-api';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles((theme) => ({
  empty: {
    padding: theme.spacing(2),
    display: "flex",
    justifyContent: "center"
  },
  level_error: {
    color: theme.palette.error.light
  },
  level_warning: {
    color: theme.palette.warning.light
  },
  level_notice: {
    color: theme.palette.info.light
  }
}));
const ReportDetailsLogsTable = (props) => {
  const { hash } = props;
  const puppetDbApi = useApi(puppetDbApiRef);
  const classes = useStyles();
  const { value, loading, error } = useAsync(async () => {
    return puppetDbApi.getPuppetDbReportLogs(hash);
  }, [puppetDbApi, hash]);
  if (error) {
    return /* @__PURE__ */ React.createElement(ResponseErrorPanel, { error });
  }
  const columns = [
    {
      title: "Level",
      field: "level",
      align: "center",
      width: "100px",
      render: (rowData) => /* @__PURE__ */ React.createElement(
        Typography,
        {
          noWrap: true,
          className: rowData.level === "warning" && classes.level_warning || rowData.level === "error" && classes.level_error || classes.level_notice
        },
        rowData.level.toLocaleUpperCase("en-US")
      )
    },
    {
      title: "Timestamp",
      field: "time",
      align: "center",
      width: "300px",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, new Date(Date.parse(rowData.time)).toLocaleString())
    },
    {
      title: "Source",
      field: "source",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, rowData.source)
    },
    {
      title: "Message",
      field: "message",
      render: (rowData) => /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, rowData.message)
    }
  ];
  return /* @__PURE__ */ React.createElement(
    Table,
    {
      options: {
        sorting: true,
        actionsColumnIndex: -1,
        loadingType: "linear",
        padding: "dense",
        showEmptyDataSourceMessage: !loading,
        showTitle: true,
        toolbar: true,
        pageSize: 10,
        pageSizeOptions: [10]
      },
      emptyContent: /* @__PURE__ */ React.createElement(Typography, { color: "textSecondary", className: classes.empty }, "No logs"),
      title: "Latest logs",
      columns,
      data: value || [],
      isLoading: loading
    }
  );
};

export { ReportDetailsLogsTable };
//# sourceMappingURL=ReportDetailsLogsTable.esm.js.map
