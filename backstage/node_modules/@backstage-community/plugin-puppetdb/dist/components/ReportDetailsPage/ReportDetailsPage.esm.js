import { useParams, Link as Link$1 } from 'react-router-dom';
import { Breadcrumbs, Link } from '@backstage/core-components';
import { makeStyles } from '@material-ui/core/styles';
import { useRouteRef } from '@backstage/core-plugin-api';
import { puppetDbRouteRef } from '../../routes.esm.js';
import React, { useState } from 'react';
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import Tab from '@material-ui/core/Tab';
import Box from '@material-ui/core/Box';
import Typography from '@material-ui/core/Typography';
import Tabs from '@material-ui/core/Tabs';
import { ReportDetailsEventsTable } from './ReportDetailsEventsTable.esm.js';
import { ReportDetailsLogsTable } from './ReportDetailsLogsTable.esm.js';

const useStyles = makeStyles((theme) => ({
  cards: {
    marginTop: theme.spacing(2)
  },
  tabs: {
    borderBottom: `1px solid ${theme.palette.textVerySubtle}`,
    backgroundColor: theme.palette.background.default,
    padding: theme.spacing(0, 4)
  },
  default: {
    padding: theme.spacing(2),
    fontWeight: theme.typography.fontWeightBold,
    color: theme.palette.text.secondary,
    textTransform: "uppercase"
  },
  selected: {
    color: theme.palette.text.primary
  }
}));
const ReportDetailsPage = () => {
  const { hash = "" } = useParams();
  const classes = useStyles();
  const [tabIndex, setTabIndex] = useState(0);
  const reportsRouteLink = useRouteRef(puppetDbRouteRef);
  const tabs = [
    { id: "events", label: "Events" },
    { id: "logs", label: "Logs" }
  ];
  const safeTabIndex = tabIndex > tabs.length - 1 ? 0 : tabIndex;
  return /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement(Breadcrumbs, { "aria-label": "breadcrumb" }, /* @__PURE__ */ React.createElement(Link, { component: Link$1, to: reportsRouteLink() }, "PuppetDB Reports"), /* @__PURE__ */ React.createElement(Typography, { noWrap: true }, hash)), /* @__PURE__ */ React.createElement(
    Card,
    {
      style: { position: "relative", overflow: "visible" },
      className: classes.cards
    },
    /* @__PURE__ */ React.createElement(CardContent, null, /* @__PURE__ */ React.createElement(
      Tabs,
      {
        indicatorColor: "primary",
        onChange: (_, index) => setTabIndex(index),
        value: safeTabIndex
      },
      tabs.map((tab, index) => /* @__PURE__ */ React.createElement(
        Tab,
        {
          className: classes.default,
          label: tab.label,
          key: tab.id,
          value: index,
          classes: { selected: classes.selected }
        }
      ))
    ), /* @__PURE__ */ React.createElement(Box, { ml: 2, pt: 2, my: 1, display: "flex", flexDirection: "column" }, safeTabIndex === 0 && /* @__PURE__ */ React.createElement(ReportDetailsEventsTable, { hash }), safeTabIndex === 1 && /* @__PURE__ */ React.createElement(ReportDetailsLogsTable, { hash })))
  ));
};

export { ReportDetailsPage };
//# sourceMappingURL=ReportDetailsPage.esm.js.map
