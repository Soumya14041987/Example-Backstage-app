{"version":3,"file":"ReportsTable.esm.js","sources":["../../../src/components/ReportsPage/ReportsTable.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { puppetDbApiRef, PuppetDbReport } from '../../api';\nimport useAsync from 'react-use/esm/useAsync';\nimport React from 'react';\nimport {\n  Link,\n  ResponseErrorPanel,\n  Table,\n  TableColumn,\n} from '@backstage/core-components';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { puppetDbReportRouteRef } from '../../routes';\nimport { StatusField } from '../StatusField';\n\ntype ReportsTableProps = {\n  certName: string;\n};\n\nconst useStyles = makeStyles(theme => ({\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n/**\n * Component for displaying a table of PuppetDB reports for a given node.\n *\n * @public\n */\nexport const ReportsTable = (props: ReportsTableProps) => {\n  const { certName } = props;\n  const puppetDbApi = useApi(puppetDbApiRef);\n  const reportsRouteLink = useRouteRef(puppetDbReportRouteRef);\n  const classes = useStyles();\n\n  const { value, loading, error } = useAsync(async () => {\n    return puppetDbApi.getPuppetDbNodeReports(certName);\n  }, [puppetDbApi, certName]);\n\n  if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const columns: TableColumn<PuppetDbReport>[] = [\n    {\n      title: 'Configuration Version',\n      field: 'configuration_version',\n      render: rowData => (\n        <Link\n          component={RouterLink}\n          to={reportsRouteLink({ hash: rowData.hash! })}\n        >\n          {rowData.configuration_version !== '' ? (\n            <Typography noWrap>{rowData.configuration_version}</Typography>\n          ) : (\n            <Typography noWrap>\n              <em>(N/A)</em>\n            </Typography>\n          )}\n        </Link>\n      ),\n    },\n    {\n      title: 'Start Time',\n      field: 'start_time',\n      align: 'center',\n      width: '300px',\n      render: rowData => (\n        <Typography noWrap>\n          {new Date(Date.parse(rowData.start_time)).toLocaleString()}\n        </Typography>\n      ),\n    },\n    {\n      title: 'End Time',\n      field: 'end_time',\n      align: 'center',\n      width: '300px',\n      render: rowData => (\n        <Typography noWrap>\n          {new Date(Date.parse(rowData.end_time)).toLocaleString()}\n        </Typography>\n      ),\n    },\n    {\n      title: 'Run Duration',\n      align: 'center',\n      width: '400px',\n      render: rowData => {\n        const start_date = new Date(Date.parse(rowData.start_time));\n        const end_date = new Date(Date.parse(rowData.end_time));\n        const duration = new Date(end_date.getTime() - start_date.getTime());\n        return (\n          <Typography noWrap>\n            {duration.getUTCHours().toString().padStart(2, '0')}:\n            {duration.getUTCMinutes().toString().padStart(2, '0')}:\n            {duration.getUTCSeconds().toString().padStart(2, '0')}.\n            {duration.getUTCMilliseconds().toString().padStart(4, '0')}\n          </Typography>\n        );\n      },\n    },\n    {\n      title: 'Environment',\n      field: 'environment',\n    },\n    {\n      title: 'Mode',\n      field: 'noop',\n      align: 'center',\n      render: rowData =>\n        rowData.noop ? (\n          <Typography>NOOP</Typography>\n        ) : (\n          <Typography>NO-NOOP</Typography>\n        ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      align: 'center',\n      render: rowData => <StatusField status={rowData.status} />,\n    },\n  ];\n\n  return (\n    <Table\n      options={{\n        sorting: true,\n        actionsColumnIndex: -1,\n        loadingType: 'linear',\n        padding: 'dense',\n        showEmptyDataSourceMessage: !loading,\n        showTitle: true,\n        toolbar: true,\n        pageSize: 10,\n        pageSizeOptions: [10],\n      }}\n      emptyContent={\n        <Typography color=\"textSecondary\" className={classes.empty}>\n          No reports\n        </Typography>\n      }\n      title={`Latest PuppetDB reports from node ${certName}`}\n      columns={columns}\n      data={value || []}\n      isLoading={loading}\n    />\n  );\n};\n"],"names":["RouterLink"],"mappings":"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"}