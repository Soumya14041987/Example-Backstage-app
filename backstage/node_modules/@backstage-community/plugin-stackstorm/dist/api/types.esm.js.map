{"version":3,"file":"types.esm.js","sources":["../../src/api/types.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createApiRef } from '@backstage/core-plugin-api';\n\nexport const stackstormApiRef = createApiRef<StackstormApi>({\n  id: 'plugin.stackstorm.service',\n});\n\nexport type Execution = {\n  id: string;\n  action: Action;\n  status: string;\n  start_timestamp: string;\n  end_timestamp: string;\n  result: object;\n  parameters: object;\n  elapsed_seconds: number;\n  log: ExecutionLog[];\n};\n\nexport type ExecutionLog = {\n  status: string;\n  timestamp: string;\n};\n\nexport type Action = {\n  id: string;\n  name: string;\n  ref: string;\n  pack: string;\n  description: string;\n  runner_type: string;\n};\n\nexport type Pack = {\n  ref: string;\n  description: string;\n  version: string;\n};\n\nexport interface StackstormApi {\n  getExecutions(limit: number, offset: number): Promise<Execution[]>;\n  getExecution(id: string): Promise<Execution>;\n  getPacks(): Promise<Pack[]>;\n  getActions(pack: string): Promise<Action[]>;\n  getExecutionHistoryUrl(id: string): string;\n  getActionUrl(ref: string): string;\n}\n"],"names":[],"mappings":";;AAiBO,MAAM,mBAAmB,YAA4B,CAAA;AAAA,EAC1D,EAAI,EAAA,2BAAA;AACN,CAAC;;;;"}