{"version":3,"file":"ActionsList.esm.js","sources":["../../../src/components/ActionsList/ActionsList.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { Link, Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport { Action, Pack, stackstormApiRef } from '../../api';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  actions: {\n    borderBottom: `2px solid ${theme.palette.divider}`,\n  },\n  nested: {\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(4),\n  },\n  icon: {\n    minWidth: '34px',\n  },\n}));\n\ntype ActionItemsProps = {\n  pack: Pack;\n};\n\nexport const ActionItems = ({ pack }: ActionItemsProps) => {\n  const classes = useStyles();\n  const st2 = useApi(stackstormApiRef);\n\n  const { value, loading, error } = useAsync(async (): Promise<Action[]> => {\n    const data = await st2.getActions(pack.ref);\n    return data;\n  }, []);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <List component=\"div\" disablePadding className={classes.actions}>\n      {(value || []).map(a => {\n        return (\n          <ListItem\n            key={a.ref}\n            component={Link}\n            to={st2.getActionUrl(a.ref)}\n            className={classes.nested}\n            underline=\"none\"\n            color=\"inherit\"\n            button\n          >\n            <ListItemText primary={a.name} secondary={a.description} />\n            <ListItemSecondaryAction>{a.runner_type}</ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\ntype PackListItemProps = {\n  pack: Pack;\n  opened: boolean;\n  onClick: (ref: string) => any;\n};\n\nexport const PackListItem = ({ pack, opened, onClick }: PackListItemProps) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <ListItem button onClick={() => onClick(pack.ref)}>\n        <ListItemIcon className={classes.icon}>\n          {opened ? <ExpandLess /> : <ExpandMore />}\n        </ListItemIcon>\n        <ListItemText primary={pack.ref} secondary={pack.description} />\n        <ListItemSecondaryAction>\n          version: {pack.version}\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Collapse in={opened} timeout=\"auto\" unmountOnExit>\n        <ActionItems pack={pack} />\n      </Collapse>\n    </>\n  );\n};\n\nexport const ActionsList = () => {\n  const st2 = useApi(stackstormApiRef);\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState<string[]>([]);\n\n  const onClick = (ref: string) => {\n    setExpanded(refs =>\n      refs.includes(ref) ? refs.filter(r => r !== ref) : refs.concat(ref),\n    );\n  };\n\n  const { value, loading, error } = useAsync(async (): Promise<Pack[]> => {\n    const data = await st2.getPacks();\n    return data;\n  }, []);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      {(value || []).map(p => {\n        return (\n          <PackListItem\n            key={p.ref}\n            pack={p}\n            opened={expanded.includes(p.ref)}\n            onClick={onClick}\n          />\n        );\n      })}\n    </List>\n  );\n};\n"],"names":[],"mappings":"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"}