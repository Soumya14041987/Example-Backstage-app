import { createPlugin, createApiFactory, configApiRef, discoveryApiRef, fetchApiRef, createRoutableExtension } from '@backstage/core-plugin-api';
import { stackstormApiRef } from './api/types.esm.js';
import { StackstormClient } from './api/StackstormClient.esm.js';
import { rootRouteRef } from './routes.esm.js';

const stackstormPlugin = createPlugin({
  id: "stackstorm",
  apis: [
    createApiFactory({
      api: stackstormApiRef,
      deps: {
        configApi: configApiRef,
        discoveryApi: discoveryApiRef,
        fetchApi: fetchApiRef
      },
      factory: ({ configApi, discoveryApi, fetchApi }) => StackstormClient.fromConfig(configApi, {
        discoveryApi,
        fetchApi
      })
    })
  ],
  routes: {
    root: rootRouteRef
  }
});
const StackstormPage = stackstormPlugin.provide(
  createRoutableExtension({
    name: "StackstormPage",
    component: () => import('./components/StackstormHome/index.esm.js').then((m) => m.StackstormHome),
    mountPoint: rootRouteRef
  })
);

export { StackstormPage, stackstormPlugin };
//# sourceMappingURL=plugin.esm.js.map
