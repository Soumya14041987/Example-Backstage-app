{"version":3,"file":"index-f8a1c12a.esm.js","sources":["../../src/api/types.ts","../../src/api/ScoringDataApi.ts","../../src/api/ScoringDataJsonClient.ts","../../src/routes.ts","../../src/helpers/scoreToColorConverter.ts","../../src/helpers/getWarningPanel.tsx","../../src/config/types.ts","../../src/config/DisplayConfig.ts","../../src/components/ScoreCardTable/ScoreCardTable.tsx","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CompoundEntityRef } from '@backstage/catalog-model';\n\nexport enum ScoreSuccessEnum {\n  Success = 'success',\n  AlmostSuccess = 'almost-success',\n  Partial = 'partial',\n  AlmostFailure = 'almost-failure',\n  Failure = 'failure',\n}\n\nexport interface EntityScore {\n  entityRef: CompoundEntityRef;\n  generatedDateTimeUtc: Date | string;\n  scorePercent: number;\n  scoreLabel?: string;\n  scoreSuccess: ScoreSuccessEnum;\n  scoringReviewer: string | CompoundEntityRef | undefined | null;\n  scoringReviewDate: Date | string | undefined | null;\n  areaScores: EntityScoreArea[];\n}\n\nexport interface EntityScoreArea {\n  id: number;\n  title: string;\n  scorePercent: number;\n  scoreLabel?: string;\n  scoreSuccess: ScoreSuccessEnum;\n  scoreEntries: EntityScoreEntry[];\n}\n\nexport interface EntityScoreEntry {\n  id: number;\n  title: string;\n  isOptional: boolean;\n  scorePercent: number;\n  scoreLabel?: string;\n  scoreSuccess: ScoreSuccessEnum;\n  scoreHints: string | string[];\n  details: string;\n}\n\nexport interface EntityScoreExtended extends EntityScore {\n  id: string;\n  owner: CompoundEntityRef | undefined;\n  reviewer: CompoundEntityRef | undefined;\n  reviewDate: Date | undefined;\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { EntityScoreExtended } from './types';\n\nexport const scoringDataApiRef = createApiRef<ScoringDataApi>({\n  id: 'plugin.scoringdata.service',\n});\n\nexport type ScoringDataApi = {\n  getScore(entity?: Entity): Promise<EntityScoreExtended | undefined>;\n  getAllScores(\n    entityKindFilter?: string[],\n    entity?: Entity,\n  ): Promise<EntityScoreExtended[] | undefined>;\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ScoringDataApi } from './ScoringDataApi';\nimport { ConfigApi, FetchApi } from '@backstage/core-plugin-api';\nimport { EntityScore, EntityScoreExtended } from './types';\nimport { CatalogApi } from '@backstage/plugin-catalog-react';\nimport {\n  Entity,\n  CompoundEntityRef,\n  parseEntityRef,\n  RELATION_OWNED_BY,\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { ScmAuthApi } from '@backstage/integration-react';\nimport {\n  ScmIntegrationRegistry,\n  GithubIntegration,\n  getGithubFileFetchUrl,\n} from '@backstage/integration';\n/**\n * Default JSON data client. Expects JSON files in a format see /sample-data\n */\nexport class ScoringDataJsonClient implements ScoringDataApi {\n  configApi: ConfigApi;\n  catalogApi: CatalogApi;\n  fetchApi: FetchApi;\n  scmAuthApi: ScmAuthApi;\n  scmIntegrationsApi: ScmIntegrationRegistry;\n\n  constructor({\n    configApi,\n    catalogApi,\n    fetchApi,\n    scmAuthApi,\n    scmIntegrationsApi,\n  }: {\n    configApi: ConfigApi;\n    catalogApi: CatalogApi;\n    fetchApi: FetchApi;\n    scmAuthApi: ScmAuthApi;\n    scmIntegrationsApi: ScmIntegrationRegistry;\n  }) {\n    this.configApi = configApi;\n    this.catalogApi = catalogApi;\n    this.fetchApi = fetchApi;\n    this.scmAuthApi = scmAuthApi;\n    this.scmIntegrationsApi = scmIntegrationsApi;\n  }\n\n  public async getScore(\n    entity?: Entity,\n  ): Promise<EntityScoreExtended | undefined> {\n    if (!entity) {\n      return undefined;\n    }\n    const jsonFromAnnotation = this.getAnnotationValue(\n      entity,\n      'scorecard/jsonDataUrl',\n    );\n\n    let urlWithData: string;\n\n    if (jsonFromAnnotation) {\n      urlWithData = jsonFromAnnotation;\n    } else {\n      const jsonDataUrl = this.getJsonDataUrl();\n      urlWithData = `${jsonDataUrl}${\n        entity.metadata.namespace ?? DEFAULT_NAMESPACE\n      }/${entity.kind}/${entity.metadata.name}.json`.toLowerCase();\n    }\n\n    this.logConsole(\n      `ScoringDataJsonClient: fetching score from: ${urlWithData}`,\n    );\n    const result: EntityScore | undefined = await this.getResult<EntityScore>(\n      urlWithData,\n    );\n    if (!result) {\n      return undefined;\n    }\n    return this.extendEntityScore(result, [entity]);\n  }\n\n  public async getAllScores(\n    entityKindFilter?: string[],\n    entity?: Entity,\n  ): Promise<EntityScoreExtended[] | undefined> {\n    const jsonFromAnnotation = entity\n      ? this.getAnnotationValue(entity, 'scorecard/jsonDataUrl')\n      : undefined;\n\n    let urlWithData;\n    if (jsonFromAnnotation) {\n      urlWithData = jsonFromAnnotation;\n    } else {\n      const jsonDataUrl = this.getJsonDataUrl();\n      urlWithData = `${jsonDataUrl}all.json`;\n    }\n\n    this.logConsole(\n      `ScoringDataJsonClient: fetching all scores from ${urlWithData}`,\n    );\n    let result: EntityScore[] | undefined = await this.getResult<EntityScore[]>(\n      urlWithData,\n    );\n\n    if (!result) return undefined;\n\n    // Filter entities by kind\n    if (entityKindFilter && entityKindFilter.length) {\n      result = result.filter(e =>\n        entityKindFilter\n          .map(f => f.toLocaleLowerCase())\n          .includes(e.entityRef?.kind.toLowerCase() as string),\n      );\n    }\n\n    const entity_names: Set<string> = result.reduce((acc, a) => {\n      if (a.entityRef?.name) {\n        acc.add(a.entityRef.name);\n      }\n      return acc;\n    }, new Set<string>());\n\n    const fetchAllEntities =\n      this.configApi.getOptionalBoolean('scorecards.fetchAllEntities') ?? false;\n    const response = await this.catalogApi.getEntities({\n      filter: fetchAllEntities\n        ? undefined\n        : {\n            'metadata.name': Array.from(entity_names),\n          },\n      fields: ['kind', 'metadata.name', 'spec.owner', 'relations'],\n    });\n    const entities: Entity[] = fetchAllEntities\n      ? response.items.filter(i => entity_names.has(i.metadata.name))\n      : response.items;\n\n    return result.map<EntityScoreExtended>((score: EntityScore) => {\n      return this.extendEntityScore(score, entities);\n    });\n  }\n\n  // ---- HELPER METHODS ---- //\n\n  private logConsole(_: string) {\n    // eslint-disable-next-line no-console\n    // console.log(msg);\n  }\n\n  private async getResult<T>(jsonDataUrl: string): Promise<T | undefined> {\n    // Find out if we have an configured integration for the given URL\n    const integration = this.scmIntegrationsApi.byUrl(jsonDataUrl);\n\n    // Find any configured authentication for the URL\n    let auth;\n    try {\n      auth = await this.scmAuthApi.getCredentials({ url: jsonDataUrl });\n    } catch (error) {\n      this.logConsole(\n        `No authentication config found for ${jsonDataUrl}, proceeding without authentication`,\n      );\n    }\n\n    // perform any custom config for the integration type\n    let requestUrl;\n    let headers = {};\n    switch (integration?.type) {\n      case 'github':\n        requestUrl = getGithubFileFetchUrl(\n          jsonDataUrl,\n          (integration as GithubIntegration).config,\n          { ...auth, type: 'token' },\n        );\n        headers = {\n          ...(auth && auth.headers),\n          Accept: 'application/vnd.github.v3.raw',\n        };\n        break;\n      default:\n        requestUrl = jsonDataUrl;\n        break;\n    }\n\n    try {\n      const result = await this.fetchApi.fetch(requestUrl, {\n        headers,\n      });\n\n      if (result.status === 404) {\n        return undefined;\n      } else if (result.status !== 200) {\n        return undefined;\n      }\n      const json = (await result.json()) as T;\n      this.logConsole(`result: ${JSON.stringify(json)}`);\n      return json;\n    } catch (error) {\n      throw new Error(`error from server (code ${error.status})`);\n    }\n  }\n\n  private getJsonDataUrl() {\n    return (\n      this.configApi.getOptionalString('scorecards.jsonDataUrl') ??\n      'https://unknown-url-please-configure/'\n    );\n  }\n\n  private extendEntityScore(\n    score: EntityScore,\n    entities: Entity[] | undefined,\n  ): EntityScoreExtended {\n    if (score === null) {\n      throw new Error(`can not extend null entity score.`);\n    }\n    if (typeof score === 'undefined') {\n      throw new Error(`can not extend undefined entity score.`);\n    }\n\n    const catalogEntity = entities\n      ? entities.find(entity => entity.metadata.name === score.entityRef?.name)\n      : undefined;\n\n    const owner = catalogEntity?.relations?.find(\n      r => r.type === RELATION_OWNED_BY,\n    )?.targetRef;\n\n    let reviewer = undefined;\n    if (\n      score.scoringReviewer &&\n      !(score.scoringReviewer as CompoundEntityRef)?.name\n    ) {\n      reviewer = {\n        name: score.scoringReviewer as string,\n        kind: 'User',\n        namespace: 'default',\n      };\n    } else if ((score.scoringReviewer as CompoundEntityRef)?.name) {\n      const scoringReviewer = score.scoringReviewer as CompoundEntityRef;\n      reviewer = {\n        name: scoringReviewer.name,\n        kind: scoringReviewer?.kind ?? 'User',\n        namespace: scoringReviewer?.namespace ?? DEFAULT_NAMESPACE,\n      };\n    }\n\n    const reviewDate = score.scoringReviewDate\n      ? new Date(score.scoringReviewDate)\n      : undefined;\n    return {\n      id: stringifyEntityRef(score.entityRef),\n      owner: owner ? parseEntityRef(owner) : undefined,\n      reviewer: reviewer,\n      reviewDate: reviewDate,\n      ...score,\n    };\n  }\n\n  private getAnnotationValue(entity: Entity, annotation: string) {\n    if (!entity.metadata.annotations) {\n      return undefined;\n    }\n\n    if (annotation && !entity.metadata.annotations[annotation]) {\n      return undefined;\n    }\n    return entity.metadata.annotations[annotation];\n  }\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'score-card',\n});\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createTheme } from '@material-ui/core/styles';\nimport { ScoreSuccessEnum } from '../api';\n\nexport const scoreToColorConverter = (\n  scoreSuccess: ScoreSuccessEnum | undefined,\n): string => {\n  const theme = createTheme();\n  if (typeof scoreSuccess === 'undefined') {\n    return theme.palette.grey[500];\n  }\n  switch (scoreSuccess) {\n    // see palette https://coolors.co/72af50-acbf8c-e2e8b3-ffc055-eb6f35\n    case ScoreSuccessEnum.Success:\n      return 'rgb(114, 175, 80)';\n    case ScoreSuccessEnum.AlmostSuccess:\n      return 'rgb(172, 191, 140)';\n    case ScoreSuccessEnum.Partial:\n      return 'rgb(226, 232, 179)';\n    case ScoreSuccessEnum.AlmostFailure:\n      return 'rgb(255, 192, 85)';\n    case ScoreSuccessEnum.Failure:\n      return 'rgb(235, 111, 53)';\n    default:\n      return theme.palette.grey[500];\n  }\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseErrorPanel } from '@backstage/core-components';\nimport React from 'react';\n\nexport const getWarningPanel = (error: Error) => {\n  return (\n    <ResponseErrorPanel\n      error={error}\n      title=\"Could not load data\"\n      defaultExpanded\n      key=\"error\"\n    />\n  );\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DisplayPolicy {\n  IfDataPresent = 'if-data-present',\n  Never = 'never',\n  Always = 'always',\n}\n\nexport interface DisplayPolicies {\n  reviewer: DisplayPolicy;\n  reviewDate: DisplayPolicy;\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigApi, configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { DisplayPolicies, DisplayPolicy } from './types';\n\nexport class DisplayConfig {\n  configApi: ConfigApi;\n\n  constructor({ configApi }: { configApi: ConfigApi }) {\n    this.configApi = configApi;\n  }\n\n  public getDisplayPolicies(): DisplayPolicies {\n    const displayConfig =\n      this.configApi.getOptionalConfig('scorecards.display');\n    return {\n      reviewer:\n        (displayConfig?.getOptionalString('reviewer') as DisplayPolicy) ??\n        DisplayPolicy.Always,\n      reviewDate:\n        (displayConfig?.getOptionalString('reviewDate') as DisplayPolicy) ??\n        DisplayPolicy.Always,\n    };\n  }\n}\n\nexport const useDisplayConfig = () => {\n  const configApi = useApi(configApiRef);\n  return new DisplayConfig({ configApi });\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect } from 'react';\nimport { Table, TableColumn, Progress, Link } from '@backstage/core-components';\nimport useAsync from 'react-use/lib/useAsync';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { scoreToColorConverter } from '../../helpers/scoreToColorConverter';\nimport { Chip } from '@material-ui/core';\nimport { getWarningPanel } from '../../helpers/getWarningPanel';\nimport { scoringDataApiRef } from '../../api';\nimport { EntityScoreExtended } from '../../api/types';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport { DEFAULT_NAMESPACE, Entity } from '@backstage/catalog-model';\nimport { useDisplayConfig } from '../../config/DisplayConfig';\nimport { DisplayPolicy } from '../../config/types';\n\nconst useScoringAllDataLoader = (\n  entityKindFilter?: string[],\n  entity?: Entity,\n) => {\n  const errorApi = useApi(errorApiRef);\n  const scorigDataApi = useApi(scoringDataApiRef);\n\n  const { error, value, loading } = useAsync(\n    async () => scorigDataApi.getAllScores(entityKindFilter, entity),\n    [scorigDataApi],\n  );\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return { loading, value, error };\n};\n\ntype ScoreTableProps = {\n  title?: string;\n  scores: EntityScoreExtended[];\n};\n\nexport const ScoreTable = ({ title, scores }: ScoreTableProps) => {\n  const displayPolicies = useDisplayConfig().getDisplayPolicies();\n\n  const columns: TableColumn<EntityScoreExtended>[] = [\n    {\n      title: 'Name',\n      field: 'entityRef.name',\n      render: entityScore => {\n        if (!entityScore.entityRef?.name) {\n          return <>Missing entityRef.name key</>;\n        }\n\n        return (\n          <Link\n            to={`/catalog/${\n              entityScore.entityRef.namespace ?? DEFAULT_NAMESPACE\n            }/${entityScore.entityRef.kind}/${\n              entityScore.entityRef.name\n            }/score`}\n            data-id={entityScore.entityRef.name}\n          >\n            {entityScore.entityRef.name}\n          </Link>\n        );\n      },\n    },\n    {\n      title: 'Kind',\n      field: 'entityRef.kind',\n      render: entityScore => {\n        return <>{entityScore.entityRef.kind}</>;\n      },\n    },\n    {\n      title: 'Owner',\n      field: 'owner.name',\n      render: entityScore =>\n        entityScore.owner ? (\n          <>\n            <EntityRefLink entityRef={entityScore.owner}>\n              {entityScore.owner.name}\n            </EntityRefLink>\n          </>\n        ) : null,\n    },\n  ];\n\n  if (\n    displayPolicies.reviewer === DisplayPolicy.Always ||\n    (displayPolicies.reviewer === DisplayPolicy.IfDataPresent &&\n      scores.some(s => !!s.scoringReviewer))\n  ) {\n    columns.push({\n      title: 'Reviewer',\n      field: 'scoringReviewer',\n      render: entityScore =>\n        entityScore.reviewer ? (\n          <>\n            <EntityRefLink entityRef={entityScore.reviewer}>\n              {entityScore.reviewer?.name}\n            </EntityRefLink>\n          </>\n        ) : null,\n    });\n  }\n\n  if (\n    displayPolicies.reviewDate === DisplayPolicy.Always ||\n    (displayPolicies.reviewDate === DisplayPolicy.IfDataPresent &&\n      scores.some(s => !!s.scoringReviewDate))\n  ) {\n    columns.push({\n      title: 'Date',\n      field: 'scoringReviewDate',\n      render: entityScore =>\n        entityScore.reviewDate ? (\n          <>{entityScore.reviewDate.toLocaleDateString()}</>\n        ) : null,\n    });\n  }\n\n  scores\n    .flatMap(s => {\n      return s.areaScores ?? [];\n    })\n    .reduce<string[]>((areas, area) => {\n      if (!area || !area.title || areas.findIndex(x => x === area.title) !== -1)\n        return areas;\n      areas.push(area.title);\n      columns.push({\n        title: area.title,\n        field: 'n/a',\n        customSort: (d1, d2) => {\n          const d1ScoreEntry = d1?.areaScores\n            ? d1.areaScores.find(a => a.title === area.title)?.scorePercent\n            : undefined;\n          const d2ScoreEntry = d2?.areaScores\n            ? d2.areaScores.find(a => a.title === area.title)?.scorePercent\n            : undefined;\n          if (!d1ScoreEntry || d1ScoreEntry < (d2ScoreEntry ?? 0)) return -1;\n          if (!d2ScoreEntry || d2ScoreEntry < d1ScoreEntry) return 1;\n          return 0;\n        },\n        render: entityScoreEntry => {\n          const currentScoreEntry = entityScoreEntry?.areaScores\n            ? entityScoreEntry.areaScores.find(a => a.title === area.title)\n            : undefined;\n          const chipStyle: React.CSSProperties = {\n            margin: 0,\n            backgroundColor: scoreToColorConverter(\n              currentScoreEntry?.scoreSuccess,\n            ),\n            minWidth: '4rem',\n          };\n          const label =\n            currentScoreEntry?.scoreLabel ??\n            `${currentScoreEntry?.scorePercent} %`;\n          return typeof currentScoreEntry?.scorePercent !== 'undefined' ? (\n            <Chip label={label} style={chipStyle} />\n          ) : null;\n        },\n      });\n      return areas;\n    }, []);\n\n  columns.push({\n    title: 'Total',\n    align: 'right',\n    field: 'scorePercent',\n    render: entityScoreEntry => {\n      const chipStyle: React.CSSProperties = {\n        margin: 0,\n        backgroundColor: scoreToColorConverter(entityScoreEntry?.scoreSuccess),\n        float: 'right',\n        minWidth: '4rem',\n      };\n      const label =\n        entityScoreEntry?.scoreLabel ?? `${entityScoreEntry?.scorePercent} %`;\n      return typeof entityScoreEntry.scorePercent !== 'undefined' ? (\n        <Chip label={label} style={chipStyle} />\n      ) : null;\n    },\n  });\n\n  // in case we have less then 10 entities let's show at least 10 rows\n  const minDefaultPageSizeOption = scores.length >= 10 ? scores.length : 10;\n  // so in case we have less then 100 entities we want to see them all in one page after load\n  const maxDefaultPageSizeOption =\n    scores.length < 100 ? minDefaultPageSizeOption : 100;\n  // so now we are in a situation, when\n  // count(entities) | minDefaultPageSizeOption | maxDefaultPageSizeOption | defaultPageSizeOption\n  //   0 |  10 |  10 |  10\n  //   5 |  10 |  10 |  10\n  //  10 |  10 |  10 |  10\n  //  50 |  50 |  50 |  50\n  // 100 | 100 | 100 | 100\n  // 150 | 150 | 100 | 100\n  const defaultPageSizeOption =\n    minDefaultPageSizeOption > maxDefaultPageSizeOption\n      ? maxDefaultPageSizeOption\n      : minDefaultPageSizeOption;\n\n  return (\n    <div data-testid=\"score-board-table\">\n      <Table<EntityScoreExtended>\n        title={title ?? 'Entities scores overview'}\n        options={{\n          search: true,\n          paging: true,\n          padding: 'dense',\n          pageSize: defaultPageSizeOption,\n          pageSizeOptions: [defaultPageSizeOption, 20, 50, 100, 200],\n        }}\n        columns={columns}\n        data={scores}\n      />\n    </div>\n  );\n};\n\ntype ScoreCardTableProps = {\n  title?: string;\n  entityKindFilter?: string[];\n  entity?: Entity;\n};\nexport const ScoreCardTable = ({\n  title,\n  entityKindFilter,\n  entity,\n}: ScoreCardTableProps) => {\n  const {\n    loading,\n    error,\n    value: data,\n  } = useScoringAllDataLoader(entityKindFilter, entity);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return getWarningPanel(error);\n  }\n\n  return <ScoreTable title={title} scores={data || []} />;\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createPlugin,\n  createRoutableExtension,\n  createComponentExtension,\n  createApiFactory,\n  fetchApiRef,\n  configApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  scmAuthApiRef,\n  scmIntegrationsApiRef,\n} from '@backstage/integration-react';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { ScoringDataJsonClient, scoringDataApiRef } from './api';\nimport { rootRouteRef } from './routes';\n\nexport { ScoreCardTable } from './components/ScoreCardTable';\n\nexport const scoreCardPlugin = createPlugin({\n  id: 'score-card',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: scoringDataApiRef,\n      deps: {\n        configApi: configApiRef,\n        catalogApi: catalogApiRef,\n        fetchApi: fetchApiRef,\n        scmAuthApi: scmAuthApiRef,\n        scmIntegrationsApi: scmIntegrationsApiRef,\n      },\n      factory: ({\n        configApi,\n        catalogApi,\n        fetchApi,\n        scmAuthApi,\n        scmIntegrationsApi,\n      }) => {\n        return new ScoringDataJsonClient({\n          configApi,\n          catalogApi,\n          fetchApi,\n          scmAuthApi,\n          scmIntegrationsApi,\n        });\n      },\n    }),\n  ],\n});\n\nexport const ScoreBoardPage = scoreCardPlugin.provide(\n  createRoutableExtension({\n    name: 'score-board-page',\n    component: () =>\n      import('./components/ScoreBoardPage').then(m => m.ScoreBoardPage),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const EntityScoreCardContent = scoreCardPlugin.provide(\n  createComponentExtension({\n    name: 'score-board-card',\n    component: {\n      lazy: () => import('./components/ScoreCard').then(m => m.ScoreCard),\n    },\n  }),\n);\n\nexport const EntityScoreCardTable = scoreCardPlugin.provide(\n  createComponentExtension({\n    name: 'entity-score-card-table',\n    component: {\n      lazy: () =>\n        import('./components/EntityScoreCardTable').then(\n          m => m.EntityScoreCardTable,\n        ),\n    },\n  }),\n);\n"],"names":["ScoreSuccessEnum","__publicField","_a","DisplayPolicy"],"mappings":"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"}