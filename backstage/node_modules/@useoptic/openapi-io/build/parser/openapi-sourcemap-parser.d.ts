import { JsonSchemaSourcemap } from './sourcemap';
import { ExternalRefHandler } from './types';
import { UserDefinedHeadersByUrlPrefix } from './resolvers/custom-http-ref-handler';
import { FlatOpenAPIV2, FlatOpenAPIV3, FlatOpenAPIV3_1 } from '@useoptic/openapi-utilities';
export { JSONParserError, ResolverError, } from '@apidevtools/json-schema-ref-parser';
export type ParseOpenAPIResult<T extends FlatOpenAPIV2.Document | FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document> = {
    jsonLike: T;
    sourcemap: JsonSchemaSourcemap;
};
export declare function dereferenceOpenApi<T extends FlatOpenAPIV2.Document | FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document>(path: string, options?: {
    externalRefHandler?: ExternalRefHandler;
    externalRefHeaders?: UserDefinedHeadersByUrlPrefix;
}): Promise<ParseOpenAPIResult<T>>;
export declare function parseOpenAPIWithSourcemap<T extends FlatOpenAPIV2.Document | FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document>(path: string, options?: {
    externalRefHeaders?: UserDefinedHeadersByUrlPrefix;
}): Promise<ParseOpenAPIResult<T>>;
export declare function parseOpenAPIFromRepoWithSourcemap<T extends FlatOpenAPIV2.Document | FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document>(name: string, repoPath: string, branch: string, options?: {
    externalRefHeaders?: UserDefinedHeadersByUrlPrefix;
}): Promise<ParseOpenAPIResult<T>>;
//# sourceMappingURL=openapi-sourcemap-parser.d.ts.map