import { SerializedSourcemap } from '@useoptic/openapi-utilities';
export type JsonPath = string;
export type FileReference = number;
export type ToSource = [FileReference, JsonPath];
export declare class JsonSchemaSourcemap {
    rootFilePath: string;
    static fromSerializedSourcemap(serialized: SerializedSourcemap): JsonSchemaSourcemap;
    constructor(rootFilePath: string);
    files: Array<{
        path: string;
        index: number;
        contents: string;
        sha256: string;
    }>;
    refMappings: {
        [key: JsonPath]: ToSource;
    };
    addFileIfMissing(filePath: string, fileIndex: number): Promise<void>;
    addFileIfMissingFromContents(filePath: string, contents: string, fileIndex: number): void;
    logPointerInFile(filePath: string, sourcePointer: string, targetPointer: string): void;
    logPointer(pathRelativeToFile: string, pathRelativeToRoot: string): void;
}
//# sourceMappingURL=sourcemap.d.ts.map