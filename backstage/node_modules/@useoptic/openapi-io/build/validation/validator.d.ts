import { OpenAPI } from 'openapi-types';
import { ErrorObject } from 'ajv';
import { JsonSchemaSourcemap } from '../parser/sourcemap';
import { FlatOpenAPIV2, FlatOpenAPIV3 } from '@useoptic/openapi-utilities';
type Options = {
    strictOpenAPI: boolean;
};
export default class OpenAPISchemaValidator {
    private options;
    constructor(options: Options);
    validate2(openapiDoc: OpenAPI.Document): {
        errors: ErrorObject[];
    };
    validate3_0(openapiDoc: OpenAPI.Document): {
        errors: ErrorObject[];
    };
    validate3_1(openapiDoc: OpenAPI.Document): {
        errors: ErrorObject[];
    };
}
export declare const processValidatorErrors: (spec: any, errors: ErrorObject[], sourcemap?: JsonSchemaSourcemap) => string[];
export declare const validateSwaggerV2Document: (spec: any, sourcemap?: JsonSchemaSourcemap, validatorOptions?: Options) => FlatOpenAPIV2.Document;
export declare const validateOpenApiV3Document: (spec: any, sourcemap?: JsonSchemaSourcemap, validatorOptions?: Options) => FlatOpenAPIV3.Document;
export {};
//# sourceMappingURL=validator.d.ts.map