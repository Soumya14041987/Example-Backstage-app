"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createOpticClient = exports.anonymizeUserToken = exports.anonymizeOrgToken = exports.OpticBackendClient = void 0;
var _nodeFetch = _interopRequireDefault(require("node-fetch"));
var _JsonHttpClient = require("./JsonHttpClient");
class OpticBackendClient extends _JsonHttpClient.JsonHttpClient {
  constructor(baseUrl, getAuthToken) {
    super();
    this.baseUrl = baseUrl;
    this.getAuthToken = getAuthToken;
    this.source = 'optic';
  }

  // @ts-ignore
  fetch = async (requestUri, options = {}) => {
    const token = await this.getAuthToken();
    const headers = options.headers || {};
    return (0, _nodeFetch.default)(`${this.baseUrl}${requestUri}`, {
      ...options,
      headers: {
        ...headers,
        Authorization: `Token ${token}`
      }
    });
  };
  getWebBase() {
    return process.env.OPTIC_ENV === 'staging' ? 'https://app.o3c.info' : process.env.OPTIC_ENV === 'local' ? 'http://localhost:3001' : 'https://app.useoptic.com';
  }
}
exports.OpticBackendClient = OpticBackendClient;
const createOpticClient = opticToken => {
  const hostOverride = process.env.BWTS_HOST_OVERRIDE;
  const backendWebBase = hostOverride ? hostOverride : process.env.OPTIC_ENV === 'staging' ? 'https://api.o3c.info' : process.env.OPTIC_ENV === 'local' ? 'http://127.0.0.1:3030' : 'https://api.useoptic.com';
  const opticClient = new OpticBackendClient(backendWebBase, () => Promise.resolve(opticToken));
  return opticClient;
};
exports.createOpticClient = createOpticClient;
const anonymizeUserToken = token => token.slice(4).split('.')[0];
exports.anonymizeUserToken = anonymizeUserToken;
const anonymizeOrgToken = token => token.split('.')[0];
exports.anonymizeOrgToken = anonymizeOrgToken;