import { OpenAPIV3, ApiCoverage, FlatOpenAPIV3, FlatOpenAPIV3_1 } from '@useoptic/openapi-utilities';
import { ShapeDiffResultKind } from '../patches/patchers/shapes/diff';
import { OperationDiffResultKind } from '../patches/patchers/spec/types';
export declare class ApiCoverageCounter {
    coverage: ApiCoverage;
    constructor(spec: FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document);
    addEndpoint(operation: OpenAPIV3.OperationObject, path: string, method: string, options: {
        newlyDocumented: boolean;
    }): void;
    operationInteraction: (pathPattern: string, method: string, hasRequestBody: boolean, statusCode?: string) => void;
    shapeDiff: (patch: {
        path: string;
    } & ({
        unpatchable: boolean;
    } | {
        diff?: {
            kind: ShapeDiffResultKind | OperationDiffResultKind | undefined;
        };
    })) => void;
    calculateCoverage: () => {
        branches: number;
        count: number;
        percent: string;
        totalRequests: number;
    };
    renderCoverage: () => void;
}
//# sourceMappingURL=api-coverage.d.ts.map