"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.captureConfigExample = captureConfigExample;
exports.initCaptureConfig = initCaptureConfig;
var _yaml = _interopRequireDefault(require("yaml"));
var _writeOpticConfig = require("../../utils/write-optic-config");
async function initCaptureConfig(oasFile, skipConfigUpdate, config) {
  const captureExample = captureConfigExample(oasFile, skipConfigUpdate);
  const parsedExample = _yaml.default.parseDocument(captureExample);
  if (skipConfigUpdate) {
    // console.log() to skip any future formatting changes we might make to logger
    console.log(parsedExample.toString());
    console.log('');
    return;
  }
  return (0, _writeOpticConfig.updateOpticConfig)(parsedExample, oasFile, config);
}

// returns a complete Capture block example
function captureConfigExample(oasFile, skipConfigUpdate) {
  return `
${skipConfigUpdate ? `capture:\n  ${oasFile}:` : ''}    
    # Complete reference documentation for this configuration file is available:
    #   https://www.useoptic.com/docs/capturing-traffic#configuration-reference

    # Run with "optic capture ${oasFile} --update interactive"
    server:
      url: https://echo.o3c.org
    requests:
      send: 
        - path: /users
          headers:
            x-response-json: '[{"id":0, "name":"aidan"}]'
        - path: /users/create
          method: POST
          data:
            name: nic
          headers:
            x-response-json: '{"id":1, "name":"nic"}'
            x-response-code: "201"
  `;
}