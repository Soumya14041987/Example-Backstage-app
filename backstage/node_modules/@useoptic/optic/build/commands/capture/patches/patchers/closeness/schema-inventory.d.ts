import { FlatOpenAPIV3, FlatOpenAPIV3_1 } from '@useoptic/openapi-utilities';
import { SpecPatches } from '../spec/patches';
type ClosestMatch = {
    ref: string;
    percent: number;
} | undefined;
export declare class SchemaInventory {
    private closeness;
    constructor(closeness?: number);
    private schemaMap;
    addSchemas(rootJsonpath: string, schemas: {
        [key: string]: FlatOpenAPIV3.SchemaObject | undefined;
    }): void;
    findClosest(generatedSchema: FlatOpenAPIV3.SchemaObject): ClosestMatch;
    refsForAdditions(addedPaths: Set<string>, spec: FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document, meta?: {
        usedExistingRef?: boolean;
    }): SpecPatches;
}
export {};
//# sourceMappingURL=schema-inventory.d.ts.map