import { ShapeDiffResult, UnpatchableDiff } from './diff';
import { SupportedOpenAPIVersions } from '@useoptic/openapi-io';
import { PatchImpact, PatchOperation } from '../../patch-operations';
import { SchemaObject } from './schema';
import { DocumentedBody, ShapeLocation } from './documented-bodies';
import { CapturedInteraction } from '../../../sources/captured-interactions';
import { OperationDiffResult } from '../spec/types';
export declare function generateShapePatchesByDiff(diff: ShapeDiffResult, schema: SchemaObject, interaction: CapturedInteraction, shapeContext: {
    location?: ShapeLocation;
}, openAPIVersion: SupportedOpenAPIVersions): IterableIterator<ShapePatch>;
export interface ShapePatch {
    description: string;
    interaction: CapturedInteraction;
    diff: ShapeDiffResult | OperationDiffResult | undefined;
    impact: PatchImpact[];
    groupedOperations: PatchOperation[];
    shouldRegeneratePatches?: boolean;
}
export declare class ShapePatch {
    static operations(patch: ShapePatch): IterableIterator<PatchOperation>;
    static isAddition(patch: ShapePatch): boolean;
}
export interface ShapePatches extends Iterable<ShapePatch> {
}
export declare class ShapePatches {
    static generateBodyAdditions(documentedBody: DocumentedBody, openAPIVersion: SupportedOpenAPIVersions): Iterable<ShapePatch | UnpatchableDiff>;
}
//# sourceMappingURL=patches.d.ts.map