import { OpenAPIV3 } from '@useoptic/openapi-utilities';
import { HttpArchive, HarEntries } from './har';
import { PostmanEntry, PostmanCollectionEntries } from './postman';
import { CapturedBody } from './body';
type Header = {
    name: string;
    value: string;
};
type Query = {
    name: string;
    value: string;
};
export interface CapturedInteraction {
    request: {
        host: string;
        method: OpenAPIV3.HttpMethods;
        path: string;
        body: CapturedBody | null;
        headers: Header[];
        query: Query[];
    };
    response?: {
        statusCode: string;
        body: CapturedBody | null;
        headers: Header[];
    };
}
export declare class CapturedInteraction {
    static fromHarEntry(entry: HttpArchive.Entry): CapturedInteraction | null;
    static fromPostmanCollection(postmanEntry: PostmanEntry): CapturedInteraction | null;
}
export type CapturedRequest = CapturedInteraction['request'];
export type CapturedResponse = CapturedInteraction['response'];
export interface CapturedInteractions extends AsyncIterable<CapturedInteraction> {
}
export declare class CapturedInteractions {
    static fromHarEntries(entries: HarEntries): CapturedInteractions;
    static fromPostmanCollection(entries: PostmanCollectionEntries): CapturedInteractions;
}
export {};
//# sourceMappingURL=captured-interactions.d.ts.map