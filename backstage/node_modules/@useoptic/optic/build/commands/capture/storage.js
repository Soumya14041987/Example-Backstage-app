"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCaptureStorage = getCaptureStorage;
var _crypto = _interopRequireDefault(require("crypto"));
var _promises = _interopRequireDefault(require("node:fs/promises"));
var _os = _interopRequireDefault(require("os"));
var _path = _interopRequireDefault(require("path"));
const tmpDirectory = _os.default.tmpdir();
async function getCaptureStorage(filePath) {
  const resolvedFilepath = _path.default.resolve(filePath);
  const specPathHash = _crypto.default.createHash('md5').update(resolvedFilepath).digest('hex');

  // TODO in the future we can reuse cached requests if paths are identical (maybe hash paths?)
  const trafficDirectory = _path.default.join(tmpDirectory, 'optic', 'captures-v2', specPathHash, String(Date.now()));
  await _promises.default.mkdir(trafficDirectory, {
    recursive: true
  });
  return trafficDirectory;
}