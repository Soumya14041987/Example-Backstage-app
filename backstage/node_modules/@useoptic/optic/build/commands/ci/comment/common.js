"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHasLoadingBanner = exports.generateCompareSummaryMarkdown = exports.createLoadingBanner = exports.COMPARE_SUMMARY_IDENTIFIER = void 0;
var _openapiUtilities = require("@useoptic/openapi-utilities");
const getChecksLabel = (results, severity) => {
  let totalChecks = results.length;
  let failingChecks = 0;
  let exemptedFailingChecks = 0;
  for (const result of results) {
    if (result.passed) continue;
    if (result.severity < severity) continue;
    if (result.exempted) exemptedFailingChecks += 1;else failingChecks += 1;
  }
  const exemptedChunk = exemptedFailingChecks > 0 ? `, ${exemptedFailingChecks} exempted` : '';
  return failingChecks > 0 ? `‚ö†Ô∏è **${failingChecks}**/**${totalChecks}** failed${exemptedChunk}` : totalChecks > 0 ? `‚úÖ **${totalChecks}** passed${exemptedChunk}` : `‚ÑπÔ∏è No automated checks have run`;
};
const COMPARE_SUMMARY_IDENTIFIER = exports.COMPARE_SUMMARY_IDENTIFIER = `optic-comment-3UsoJCz_Z0SpGLo5Vjw6o`;
function getOperationsText(groupedDiffs, options) {
  const ops = (0, _openapiUtilities.getOperationsChanged)(groupedDiffs);
  const operationsText = options.verbose ? [...[...ops.added].map(o => `\`${o}\` (added)`), ...[...ops.changed].map(o => `\`${o}\` (changed)`), ...[...ops.removed].map(o => `\`${o}\` (removed)`)].join('\n') : '';
  return `${(0, _openapiUtilities.getOperationsChangedLabel)(groupedDiffs, {
    joiner: options.labelJoiner
  })}

  ${operationsText}
`;
}
const getCaptureIssuesLabel = ({
  unmatchedInteractions,
  mismatchedEndpoints
}) => {
  return [...(unmatchedInteractions ? [`üÜï ${unmatchedInteractions} undocumented path${unmatchedInteractions > 1 ? 's' : ''}`] : []), ...(mismatchedEndpoints ? [`‚ö†Ô∏è  ${mismatchedEndpoints} mismatch${mismatchedEndpoints > 1 ? 'es' : ''}`] : [])].join('\n');
};
const generateCompareSummaryMarkdown = (commit, results, options) => {
  const anyCompletedHasWarning = results.completed.some(s => s.warnings.length > 0);
  const anyCompletedHasCapture = results.completed.some(s => s.capture);
  return `
<!--
DO NOT MODIFY
app_id: ${COMPARE_SUMMARY_IDENTIFIER}
commit_sha: ${commit.sha}
-->
${results.completed.length > 0 ? `### APIs Changed

<table>
<thead>
<tr>
<th>API</th>
<th>Changes</th>
<th>Rules</th>
${anyCompletedHasWarning ? '<th>Warnings</th>' : ''}
${anyCompletedHasCapture ? '<th>Tests</th>' : ''}
<th></th>
</tr>
</thead>
<tbody>
${results.completed.map(s => `<tr>
<td>

${s.apiName}

</td>
<td>

${getOperationsText(s.comparison.groupedDiffs, {
    webUrl: options.overrideUrl || s.opticWebUrl,
    verbose: options.verbose,
    labelJoiner: ',\n'
  })}

</td>
<td>

${getChecksLabel(s.comparison.results, results.severity)}

</td>

${anyCompletedHasWarning ? `<td>${s.warnings.join('\n')}</td>` : ''}

${anyCompletedHasCapture ? `

<td>

${s.capture ? s.capture.success ? s.capture.mismatchedEndpoints || s.capture.unmatchedInteractions ? getCaptureIssuesLabel({
    unmatchedInteractions: s.capture.unmatchedInteractions,
    mismatchedEndpoints: s.capture.mismatchedEndpoints
  }) : `‚úÖ ${s.capture.percentCovered}% coverage` : '‚ùå¬†Failed to run' : ''}

</td>

` : ''}

<td>

${options.overrideUrl || s.opticWebUrl ? `[View report](${options.overrideUrl || s.opticWebUrl})` : ''}

</td>
</tr>`).join('\n')}
</tbody>
</table>
` : ''}
${results.failed.length > 0 ? `### Errors running optic

<table>
<thead>
<tr>
<th>API</th>
<th>Error</th>
</tr>
</thead>
<tbody>
${results.failed.map(s => `<tr>
<td>${s.apiName}</td>
<td>

${'```'}
${s.error}
${'```'}

</td>
</tr>`).join('\n')}
</tbody>
</table>
` : ''}

Summary of API changes for commit (${commit.sha})

${results.noop.length > 0 ? `${results.noop.length === 1 ? '1 API' : `${results.noop.length} APIs`} had no changes.` : ''}`;
};
exports.generateCompareSummaryMarkdown = generateCompareSummaryMarkdown;
const LOADING_BANNER_IDENTIFIER = 'LOADING-BANNER-zRdRfihnV6eN5__wdKq5A';
const getHasLoadingBanner = body => new RegExp(LOADING_BANNER_IDENTIFIER).test(body);
exports.getHasLoadingBanner = getHasLoadingBanner;
const createLoadingBanner = commitSha => `
<!-- ${LOADING_BANNER_IDENTIFIER} -->
> ‚ÑπÔ∏è Running update for commit ${commitSha}`;
exports.createLoadingBanner = createLoadingBanner;