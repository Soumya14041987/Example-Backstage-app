"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.captureStorage = captureStorage;
var _path = _interopRequireDefault(require("path"));
var fs = _interopRequireWildcard(require("fs-extra"));
var _os = _interopRequireDefault(require("os"));
var _crypto = _interopRequireDefault(require("crypto"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const tmpDirectory = _os.default.tmpdir();
async function captureStorage(filePath) {
  const resolvedFilepath = _path.default.resolve(filePath);
  const openApiExists = await fs.pathExists(resolvedFilepath);
  const specPathHash = _crypto.default.createHash('md5').update(resolvedFilepath).digest('hex');
  const trafficDirectory = _path.default.join(tmpDirectory, 'optic', 'captures', specPathHash);
  await fs.ensureDir(trafficDirectory);
  return {
    openApiExists,
    trafficDirectory,
    existingCaptures: (await fs.readdir(trafficDirectory)).length
  };
}