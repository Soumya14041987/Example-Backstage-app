"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exitIfNotElevated = exitIfNotElevated;
exports.platform = void 0;
exports.runCommand = runCommand;
var _chalk = _interopRequireDefault(require("chalk"));
var _child_process = require("child_process");
var _isElevated = _interopRequireDefault(require("is-elevated"));
const platform = exports.platform = process.platform === 'win32' ? 'windows' : process.platform === 'darwin' ? 'mac' : 'linux';
async function exitIfNotElevated(withError) {
  const result = await (0, _isElevated.default)();
  if (result) {
    return;
  } else {
    console.log(_chalk.default.red(withError));
    process.exit(2);
  }
}
async function runCommand(command) {
  return new Promise((resolve, reject) => {
    (0, _child_process.exec)(command, (err, stdout, stderr) => {
      if (err) {
        console.error(`exec error: ${err}`);
        return reject(err);
      }
      resolve(stdout);
    });
  });
}