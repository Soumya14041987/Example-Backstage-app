import { OpenAPIV3 } from '..';
import { SpecTemplate } from '../templates';
import { UndocumentedOperation } from '../../operations';
import { Operation, SpecPatch, SpecPatches } from '../../../capture/patches/patchers/spec/patches';
export declare class LegacySpecPatches {
    static additions(patches: SpecPatches): SpecPatches;
    static operations(patches: SpecPatches): AsyncIterable<Operation>;
    static generateByTemplate<T>(spec: OpenAPIV3.Document, template: SpecTemplate<T>, options: T): SpecPatches;
    static generateForNewSpec<T>(info: OpenAPIV3.InfoObject, openAPIVersion?: string): SpecPatches;
    static undocumentedOperation(undocumentedOperation: UndocumentedOperation): Generator<SpecPatch, void, undefined>;
    static newSpec(info: OpenAPIV3.InfoObject, openAPIversion?: string): IterableIterator<SpecPatch>;
}
//# sourceMappingURL=patches.d.ts.map