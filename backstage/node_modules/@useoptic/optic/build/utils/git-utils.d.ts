export declare const hasGit: () => Promise<boolean>;
export declare const isInGitRepo: () => Promise<boolean>;
export declare const getDefaultBranchName: () => Promise<string | null>;
export declare const gitShow: (ref: string, path: string) => Promise<string>;
export declare const getCurrentBranchName: () => Promise<string>;
export declare const getMergeBase: (branch1: string, branch2: string) => Promise<string>;
export declare const getRootPath: () => Promise<string>;
export declare const assertRefExists: (ref: string) => Promise<void>;
export declare const gitStatus: () => Promise<string>;
export declare const resolveGitRef: (ref: string) => Promise<string>;
export type CommitMeta = {
    name: string;
    email: string;
    date: Date;
    message: string;
};
export declare const checkIgnore: (pathnames: string[]) => Promise<string[]>;
export declare const commitMeta: (ref: string) => Promise<CommitMeta>;
export declare const findOpenApiSpecsCandidates: (ref?: string) => Promise<string[]>;
export declare const remotes: () => Promise<string[]>;
export declare const getRemoteUrl: (remote: string) => Promise<string>;
export declare const guessRemoteOrigin: () => Promise<{
    provider: 'github' | 'gitlab';
    web_url: string;
} | null>;
export declare const isTracked: (filePath: string) => Promise<boolean>;
//# sourceMappingURL=git-utils.d.ts.map