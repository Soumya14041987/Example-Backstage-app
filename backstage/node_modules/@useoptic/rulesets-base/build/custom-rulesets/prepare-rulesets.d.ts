import { Ruleset, ExternalRule } from '../rules/ruleset';
export type RulesetDef = {
    name: string;
    config: unknown;
};
export type RulesetPayload = {
    ruleset: RulesetDef[];
    localRulesets: Record<string, string>;
    hostedRulesets: Record<string, {
        uploaded_at: string;
        url: string;
        should_decompress: boolean;
    }>;
    standardRulesets: Record<string, {
        fromOpticConfig: (config: unknown, options: {
            client: any;
            specVersion: '3.1.x' | '3.0.x';
        }) => Promise<Ruleset | ExternalRule | string>;
    }>;
};
export type PrepareRulesetsResult = {
    rulesets: (Ruleset | ExternalRule)[];
    warnings: string[];
};
export declare function prepareRulesets(payload: RulesetPayload, options: {
    client: any;
    specVersion: '3.1.x' | '3.0.x';
}): Promise<PrepareRulesetsResult>;
//# sourceMappingURL=prepare-rulesets.d.ts.map