export declare const exampleJsonSpec: {
    openapi: string;
    info: {
        title: string;
        description: string;
        termsOfService: string;
        contact: {
            email: string;
        };
        license: {
            name: string;
            url: string;
        };
        published: boolean;
        version: number;
    };
    externalDocs: {
        description: string;
        url: string;
    };
    servers: {
        url: string;
    }[];
    tags: ({
        name: string;
        description: string;
        externalDocs: {
            description: string;
            url: string;
        };
    } | {
        name: string;
        description: string;
        externalDocs?: undefined;
    })[];
    paths: {
        '/pet/{petId}/uploadImage': {
            post: {
                tags: string[];
                summary: string;
                operationId: string;
                parameters: {
                    name: string;
                    in: string;
                    description: string;
                    required: boolean;
                    schema: {
                        type: string;
                        format: string;
                    };
                }[];
                requestBody: {
                    content: {
                        'multipart/form-data': {
                            schema: {
                                properties: {
                                    additionalMetadata: {
                                        type: string;
                                        description: string;
                                    };
                                    file: {
                                        type: string;
                                        description: string;
                                        format: string;
                                    };
                                };
                            };
                        };
                    };
                };
                responses: {
                    '200': {
                        description: string;
                        content: {
                            'application/json': {
                                schema: {
                                    type: string;
                                    properties: {
                                        composedObject: {
                                            allOf: {
                                                type: string;
                                                properties: {
                                                    orderId: {
                                                        type: string;
                                                    };
                                                    fulfillmentId: {
                                                        type: string;
                                                    };
                                                };
                                            }[];
                                        };
                                        expandableObject: {
                                            anyOf: ({
                                                type: string;
                                                properties: {
                                                    orderId: {
                                                        type: string;
                                                    };
                                                    order?: undefined;
                                                };
                                            } | {
                                                type: string;
                                                properties: {
                                                    order: {
                                                        type: string;
                                                        properties: {
                                                            id: {
                                                                type: string;
                                                            };
                                                        };
                                                    };
                                                    orderId?: undefined;
                                                };
                                            })[];
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                security: {
                    petstore_auth: string[];
                }[];
            };
        };
        '/store/inventory': {
            get: {
                tags: string[];
                summary: string;
                description: string;
                operationId: string;
                responses: {
                    '200': {
                        description: string;
                        content: {
                            'application/json': {
                                schema: {
                                    type: string;
                                    additionalProperties: {
                                        type: string;
                                        format: string;
                                    };
                                };
                            };
                        };
                    };
                };
                security: {
                    api_key: never[];
                }[];
            };
        };
        '/store/order': {
            post: {
                tags: string[];
                summary: string;
                operationId: string;
                requestBody: {
                    description: string;
                    content: {
                        '*/*': {
                            schema: {
                                type: string;
                                properties: {
                                    id: {
                                        type: string;
                                        format: string;
                                    };
                                    petId: {
                                        type: string;
                                        format: string;
                                    };
                                    quantity: {
                                        type: string;
                                        format: string;
                                    };
                                    shipDate: {
                                        type: string;
                                        format: string;
                                    };
                                    status: {
                                        type: string;
                                        description: string;
                                        enum: string[];
                                    };
                                    complete: {
                                        type: string;
                                        default: boolean;
                                    };
                                };
                                xml: {
                                    name: string;
                                };
                            };
                        };
                    };
                    required: boolean;
                };
                responses: {
                    '200': {
                        description: string;
                        content: {
                            'application/xml': {
                                schema: {
                                    type: string;
                                    properties: {
                                        id: {
                                            type: string;
                                            format: string;
                                        };
                                        petId: {
                                            type: string;
                                            format: string;
                                        };
                                        quantity: {
                                            type: string;
                                            format: string;
                                        };
                                        shipDate: {
                                            type: string;
                                            format: string;
                                        };
                                        status: {
                                            type: string;
                                            description: string;
                                            enum: string[];
                                        };
                                        complete: {
                                            type: string;
                                            default: boolean;
                                        };
                                    };
                                    xml: {
                                        name: string;
                                    };
                                };
                            };
                            'application/json': {
                                schema: {
                                    type: string;
                                    properties: {
                                        id: {
                                            type: string;
                                            format: string;
                                        };
                                        petId: {
                                            type: string;
                                            format: string;
                                        };
                                        quantity: {
                                            type: string;
                                            format: string;
                                        };
                                        shipDate: {
                                            type: string;
                                            format: string;
                                        };
                                        status: {
                                            type: string;
                                            description: string;
                                            enum: string[];
                                        };
                                        complete: {
                                            type: string;
                                            default: boolean;
                                        };
                                    };
                                    xml: {
                                        name: string;
                                    };
                                };
                            };
                        };
                    };
                    '400': {
                        description: string;
                        content: {};
                    };
                };
                'x-codegen-request-body-name': string;
            };
        };
        '/store/order/{orderId}': {
            get: {
                tags: string[];
                summary: string;
                description: string;
                operationId: string;
                parameters: {
                    name: string;
                    in: string;
                    description: string;
                    required: boolean;
                    schema: {
                        maximum: number;
                        minimum: number;
                        type: string;
                        format: string;
                    };
                }[];
                responses: {
                    '200': {
                        description: string;
                        content: {
                            'application/xml': {
                                schema: {
                                    type: string;
                                    properties: {
                                        id: {
                                            type: string;
                                            format: string;
                                        };
                                        petId: {
                                            type: string;
                                            format: string;
                                        };
                                        quantity: {
                                            type: string;
                                            format: string;
                                        };
                                        shipDate: {
                                            type: string;
                                            format: string;
                                        };
                                        status: {
                                            type: string;
                                            description: string;
                                            enum: string[];
                                        };
                                        complete: {
                                            type: string;
                                            default: boolean;
                                        };
                                    };
                                    xml: {
                                        name: string;
                                    };
                                };
                            };
                            'application/json': {
                                schema: {
                                    type: string;
                                    properties: {
                                        id: {
                                            type: string;
                                            format: string;
                                        };
                                        petId: {
                                            type: string;
                                            format: string;
                                        };
                                        quantity: {
                                            type: string;
                                            format: string;
                                        };
                                        shipDate: {
                                            type: string;
                                            format: string;
                                        };
                                        status: {
                                            type: string;
                                            description: string;
                                            enum: string[];
                                        };
                                        complete: {
                                            type: string;
                                            default: boolean;
                                        };
                                    };
                                    xml: {
                                        name: string;
                                    };
                                };
                            };
                        };
                    };
                    '400': {
                        description: string;
                        content: {};
                    };
                    '404': {
                        description: string;
                        content: {};
                    };
                };
            };
            delete: {
                tags: string[];
                summary: string;
                description: string;
                operationId: string;
                parameters: {
                    name: string;
                    in: string;
                    description: string;
                    required: boolean;
                    schema: {
                        minimum: number;
                        type: string;
                        format: string;
                    };
                }[];
                responses: {
                    '400': {
                        description: string;
                        content: {};
                    };
                    '404': {
                        description: string;
                        content: {};
                    };
                };
            };
        };
        '/user': {
            post: {
                tags: string[];
                summary: string;
                description: string;
                operationId: string;
                requestBody: {
                    description: string;
                    content: {
                        '*/*': {
                            schema: {
                                type: string;
                                properties: {
                                    id: {
                                        type: string;
                                        format: string;
                                    };
                                    username: {
                                        type: string;
                                    };
                                    firstName: {
                                        type: string;
                                    };
                                    lastName: {
                                        type: string;
                                    };
                                    email: {
                                        type: string;
                                    };
                                    password: {
                                        type: string;
                                    };
                                    phone: {
                                        type: string;
                                    };
                                    userStatus: {
                                        type: string;
                                        description: string;
                                        format: string;
                                    };
                                };
                                xml: {
                                    name: string;
                                };
                            };
                        };
                    };
                    required: boolean;
                };
                responses: {
                    default: {
                        description: string;
                        content: {};
                    };
                };
                'x-codegen-request-body-name': string;
            };
        };
        '/user/createWithArray': {
            post: {
                tags: string[];
                summary: string;
                operationId: string;
                requestBody: {
                    description: string;
                    content: {
                        '*/*': {
                            schema: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        id: {
                                            type: string;
                                            format: string;
                                        };
                                        username: {
                                            type: string;
                                        };
                                        firstName: {
                                            type: string;
                                        };
                                        lastName: {
                                            type: string;
                                        };
                                        email: {
                                            type: string;
                                        };
                                        password: {
                                            type: string;
                                        };
                                        phone: {
                                            type: string;
                                        };
                                        userStatus: {
                                            type: string;
                                            description: string;
                                            format: string;
                                        };
                                    };
                                    xml: {
                                        name: string;
                                    };
                                };
                            };
                        };
                    };
                    required: boolean;
                };
                responses: {
                    default: {
                        description: string;
                        content: {};
                    };
                };
                'x-codegen-request-body-name': string;
            };
        };
        '/user/createWithList': {
            post: {
                tags: string[];
                summary: string;
                operationId: string;
                requestBody: {
                    description: string;
                    content: {
                        '*/*': {
                            schema: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        id: {
                                            type: string;
                                            format: string;
                                        };
                                        username: {
                                            type: string;
                                        };
                                        firstName: {
                                            type: string;
                                        };
                                        lastName: {
                                            type: string;
                                        };
                                        email: {
                                            type: string;
                                        };
                                        password: {
                                            type: string;
                                        };
                                        phone: {
                                            type: string;
                                        };
                                        userStatus: {
                                            type: string;
                                            description: string;
                                            format: string;
                                        };
                                    };
                                    xml: {
                                        name: string;
                                    };
                                };
                            };
                        };
                    };
                    required: boolean;
                };
                responses: {
                    default: {
                        description: string;
                        content: {};
                    };
                };
                'x-codegen-request-body-name': string;
            };
        };
        '/user/login': {
            get: {
                tags: string[];
                summary: string;
                operationId: string;
                parameters: {
                    name: string;
                    in: string;
                    description: string;
                    required: boolean;
                    schema: {
                        type: string;
                    };
                }[];
                responses: {
                    '200': {
                        description: string;
                        headers: {
                            'X-Rate-Limit': {
                                description: string;
                                schema: {
                                    type: string;
                                    format: string;
                                };
                            };
                            'X-Expires-After': {
                                description: string;
                                schema: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        content: {
                            'application/xml': {
                                schema: {
                                    type: string;
                                };
                            };
                            'application/json': {
                                schema: {
                                    type: string;
                                };
                            };
                        };
                    };
                    '400': {
                        description: string;
                        content: {};
                    };
                };
            };
        };
        '/user/logout': {
            get: {
                tags: string[];
                summary: string;
                operationId: string;
                responses: {
                    default: {
                        description: string;
                        content: {};
                    };
                };
            };
        };
    };
    components: {
        schemas: {
            Order: {
                type: string;
                properties: {
                    id: {
                        type: string;
                        format: string;
                    };
                    petId: {
                        type: string;
                        format: string;
                    };
                    quantity: {
                        type: string;
                        format: string;
                    };
                    shipDate: {
                        type: string;
                        format: string;
                    };
                    status: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    complete: {
                        type: string;
                        default: boolean;
                    };
                };
                xml: {
                    name: string;
                };
            };
            Category: {
                type: string;
                properties: {
                    id: {
                        type: string;
                        format: string;
                    };
                    name: {
                        type: string;
                    };
                };
                xml: {
                    name: string;
                };
            };
            User: {
                type: string;
                properties: {
                    id: {
                        type: string;
                        format: string;
                    };
                    username: {
                        type: string;
                    };
                    firstName: {
                        type: string;
                    };
                    lastName: {
                        type: string;
                    };
                    email: {
                        type: string;
                    };
                    password: {
                        type: string;
                    };
                    phone: {
                        type: string;
                    };
                    userStatus: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                xml: {
                    name: string;
                };
            };
            Tag: {
                type: string;
                properties: {
                    id: {
                        type: string;
                        format: string;
                    };
                    name: {
                        type: string;
                    };
                };
                xml: {
                    name: string;
                };
            };
            Pet: {
                required: string[];
                type: string;
                properties: {
                    id: {
                        type: string;
                        format: string;
                    };
                    category: {
                        type: string;
                        properties: {
                            id: {
                                type: string;
                                format: string;
                            };
                            name: {
                                type: string;
                            };
                        };
                        xml: {
                            name: string;
                        };
                    };
                    name: {
                        type: string;
                        example: string;
                    };
                    photoUrls: {
                        type: string;
                        xml: {
                            name: string;
                            wrapped: boolean;
                        };
                        items: {
                            type: string;
                        };
                    };
                    tags: {
                        type: string;
                        xml: {
                            name: string;
                            wrapped: boolean;
                        };
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    type: string;
                                    format: string;
                                };
                                name: {
                                    type: string;
                                };
                            };
                            xml: {
                                name: string;
                            };
                        };
                    };
                    status: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                };
                xml: {
                    name: string;
                };
            };
            ApiResponse: {
                type: string;
                properties: {
                    code: {
                        type: string;
                        format: string;
                    };
                    type: {
                        type: string;
                    };
                    message: {
                        type: string;
                    };
                };
            };
        };
        securitySchemes: {
            petstore_auth: {
                type: string;
                flows: {
                    implicit: {
                        authorizationUrl: string;
                        scopes: {
                            'write:pets': string;
                            'read:pets': string;
                        };
                    };
                };
            };
            api_key: {
                type: string;
                name: string;
                in: string;
            };
        };
    };
};
//# sourceMappingURL=petstore.base.d.ts.map