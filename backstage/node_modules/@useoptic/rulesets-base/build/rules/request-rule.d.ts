import { Severity } from '@useoptic/openapi-utilities';
import { RequestBody, RequestAssertions, RuleContext } from '../types';
type RequestRuleConfig<RuleName extends string> = {
    name: RuleName;
    docsLink?: string;
    matches?: RequestRule['matches'];
    rule: RequestRule['rule'];
    severity?: 'info' | 'warn' | 'error';
};
export declare class RequestRule<RuleName extends string = string> {
    type: 'request-rule';
    name: RuleName;
    docsLink?: string;
    matches?: (request: RequestBody, context: RuleContext) => boolean;
    rule: (request: RequestAssertions, context: RuleContext) => void;
    severity?: Severity;
    constructor(config: RequestRuleConfig<RuleName>);
    static isInstance(v: any): v is RequestRule;
}
export {};
//# sourceMappingURL=request-rule.d.ts.map