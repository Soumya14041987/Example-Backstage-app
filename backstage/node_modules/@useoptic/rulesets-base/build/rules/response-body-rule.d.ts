import { Severity } from '@useoptic/openapi-utilities';
import { ResponseBody, ResponseBodyAssertions, RuleContext } from '../types';
type ResponseBodyRuleConfig<RuleName extends string> = {
    name: RuleName;
    docsLink?: string;
    matches?: ResponseBodyRule['matches'];
    rule: ResponseBodyRule['rule'];
    severity?: 'info' | 'warn' | 'error';
};
export declare class ResponseBodyRule<RuleName extends string = string> {
    type: 'response-body-rule';
    name: RuleName;
    docsLink?: string;
    matches?: (response: ResponseBody, context: RuleContext) => boolean;
    rule: (response: ResponseBodyAssertions, context: RuleContext) => void;
    severity?: Severity;
    constructor(config: ResponseBodyRuleConfig<RuleName>);
    static isInstance(v: any): v is ResponseBodyRule;
}
export {};
//# sourceMappingURL=response-body-rule.d.ts.map