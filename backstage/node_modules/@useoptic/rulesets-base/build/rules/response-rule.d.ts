import { Severity } from '@useoptic/openapi-utilities';
import { Response, ResponseAssertions, RuleContext } from '../types';
type ResponseRuleConfig<RuleName extends string> = {
    name: RuleName;
    docsLink?: string;
    matches?: ResponseRule['matches'];
    rule: ResponseRule['rule'];
    severity?: 'info' | 'warn' | 'error';
};
export declare class ResponseRule<RuleName extends string = string> {
    type: 'response-rule';
    name: RuleName;
    docsLink?: string;
    matches?: (response: Response, context: RuleContext) => boolean;
    rule: (response: ResponseAssertions, context: RuleContext) => void;
    severity?: Severity;
    constructor(config: ResponseRuleConfig<RuleName>);
    static isInstance(v: any): v is ResponseRule;
}
export {};
//# sourceMappingURL=response-rule.d.ts.map