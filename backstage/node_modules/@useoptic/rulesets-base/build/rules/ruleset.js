"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ruleset = void 0;
const openapi_utilities_1 = require("@useoptic/openapi-utilities");
class Ruleset {
    constructor(config) {
        // this could be invoked via javascript so we still to check
        if (!config.name) {
            throw new Error('Expected a name in Ruleset');
        }
        if (!config.rules) {
            throw new Error('Expected a rules array in Ruleset');
        }
        const skipRules = config.skipRules ?? [];
        const rulesOnly = config.rulesOnly;
        const rules = config.rules
            .filter((r) => !rulesOnly || rulesOnly.includes(r.name))
            .filter((r) => !skipRules.includes(r.name));
        this.name = config.name;
        this.docsLink = config.docsLink;
        this.matches = config.matches;
        this.rules = rules;
        this.type = 'ruleset';
        if (config.severity !== undefined) {
            const configSev = config.severity;
            this.rules = this.rules.map((r) => {
                const sev = r.severity === undefined
                    ? (r.severity = (0, openapi_utilities_1.textToSev)(configSev))
                    : r.severity;
                return {
                    ...r,
                    severity: sev,
                };
            });
        }
    }
    static isInstance(v) {
        return v?.type === 'ruleset';
    }
}
exports.Ruleset = Ruleset;
//# sourceMappingURL=ruleset.js.map