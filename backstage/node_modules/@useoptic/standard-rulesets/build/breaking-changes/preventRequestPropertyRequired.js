"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.preventRequestPropertyRequired = void 0;
const rulesets_base_1 = require("@useoptic/rulesets-base");
const unions_1 = require("./helpers/unions");
const preventRequestPropertyRequired = () => new rulesets_base_1.RequestRule({
    name: 'prevent changing request property to required',
    rule: (requestAssertions, ruleContext) => {
        requestAssertions.property.added((property) => {
            const beforePolymorphicSchemas = [
                ...ruleContext.operation.polymorphicSchemas.before.values(),
            ];
            if (ruleContext.operation.change === 'added')
                return; // rule doesn't apply for new operations
            // Children of union properties / transitions are handled in a separate rule
            if ((0, unions_1.schemaIsUnion)(property.value.flatSchema) ||
                (0, unions_1.isInUnionProperty)(property.location.jsonPath) ||
                beforePolymorphicSchemas.some((schemaPath) => property.location.jsonPath.startsWith(schemaPath))) {
                return;
            }
            if (property.value.required) {
                throw new rulesets_base_1.RuleError({
                    message: `cannot add a required request property '${property.value.key}' to an existing operation. This is a breaking change.`,
                });
            }
        });
        requestAssertions.property.changed((before, after) => {
            // Children of union properties / transitions are handled in a separate rule
            if ((0, unions_1.schemaIsUnion)(before.value.flatSchema) ||
                (0, unions_1.isInUnionProperty)(before.location.jsonPath) ||
                (0, unions_1.schemaIsUnion)(after.value.flatSchema) ||
                (0, unions_1.isInUnionProperty)(after.location.jsonPath)) {
                return;
            }
            if (!before.value.required && after.value.required) {
                throw new rulesets_base_1.RuleError({
                    message: `cannot make a request property required. This is a breaking change.`,
                });
            }
        });
    },
});
exports.preventRequestPropertyRequired = preventRequestPropertyRequired;
//# sourceMappingURL=preventRequestPropertyRequired.js.map