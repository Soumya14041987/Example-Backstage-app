"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPathComponentChecks = void 0;
const rulesets_base_1 = require("@useoptic/rulesets-base");
const isCase_1 = require("./isCase");
const createPathComponentChecks = (applies, format) => {
    const check = (path) => {
        const pathComponents = path.split('/').filter((component) => 
        // not empty
        component.length > 0 &&
            // not a variable component
            !component.startsWith('{'));
        pathComponents.forEach((component) => {
            if (!(0, isCase_1.isCase)(component, format)) {
                throw new rulesets_base_1.RuleError({
                    message: `${component} is not ${format}`,
                });
            }
        });
    };
    const pathComponentChecks = new rulesets_base_1.OperationRule({
        name: 'operation path component naming check',
        rule: (operationAssertions) => {
            if (applies === 'always') {
                operationAssertions.requirement((operation) => check(operation.path));
            }
            else if (applies === 'addedOrChanged') {
                operationAssertions.added((operation) => check(operation.path));
                operationAssertions.changed((operation) => check(operation.path));
            }
            else if (applies === 'added') {
                operationAssertions.added((operation) => check(operation.path));
            }
        },
    });
    return pathComponentChecks;
};
exports.createPathComponentChecks = createPathComponentChecks;
//# sourceMappingURL=pathComponents.js.map