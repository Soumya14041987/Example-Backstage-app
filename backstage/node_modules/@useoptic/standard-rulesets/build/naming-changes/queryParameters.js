"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createQueryParameterChecks = void 0;
const rulesets_base_1 = require("@useoptic/rulesets-base");
const isCase_1 = require("./isCase");
const createQueryParameterChecks = (applies, format) => {
    const parameterTest = (parameter) => {
        if (!(0, isCase_1.isCase)(parameter.value.name, format)) {
            throw new rulesets_base_1.RuleError({
                message: `${parameter.value.name} is not ${format}`,
            });
        }
    };
    const queryParameterChecks = new rulesets_base_1.OperationRule({
        name: 'query parameter naming check',
        rule: (operationAssertions) => {
            if (applies === 'always') {
                operationAssertions.queryParameter.requirement(parameterTest);
            }
            else if (applies === 'addedOrChanged') {
                operationAssertions.queryParameter.added(parameterTest);
                operationAssertions.queryParameter.changed((before, after) => parameterTest(after));
            }
            else if (applies === 'added') {
                operationAssertions.queryParameter.added(parameterTest);
            }
        },
    });
    return queryParameterChecks;
};
exports.createQueryParameterChecks = createQueryParameterChecks;
//# sourceMappingURL=queryParameters.js.map