"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createResponseHeaderParameterChecks = void 0;
const rulesets_base_1 = require("@useoptic/rulesets-base");
const isCase_1 = require("./isCase");
const createResponseHeaderParameterChecks = (applies, format) => {
    const parameterTest = (parameter) => {
        if (!(0, isCase_1.isCase)(parameter.value.name, format)) {
            throw new rulesets_base_1.RuleError({
                message: `${parameter.value.name} is not ${format}`,
            });
        }
    };
    const headerParameterChecks = new rulesets_base_1.ResponseRule({
        name: 'header parameter naming check',
        rule: (responseAssertions) => {
            if (applies === 'always') {
                responseAssertions.header.requirement(parameterTest);
            }
            else if (applies === 'addedOrChanged') {
                responseAssertions.header.added(parameterTest);
                responseAssertions.header.changed((before, after) => parameterTest(after));
            }
            else if (applies === 'added') {
                responseAssertions.header.added(parameterTest);
            }
        },
    });
    return headerParameterChecks;
};
exports.createResponseHeaderParameterChecks = createResponseHeaderParameterChecks;
//# sourceMappingURL=responseHeader.js.map