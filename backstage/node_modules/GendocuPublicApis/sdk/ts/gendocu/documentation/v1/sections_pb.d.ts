/* eslint-disable */
/*Generated by GenDocu.com*/
// package: gendocu.documentation.v1
// file: gendocu/documentation/v1/sections.proto

import * as jspb from "google-protobuf";

export class CustomSection extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getOrder(): number;
  setOrder(value: number): void;

  getPosition(): CustomSection.PositionMap[keyof CustomSection.PositionMap];
  setPosition(value: CustomSection.PositionMap[keyof CustomSection.PositionMap]): void;

  getLeftTitle(): string;
  setLeftTitle(value: string): void;

  getLeftContent(): string;
  setLeftContent(value: string): void;

  getLeftContentHtml(): string;
  setLeftContentHtml(value: string): void;

  getHasIsland(): boolean;
  setHasIsland(value: boolean): void;

  getIslandTitle(): string;
  setIslandTitle(value: string): void;

  getIslandContent(): string;
  setIslandContent(value: string): void;

  getIslandContentHtml(): string;
  setIslandContentHtml(value: string): void;

  getType(): CustomSection.TypeMap[keyof CustomSection.TypeMap];
  setType(value: CustomSection.TypeMap[keyof CustomSection.TypeMap]): void;

  getHidden(): boolean;
  setHidden(value: boolean): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomSection.AsObject;
  static toObject(includeInstance: boolean, msg: CustomSection): CustomSection.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomSection, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomSection;
  static deserializeBinaryFromReader(message: CustomSection, reader: jspb.BinaryReader): CustomSection;
}

export namespace CustomSection {
  export type AsObject = {
    id: string,
    order: number,
    position: CustomSection.PositionMap[keyof CustomSection.PositionMap],
    leftTitle: string,
    leftContent: string,
    leftContentHtml: string,
    hasIsland: boolean,
    islandTitle: string,
    islandContent: string,
    islandContentHtml: string,
    type: CustomSection.TypeMap[keyof CustomSection.TypeMap],
    hidden: boolean,
  }

  export interface PositionMap {
    POSITION_UNKNOWN: 0;
    POSITION_BEFORE_OVERVIEW: 5;
    POSITION_BEFORE_CLIENT_LIBRARIES: 1;
    POSITION_BEFORE_AUTHENTICATION: 2;
    POSITION_BEFORE_API_SERVICES: 3;
    POSITION_AFTER_API_SERVICES: 4;
    CLIENT_SECTION_OVERRIDE: 10;
    AUTHENTICATION_SECTION_OVERRIDE: 11;
  }

  export const Position: PositionMap;

  export interface TypeMap {
    TYPE_UNKNOWN: 0;
    TYPE_SECTION: 1;
    TYPE_SUBSECTION: 2;
  }

  export const Type: TypeMap;
}

