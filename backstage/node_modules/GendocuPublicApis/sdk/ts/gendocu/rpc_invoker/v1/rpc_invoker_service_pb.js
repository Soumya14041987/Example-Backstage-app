/* eslint-disable */
/*Generated by GenDocu.com*/
// source: gendocu/rpc_invoker/v1/rpc_invoker_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gendocu.rpc_invoker.v1.Header', null, global);
goog.exportSymbol('proto.gendocu.rpc_invoker.v1.InvokeMethodRequest', null, global);
goog.exportSymbol('proto.gendocu.rpc_invoker.v1.InvokeMethodResponse', null, global);
goog.exportSymbol('proto.gendocu.rpc_invoker.v1.RequestMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.repeatedFields_, null);
};
goog.inherits(proto.gendocu.rpc_invoker.v1.InvokeMethodRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.displayName = 'proto.gendocu.rpc_invoker.v1.InvokeMethodRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gendocu.rpc_invoker.v1.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gendocu.rpc_invoker.v1.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gendocu.rpc_invoker.v1.Header.displayName = 'proto.gendocu.rpc_invoker.v1.Header';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gendocu.rpc_invoker.v1.InvokeMethodResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.displayName = 'proto.gendocu.rpc_invoker.v1.InvokeMethodResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gendocu.rpc_invoker.v1.RequestMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gendocu.rpc_invoker.v1.RequestMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gendocu.rpc_invoker.v1.RequestMeta.displayName = 'proto.gendocu.rpc_invoker.v1.RequestMeta';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    methodId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    environment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    body: jspb.Message.getFieldWithDefault(msg, 4, ""),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.gendocu.rpc_invoker.v1.Header.toObject, includeInstance),
    buildId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gendocu.rpc_invoker.v1.InvokeMethodRequest;
  return proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 5:
      var value = new proto.gendocu.rpc_invoker.v1.Header;
      reader.readMessage(value,proto.gendocu.rpc_invoker.v1.Header.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethodId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.gendocu.rpc_invoker.v1.Header.serializeBinaryToWriter
    );
  }
  f = message.getBuildId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string service_id = 1;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.getServiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.setServiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string method_id = 2;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.getMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.setMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string environment = 3;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string body = 4;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Header headers = 5;
 * @return {!Array<!proto.gendocu.rpc_invoker.v1.Header>}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.gendocu.rpc_invoker.v1.Header>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gendocu.rpc_invoker.v1.Header, 5));
};


/**
 * @param {!Array<!proto.gendocu.rpc_invoker.v1.Header>} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
*/
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.setHeadersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.gendocu.rpc_invoker.v1.Header=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gendocu.rpc_invoker.v1.Header}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.gendocu.rpc_invoker.v1.Header, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.clearHeadersList = function() {
  return this.setHeadersList([]);
};


/**
 * optional string build_id = 6;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.getBuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodRequest} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodRequest.prototype.setBuildId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gendocu.rpc_invoker.v1.Header.prototype.toObject = function(opt_includeInstance) {
  return proto.gendocu.rpc_invoker.v1.Header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gendocu.rpc_invoker.v1.Header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.Header.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gendocu.rpc_invoker.v1.Header}
 */
proto.gendocu.rpc_invoker.v1.Header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gendocu.rpc_invoker.v1.Header;
  return proto.gendocu.rpc_invoker.v1.Header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gendocu.rpc_invoker.v1.Header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gendocu.rpc_invoker.v1.Header}
 */
proto.gendocu.rpc_invoker.v1.Header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gendocu.rpc_invoker.v1.Header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gendocu.rpc_invoker.v1.Header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gendocu.rpc_invoker.v1.Header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.Header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.Header.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.Header} returns this
 */
proto.gendocu.rpc_invoker.v1.Header.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.Header.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.Header} returns this
 */
proto.gendocu.rpc_invoker.v1.Header.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responseCode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    responseMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    requestDebugToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gendocu.rpc_invoker.v1.InvokeMethodResponse;
  return proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestDebugToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponseCode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getResponseMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRequestDebugToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string response = 1;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 response_code = 2;
 * @return {number}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.getResponseCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.setResponseCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string response_message = 3;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.getResponseMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.setResponseMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string request_debug_token = 4;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.getRequestDebugToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.InvokeMethodResponse} returns this
 */
proto.gendocu.rpc_invoker.v1.InvokeMethodResponse.prototype.setRequestDebugToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.gendocu.rpc_invoker.v1.RequestMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gendocu.rpc_invoker.v1.RequestMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    anonymousUserId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gendocu.rpc_invoker.v1.RequestMeta}
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gendocu.rpc_invoker.v1.RequestMeta;
  return proto.gendocu.rpc_invoker.v1.RequestMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gendocu.rpc_invoker.v1.RequestMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gendocu.rpc_invoker.v1.RequestMeta}
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnonymousUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gendocu.rpc_invoker.v1.RequestMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gendocu.rpc_invoker.v1.RequestMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnonymousUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.RequestMeta} returns this
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string anonymous_user_id = 2;
 * @return {string}
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.prototype.getAnonymousUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gendocu.rpc_invoker.v1.RequestMeta} returns this
 */
proto.gendocu.rpc_invoker.v1.RequestMeta.prototype.setAnonymousUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.gendocu.rpc_invoker.v1);
