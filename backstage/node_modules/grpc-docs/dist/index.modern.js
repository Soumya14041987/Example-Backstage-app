import React__default, { useState, Fragment, useEffect, createElement } from 'react';
import styled from 'styled-components';
import atomOneDarkReasonable from 'react-syntax-highlighter/dist/cjs/styles/hljs/atom-one-dark';
import { ProgrammingLanguage } from 'GendocuPublicApis/sdk/ts/gendocu/common/types_pb';
import CopyToClipboard from 'react-copy-to-clipboard';
import { FieldDescription, APIDescriptionGeneratorModel, ServiceDescription, MethodDescription, TypeDescription, EnumDescription } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb';
import SyntaxHighlighter from 'react-syntax-highlighter';
import { SdkGeneratorClient } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb_service';
import { GenerateInputCodeSnippetsRequest, BuildWithOrgAndName, BuildSelectorRequest, EnterPasswordRequest, Build, Environment } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb';
import { grpc } from '@improbable-eng/grpc-web';
import yaml from 'js-yaml';
import minimatch from 'minimatch';
import ReactDOM from 'react-dom';

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

var grid = function grid(x) {
  return x * 8;
};
var style = {
  section: {
    title: {
      fontSize: grid(3),
      margin: {
        bottom: grid(1),
        top: grid(2)
      },
      padding: {
        vertical: 0,
        horizontal: 0
      }
    },
    padding: {
      mobile: {
        vertical: grid(2),
        horizontal: grid(1)
      },
      horizontal: grid(3),
      top: grid(2),
      bottom: grid(6)
    },
    maxWidth: grid(200),
    gap: grid(2)
  },
  typeTable: {
    th: {
      padding: {
        vertical: grid(1),
        horizontal: grid(2)
      }
    },
    td: {
      padding: {
        vertical: grid(1),
        horizontal: grid(2)
      },
      indent: grid(1)
    }
  },
  radius: 8,
  codeStyle: atomOneDarkReasonable
};
var colors = {
  white: 'hsl(48, 60%, 95%)',
  veryVeryLightGrey: 'hsl(48, 10%, 97%)',
  veryLightGrey: 'hsl(48, 10%, 90%)',
  lightGrey: 'hsl(48, 10%, 80%)',
  grey: 'hsl(0, 0%, 67%)',
  darkGrey: 'hsl(48, 10%, 40%)',
  green: 'hsl(98, 70%, 36%)',
  red: 'hsl(0, 70%, 36%)',
  blue: 'hsl(213, 70%, 36%)',
  yellow: 'hsl(48, 80%, 45%)',
  codeHighlight: 'hsl(213, 45%, 12%)'
};

var _templateObject;
var SectionTitle = styled.h2(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["\n  font-size: ", "px;\n  margin-top: ", "px;\n  margin-bottom: ", "px;\n  padding: ", "px\n    ", "px;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  font-weight: normal;\n"])), style.section.title.fontSize, style.section.title.margin.top, style.section.title.margin.bottom, style.section.title.padding.vertical, style.section.title.padding.horizontal);

var _templateObject$1, _templateObject2;
var TwoPaneWrapper = styled.div(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteralLoose(["\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: ", ";\n  width: 100%;\n  gap: ", "px;\n"])), function (props) {
  return props.direction ? props.direction : 'column';
}, style.section.gap);
var Pane = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose(["\n  display: block;\n  flex-grow: 1;\n  max-width: 100%;\n"])));

var _templateObject$2;
var SectionWrapper = styled.div(_templateObject$2 || (_templateObject$2 = _taggedTemplateLiteralLoose(["\n  margin: auto;\n  max-width: ", "px;\n  padding: ", "px;\n  padding-top: ", "px;\n  padding-bottom: ", "px;\n  @media (max-width: 600px) {\n    padding: ", "px\n      ", "px;\n  }\n"])), style.section.maxWidth, style.section.padding.horizontal, style.section.padding.top, style.section.padding.bottom, style.section.padding.mobile.vertical, style.section.padding.mobile.horizontal);

var _templateObject$3, _templateObject2$1;
var CopyButton = function CopyButton(_ref) {
  var text = _ref.text;

  var _useState = useState(false),
      copied = _useState[0],
      setCopied = _useState[1];

  var copyEffect = function copyEffect() {
    setCopied(true);
    setTimeout(function () {
      return setCopied(false);
    }, 1500);
  };

  return React__default.createElement(CopyToClipboard, {
    text: text,
    onCopy: copyEffect
  }, React__default.createElement("div", {
    style: {
      position: 'relative'
    }
  }, React__default.createElement(CopyButtonBefore, null, "Copy"), React__default.createElement(TickEffect, {
    visible: copied
  }, "Copied!")));
};
var CopyButtonBefore = styled.div(_templateObject$3 || (_templateObject$3 = _taggedTemplateLiteralLoose(["\n  cursor: pointer;\n  padding: ", "px ", "px;\n  background: transparent;\n  color: black;\n  text-align: center;\n  align-items: center;\n  display: flex;\n  gap: ", "px;\n  &:hover {\n    background: ", ";\n  }\n"])), grid(2), grid(2), grid(1), colors.veryLightGrey);
var TickEffect = styled.div(_templateObject2$1 || (_templateObject2$1 = _taggedTemplateLiteralLoose(["\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  padding: ", "px ", "px;\n  box-sizing: border-box;\n  background: ", ";\n  color: white;\n  pointer-events: none;\n  opacity: ", ";\n  transition: opacity 0.5s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"])), grid(1), grid(2), colors.green, function (props) {
  return props.visible ? '1' : '0';
});

var _templateObject$4, _templateObject2$2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;
var SetupTitle = styled.div(_templateObject$4 || (_templateObject$4 = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  font-weight: bold;\n  margin: ", "px 0px;\n"])), colors.darkGrey, grid(1));
var SetupSubtitle = styled.div(_templateObject2$2 || (_templateObject2$2 = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  font-weight: bold;\n  margin: ", "px 0px;\n"])), colors.darkGrey, grid(1));
var SectionSeparator = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose(["\n    height: ", "px;\n    width: 100%;\n"])), grid(4));
var BashLine = function BashLine(props) {
  return React__default.createElement(BashLineWrapper, null, React__default.createElement(BashLineDollar, null, "$"), "\xA0", React__default.createElement(BashCodeSection, null, props.children), React__default.createElement(CopyButton, {
    text: props.children
  }));
};
var Troubleshooting = function Troubleshooting(props) {
  return React__default.createElement(TroubleshootingLink, null, React__default.createElement("a", {
    href: props.url,
    target: '_blank',
    rel: 'noreferrer'
  }, "Troubleshooting"));
};
var FileContent = function FileContent(props) {
  return React__default.createElement(Fragment, null, React__default.createElement(FileContentTitle, null, React__default.createElement(FileName, null, props.fileName), React__default.createElement(CopyButton, {
    text: props.children
  })), React__default.createElement(FileContentWrapper, null, props.children));
};
var TroubleshootingLink = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose(["\n  margin: ", "px;\n  margin-top: ", "px;\n  display: block;\n"])), grid(1), grid(2));
var BashLineDollar = styled.ins(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  text-decoration: none;\n"])), colors.darkGrey);
var BashCodeSection = styled.pre(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose(["\n  overflow-x: auto;\n  margin: 0;\n  color: inherit;\n  flex: 1;\n"])));
var BashLineWrapper = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose(["\n  width: 100%;\n  overflow-x: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n"])));
var FileContentTitle = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose(["\n  border-bottom: 0px;\n  display: flex;\n  margin-top: ", "px;\n  justify-content: space-between;\n  align-items: stretch;\n  background-color: ", ";\n  box-sizing: border-box;\n"])), grid(2), colors.grey);
var FileContentWrapper = styled.pre(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose(["\n  overflow-x: auto;\n  width: 100%;\n  border: 1px solid ", ";\n  border-top: 0px;\n  margin: 0px;\n  padding: ", "px ", "px;\n  box-sizing: border-box;\n"])), colors.grey, grid(1), grid(2));
var FileName = styled.div(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose(["\n  padding: ", "px ", "px;\n  padding-top: ", "px;\n"])), grid(1), grid(2), grid(1.5));

var SetupGolangSDK = function SetupGolangSDK(props) {
  var repositoryUrl = props.repositoryUrl.replaceAll('https://', '').replaceAll('http://', '');
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "Go modules (Go 1.12+)"), React__default.createElement(BashLine, null, "export GO111MODULE=on"), React__default.createElement(BashLine, null, 'GOSUMDB=off go get -u ' + repositoryUrl + '/...@' + props.sdkBranch));
};

var SetupJavaSDK = function SetupJavaSDK(props) {
  var gradle = 'plugins {\n' + '  id "org.ajoberstar.grgit" version "4.1.0"\n' + '  id "com.google.protobuf" version "0.8.17"\n' + '}\n' + "apply plugin: 'java'\n" + 'repositories {\n' + '    mavenCentral()\n' + '}\n' + 'dependencies {\n' + '    implementation "com.squareup.okhttp:okhttp:2.7.5"\n' + '    implementation "javax.annotation:javax.annotation-api:1.3.2"\n' + '    implementation "io.grpc:grpc-core:1.41.0"\n' + '    implementation "io.grpc:grpc-stub:1.41.0"\n' + '    implementation "io.grpc:grpc-okhttp:1.41.0"\n' + '    implementation "io.grpc:grpc-api:1.41.0"\n' + '    implementation "io.grpc:grpc-protobuf:1.41.0"\n' + '    implementation files("sdk/' + props.sdkRepoName + props.pathToBinary + props.sdkRepoName + '.jar")\n' + '}\n' + 'import org.ajoberstar.grgit.Grgit\n' + 'task downloadSDK {\n' + '    doLast {\n' + '        def grgit = Grgit.clone(dir: System.getProperty("user.dir")+"/sdk/' + props.sdkRepoName + '", uri: \'' + props.repositoryUrl + '\', refToCheckout: \'' + props.sdkBranch + '\')\n' + '        println grgit.describe()\n' + '    }\n' + '}\n' + 'task updateSDK {\n' + '    doLast {\n' + '        def grgit = Grgit.open(dir: System.getProperty("user.dir")+"/sdk/' + props.sdkRepoName + '")\n' + '        grgit.pull()\n' + '   }\n' + '}';
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "Maven"), React__default.createElement(BashLine, null, "mvn scm:checkout -DconnectionUrl=scm:git:" + props.repositoryUrl + " -DscmVersionType=" + props.sdkBranch + " -DcheckoutDirectory=sdk/" + props.sdkRepoName), React__default.createElement(FileContent, {
    fileName: "pom.xml"
  }, "<dependency>\n    <groupId>com." + props.sdkRepoName + "</groupId>\n    <artifactId>" + props.sdkRepoName + "</artifactId>\n    <version>1.0</version>\n    <scope>system</scope>\n    <systemPath>${project.basedir}/sdk/" + props.sdkRepoName + "/sdk/java/" + props.sdkRepoName + ".jar</systemPath>\n</dependency>\n<dependency>\n    <groupId>io.grpc</groupId>\n    <artifactId>grpc-netty</artifactId>\n    <version>1.41.2</version>\n</dependency>\n<dependency>\n    <groupId>io.grpc</groupId>\n    <artifactId>grpc-protobuf</artifactId>\n    <version>1.41.2</version>\n</dependency>\n<dependency>\n    <groupId>io.grpc</groupId>\n    <artifactId>grpc-stub</artifactId>\n    <version>1.41.2</version>\n</dependency>"), React__default.createElement(SectionSeparator, null), React__default.createElement(SetupTitle, null, "Gradle"), React__default.createElement(BashLine, null, "gradle downloadSDK"), React__default.createElement(FileContent, {
    fileName: 'build.gradle'
  }, gradle));
};

var SetupPythonSDK = function SetupPythonSDK(props) {
  var projectName = props.projectName.toLowerCase().replaceAll(' ', '');
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "Python 3"), React__default.createElement(BashLine, null, "pip3 install grpcio protobuf"), React__default.createElement(BashLine, null, 'git clone \\\n\t' + props.repositoryUrl + ' \\\n\t--branch ' + props.sdkBranch + '  ' + projectName), React__default.createElement(SetupSubtitle, null, "Then start with a code:"), React__default.createElement(FileContent, {
    fileName: 'main.py'
  }, 'from ' + projectName + '.sdk.python3.<filepath> import <servicename>'), React__default.createElement(Troubleshooting, {
    url: 'https://wiki.gendocu.com/docs/troubleshooting/python/'
  }));
};

var SetupJavascriptSDK = function SetupJavascriptSDK(props) {
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "NPM"), React__default.createElement(BashLine, null, 'npm install git+' + props.repositoryUrl + '#' + props.sdkBranch), React__default.createElement(BashLine, null, "npm install @improbable-eng/grpc-web google-protobuf"), React__default.createElement(SetupTitle, null, "Yarn"), React__default.createElement(BashLine, null, 'yarn add ' + props.repositoryUrl + '#' + props.sdkBranch), React__default.createElement(BashLine, null, "yarn add @improbable-eng/grpc-web google-protobuf"));
};

var SetupTypescriptSDK = function SetupTypescriptSDK(props) {
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "NPM"), React__default.createElement(BashLine, null, 'npm install git+' + props.repositoryUrl + '#' + props.sdkBranch), React__default.createElement(BashLine, null, "npm install @improbable-eng/grpc-web google-protobuf @types/google-protobuf"), React__default.createElement(SetupTitle, null, "Yarn"), React__default.createElement(BashLine, null, 'yarn add ' + props.repositoryUrl + '#' + props.sdkBranch), React__default.createElement(BashLine, null, 'yarn add @improbable-eng/grpc-web \\\n\tgoogle-protobuf @types/google-protobuf'));
};

var SetupCSharpSDK = function SetupCSharpSDK(props) {
  var projectName = props.projectName.replaceAll(' ', '');
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "NuGet"), "In the project root (dir with yourproject.csproj file):", React__default.createElement(BashLine, null, 'git clone ' + props.repositoryUrl + ' \\\n\t --branch ' + props.sdkBranch + ' ../' + projectName), React__default.createElement(FileContent, {
    fileName: 'YourProject.csproj'
  }, CSProjOverride(projectName)));
};

var CSProjOverride = function CSProjOverride(projectName) {
  return '<Project>\n' + '....\n' + '  <ItemGroup>\n' + '    <ProjectReference Include="../' + projectName + '/sdk/csharp/*.csproj"/>\n' + '  </ItemGroup>\n' + '....\n' + '</Project>';
};

var SetupKotlinSDK = function SetupKotlinSDK(props) {
  var gradle = "plugins {\n" + "  id \"org.ajoberstar.grgit\" version \"4.1.0\"\n" + "  id \"com.google.protobuf\" version \"0.8.17\"\n" + "}\n" + "apply plugin: 'java'\n" + "repositories {\n" + "    mavenCentral()\n" + "}\n" + "dependencies {\n" + "    implementation \"com.squareup.okhttp:okhttp:2.7.5\"\n" + "    implementation \"javax.annotation:javax.annotation-api:1.3.2\"\n" + "    implementation \"io.grpc:grpc-core:1.41.0\"\n" + "    implementation \"io.grpc:grpc-stub:1.41.0\"\n" + "    implementation \"io.grpc:grpc-okhttp:1.41.0\"\n" + "    implementation \"io.grpc:grpc-api:1.41.0\"\n" + "    implementation \"io.grpc:grpc-protobuf:1.41.0\"\n" + "    implementation files(\"sdk/" + props.sdkRepoProjectName + props.pathToBinary + props.sdkRepoProjectName + ".jar\")\n" + "}\n" + "import org.ajoberstar.grgit.Grgit\n" + "task downloadSDK {\n" + "    doLast {\n" + "        def grgit = Grgit.clone(dir: System.getProperty(\"user.dir\")+\"/app/sdk/" + props.sdkRepoProjectName + "\",  refToCheckout: \"" + props.branch + "\", uri: '" + props.repositoryUrl + "')\n" + "        println grgit.describe()\n" + "    }\n" + "}\n" + "task updateSDK {\n" + "    doLast {\n" + "        def grgit = Grgit.open(dir: System.getProperty(\"user.dir\")+\"/app/sdk/" + props.sdkRepoProjectName + "\")\n" + "        grgit.pull()\n" + "   }\n" + "}\n" + "application {\n" + "    // Define the main class for the application.\n" + "    mainClass = 'app.AppKt'\n" + "}";
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "Gradle"), React__default.createElement(FileContent, {
    fileName: "build.gradle"
  }, gradle), React__default.createElement(BashLine, null, "gradle downloadSDK"), "Update SDK with command: ", React__default.createElement(BashLine, null, "gradle updateSDK"));
};

var SetupRustSDK = function SetupRustSDK(_ref) {
  var sdkRepoProjectName = _ref.sdkRepoProjectName,
      repositoryUrl = _ref.repositoryUrl,
      branch = _ref.branch;
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "Cargo"), React__default.createElement(FileContent, {
    fileName: "Cargo.toml"
  }, "[dependencies]\n" + "tonic = \"0.8\"\n" + "prost-types = \"0.11\"\n" + "tokio = { version = \"1.0\", features = [\"macros\", \"rt-multi-thread\"] }\n" + sdkRepoProjectName + " = {  git = \"" + repositoryUrl + "\", branch = \"" + branch + "\"}\n\n"));
};

var SetupGrpcurl = function SetupGrpcurl() {
  return React__default.createElement(Fragment, null, React__default.createElement(SetupTitle, null, "Mac OS"), React__default.createElement(BashLine, null, "brew install grpcurl"), React__default.createElement(SetupTitle, null, "Linux"), React__default.createElement("div", null, "Before installing grpcurl install brew with command: "), React__default.createElement(BashLine, null, "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""), React__default.createElement(BashLine, null, "brew install grpcurl"));
};

var SDKSetup = function SDKSetup(props) {
  switch (props.lang) {
    case ProgrammingLanguage.GO:
      return React__default.createElement(SetupGolangSDK, {
        repositoryUrl: props.repositoryUrl,
        sdkBranch: props.sdkBranch
      });

    case ProgrammingLanguage.JAVA:
      return React__default.createElement(SetupJavaSDK, {
        repositoryUrl: props.repositoryUrl,
        sdkRepoName: props.sdkRepoName,
        sdkBranch: props.sdkBranch,
        pathToBinary: "/sdk/java/"
      });

    case ProgrammingLanguage.PYTHON:
      return React__default.createElement(SetupPythonSDK, {
        repositoryUrl: props.repositoryUrl,
        sdkBranch: props.sdkBranch,
        projectName: props.projectName
      });

    case ProgrammingLanguage.JAVASCRIPT:
      return React__default.createElement(SetupJavascriptSDK, {
        repositoryUrl: props.repositoryUrl,
        sdkBranch: props.sdkBranch
      });

    case ProgrammingLanguage.TYPESCRIPT:
      return React__default.createElement(SetupTypescriptSDK, {
        repositoryUrl: props.repositoryUrl,
        sdkBranch: props.sdkBranch
      });

    case ProgrammingLanguage.CSHARP:
      return React__default.createElement(SetupCSharpSDK, {
        projectName: props.projectName,
        sdkBranch: props.sdkBranch,
        repositoryUrl: props.repositoryUrl
      });

    case ProgrammingLanguage.KOTLIN:
      return React__default.createElement(SetupKotlinSDK, {
        sdkRepoProjectName: props.sdkRepoName,
        repositoryUrl: props.repositoryUrl,
        projectName: props.projectName,
        pathToBinary: "/sdk/java/",
        branch: props.sdkBranch
      });

    case ProgrammingLanguage.GRPCURL:
      return React__default.createElement(SetupGrpcurl, null);

    case ProgrammingLanguage.RUST:
      return React__default.createElement(SetupRustSDK, {
        sdkRepoProjectName: props.sdkRepoName,
        repositoryUrl: props.repositoryUrl,
        branch: props.sdkBranch
      });

    default:
      return React__default.createElement(Fragment, null);
  }
};

function programmingLangToString(lang) {
  switch (lang) {
    case ProgrammingLanguage.GO:
      return 'go';

    case ProgrammingLanguage.TYPESCRIPT:
      return 'typescript';

    case ProgrammingLanguage.PYTHON:
      return 'python';

    case ProgrammingLanguage.JAVASCRIPT:
      return 'javascript';

    case ProgrammingLanguage.REST_CURL:
      return 'bash';

    case ProgrammingLanguage.GRPCURL:
      return 'bash';

    case ProgrammingLanguage.JAVA:
      return 'java';

    case ProgrammingLanguage.RUST:
      return 'rust';

    case ProgrammingLanguage.CSHARP:
      return 'csharp';

    default:
      return 'unknown';
  }
}
function programmingLangToName(lang) {
  switch (lang) {
    case ProgrammingLanguage.GO:
      return 'Golang';

    case ProgrammingLanguage.TYPESCRIPT:
      return 'Typescript';

    case ProgrammingLanguage.KOTLIN:
      return "Kotlin";

    case ProgrammingLanguage.PYTHON:
      return 'Python 3';

    case ProgrammingLanguage.JAVASCRIPT:
      return 'Javascript';

    case ProgrammingLanguage.REST_CURL:
      return 'CURL (REST)';

    case ProgrammingLanguage.GRPCURL:
      return 'gRPCURL';

    case ProgrammingLanguage.JAVA:
      return 'Java';

    case ProgrammingLanguage.RUST:
      return 'Rust';

    case ProgrammingLanguage.CSHARP:
      return 'C#';

    default:
      return 'unknown';
  }
}

var _templateObject$5, _templateObject2$3;
var ProgrammingLanguageSelector = function ProgrammingLanguageSelector(_ref) {
  var availableProgrammingLangs = _ref.availableProgrammingLangs,
      selectedProgrammingLang = _ref.selectedProgrammingLang,
      setProgrammingLang = _ref.setProgrammingLang;
  var langs = [].concat(availableProgrammingLangs);
  return React__default.createElement(ProgrammingLanguageContainer, null, langs.map(function (el, key) {
    return React__default.createElement(ProgrammingLanguageSelectorDiv, {
      key: key,
      onClick: function onClick() {
        return setProgrammingLang(el);
      },
      selected: selectedProgrammingLang === el
    }, React__default.createElement("p", null, programmingLangToName(el)));
  }));
};
var ProgrammingLanguageContainer = styled.div(_templateObject$5 || (_templateObject$5 = _taggedTemplateLiteralLoose(["\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: auto;\n  justify-content: center;\n"])));
var ProgrammingLanguageSelectorDiv = styled.div(_templateObject2$3 || (_templateObject2$3 = _taggedTemplateLiteralLoose(["\n  text-align: center;\n  opacity: ", ";\n  cursor: pointer;\n  padding: ", "px ", "px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom: 2px solid\n    ", ";\n"])), function (props) {
  return props.selected ? 1 : 0.5;
}, grid(1), grid(1), function (props) {
  return props.selected ? colors.blue : colors.white;
});

var _templateObject$6, _templateObject2$4, _templateObject3$1, _templateObject4$1;
var ClientLibraries = function ClientLibraries(props) {
  return React__default.createElement(SectionWrapper, null, React__default.createElement(TwoPaneWrapper, {
    direction: 'row'
  }, React__default.createElement(Pane, null, React__default.createElement(SectionTitle, null, "Client Libraries"), "The API is implemented using gRPC framework. You can generate the SDK on your own -", ' ', React__default.createElement("a", {
    href: 'https://grpc.io/docs/languages/'
  }, "check out the official gRPC documentation."), React__default.createElement("br", null), "The source protofiles are available", ' ', React__default.createElement("a", {
    href: props.protoUrl,
    rel: 'noopener noreferrer',
    target: '_blank'
  }, "here.")), React__default.createElement(Pane, null, React__default.createElement(ClientLibrariesSelector, Object.assign({}, props)))));
};

var ClientLibrariesSelector = function ClientLibrariesSelector(props) {
  return React__default.createElement(ClientLibrariesWrapper, null, React__default.createElement(ClientLibrariesSelectorTitleWrapper, null, React__default.createElement(ClientLibrariesSelectorTitle, null, "Client Libraries"), React__default.createElement(ProgrammingLanguageSelector, {
    availableProgrammingLangs: props.availableSetupLangs,
    selectedProgrammingLang: props.selectedProgrammingLang,
    setProgrammingLang: props.setProgrammingLang
  })), React__default.createElement(SDKSetupWrapper, null, React__default.createElement(SDKSetup, {
    repositoryUrl: props.repositoryUrl,
    lang: props.selectedProgrammingLang,
    projectName: props.projectName,
    sdkRepoName: props.sdkRepoName,
    sdkBranch: props.sdkBranch
  })));
};

var ClientLibrariesWrapper = styled.div(_templateObject$6 || (_templateObject$6 = _taggedTemplateLiteralLoose(["\n  flex: 1;\n  min-width: 250px;\n  border-radius: 8px;\n  border: 1px solid ", ";\n  padding: 0px 0px;\n  max-width: 600px;\n  width: 100%;\n"])), colors.lightGrey);
var ClientLibrariesSelectorTitle = styled.div(_templateObject2$4 || (_templateObject2$4 = _taggedTemplateLiteralLoose(["\n  text-transform: uppercase;\n  margin-bottom: ", "px;\n"])), grid(1));
var ClientLibrariesSelectorTitleWrapper = styled.div(_templateObject3$1 || (_templateObject3$1 = _taggedTemplateLiteralLoose(["\n  padding: 0px ", "px;\n  padding-top: ", "px;\n"])), grid(2), grid(1));
var SDKSetupWrapper = styled.div(_templateObject4$1 || (_templateObject4$1 = _taggedTemplateLiteralLoose(["\n  width: 100%;\n  border-top: 1px solid ", ";\n  padding: ", "px ", "px;\n  box-sizing: border-box;\n  background-color: ", ";\n  border-bottom-left-radius: ", "px;\n  border-bottom-right-radius: ", "px;\n  line-height: 1.2;\n"])), colors.veryLightGrey, grid(1), grid(1), colors.veryVeryLightGrey, style.radius, style.radius);

function ServiceDescriptionsInOrder(services) {
  var res = [];
  var serviceIds = services.getEntryList().map(function (el) {
    return el[0];
  }).sort(function (a, b) {
    var _services$get, _services$get2;

    return (((_services$get = services.get(a)) === null || _services$get === void 0 ? void 0 : _services$get.getShortName()) || '') < (((_services$get2 = services.get(b)) === null || _services$get2 === void 0 ? void 0 : _services$get2.getShortName()) || '') ? -1 : 1;
  });
  serviceIds.forEach(function (el) {
    var y = services.get(el);

    if (y) {
      res.push(y);
    }
  });
  return res;
}
var toHumanReadableName = function toHumanReadableName(s) {
  var x = s.replace(/([a-z])([A-Z])/g, '$1 $2');
  return x[0].toUpperCase() + x.substr(1);
};
var cutOutCommonPackage = function cutOutCommonPackage(typeName, pkg) {
  var y = typeName.split('.');
  y.pop();
  var typenamePkg = y.join('.');

  if (pkg.startsWith(typenamePkg)) {
    return typeName.substr(typenamePkg.length + 1);
  } else {
    return typeName.substr(1);
  }
};

var _templateObject$7;
var Service = function Service(_ref) {
  var service = _ref.service;
  return React__default.createElement(Fragment, null, React__default.createElement(TwoPaneWrapper, null, React__default.createElement(Pane, null, React__default.createElement(SectionTitle, null, toHumanReadableName(service.getShortName())), React__default.createElement(ServiceId, null, getServiceId(service)), React__default.createElement("p", null, service.getDescription())), React__default.createElement(Pane, null)));
};

var getServiceId = function getServiceId(service) {
  if (service.getServiceId().startsWith('.')) {
    return service.getServiceId().substr(1);
  } else {
    return service.getServiceId();
  }
};

var ServiceId = styled.div(_templateObject$7 || (_templateObject$7 = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  margin-bottom: ", "px;\n  margin-top: ", "px;\n"])), colors.darkGrey, grid(2), grid(1));

var _templateObject$8;
var SectionSubtitle = styled.h3(_templateObject$8 || (_templateObject$8 = _taggedTemplateLiteralLoose(["\n  font-size: ", "px;\n  margin-top: ", "px;\n  margin-bottom: ", "px;\n  padding: ", "px\n    ", "px;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  font-weight: normal;\n"])), style.section.title.fontSize, style.section.title.margin.top, style.section.title.margin.bottom, style.section.title.padding.vertical, style.section.title.padding.horizontal);

var getTypeName = function getTypeName(typpe) {
  switch (typpe) {
    case 'TYPE_STRING':
      return 'string';

    case 'TYPE_ENUM':
      return 'enum';

    case 'TYPE_SFIXED32':
    case 'TYPE_FIXED32':
    case 'TYPE_SINT32':
    case 'TYPE_INT32':
      return 'int (32 bit)';

    case 'TYPE_SFIXED64':
    case 'TYPE_FIXED64':
    case 'TYPE_SINT64':
    case 'TYPE_INT64':
      return 'int (64 bit)';

    case 'TYPE_DOUBLE':
      return 'float (64 bit)';

    case 'TYPE_FLOAT':
      return 'float (32 bit)';

    case 'TYPE_UINT32':
      return 'unsigned int (32 bit)';

    case 'TYPE_UINT64':
      return 'unsigned int (64 bit)';

    case 'TYPE_BOOL':
      return 'boolean';

    case 'TYPE_BYTES':
      return 'array of bytes';

    case '[oneof]':
      return '[oneof]';

    default:
      console.error('unknown scalar type', typpe);
      return typpe.substr(1);
  }
};

var _templateObject$9, _templateObject2$5, _templateObject3$2, _templateObject4$2, _templateObject5$1, _templateObject6$1, _templateObject7$1;
var TypeTable = function TypeTable(_ref) {
  var type = _ref.type,
      allTypes = _ref.allTypes;

  if (!type) {
    return React__default.createElement(Fragment, null);
  }

  return React__default.createElement(TableWrapper, null, React__default.createElement(Table, null, React__default.createElement("thead", null, React__default.createElement(TrHead, null, React__default.createElement(ThStyled, null, "Field"), React__default.createElement(ThStyled, null, "Type"), React__default.createElement(ThStyled, null, "Description"))), React__default.createElement("tbody", null, React__default.createElement(TypeFields, {
    type: type,
    allTypes: allTypes
  }))));
};

var TypeFields = function TypeFields(props) {
  if (props.type === undefined) {
    return React__default.createElement(Fragment, null);
  }

  var maxDepth = calculateMaxDepth(1) - 1;

  if (!props.type || props.type.getFieldsList().length === 0) {
    return React__default.createElement(TrStyled, null, React__default.createElement(TdStyled, {
      indent: 0,
      colSpan: 3
    }, "There are no fields!"));
  }

  var fl = props.type.getFieldsList().filter(function (el) {
    return el.getOneOf() === '';
  });
  var oneofMap = new Map();

  if (props.type !== undefined) {
    props.type.getFieldsList().filter(function (el) {
      return el.getOneOf() !== '';
    }).forEach(function (el) {
      var l = el.getOneOf();
      var arr = oneofMap.get(l) || [];
      arr.push(el);
      oneofMap.set(l, arr);
    });
  }

  return React__default.createElement(Fragment, null, fl.map(function (el, key) {
    return React__default.createElement(Fragment, {
      key: key
    }, React__default.createElement(FieldFields, Object.assign({}, props, {
      field: el,
      depth: 1,
      maxDepth: maxDepth,
      lastField: key === fl.length + oneofMap.size - 1
    })));
  }), React__default.createElement(OneofFields, Object.assign({}, props, {
    m: Array.from(oneofMap),
    depth: 1,
    maxDepth: maxDepth,
    lastField: oneofMap.size > 0
  })));
};

var FieldFields = function FieldFields(props) {
  var _useState = useState(props.maxDepth > props.depth),
      visible = _useState[0],
      setVisible = _useState[1];

  useEffect(function () {
    setVisible(props.maxDepth > props.depth);
  }, [props.maxDepth, props.depth]);

  if (!props.field) {
    console.error('field undefined ', props);
    return React__default.createElement(Fragment, null);
  }

  var tid = props.field.getTypeId();
  var typpe = props.allTypes.get(tid);

  if (props.depth >= 25) {
    console.error('depth exceeded ', props);
    return React__default.createElement(Fragment, null);
  }

  var fl = typpe === undefined ? [] : typpe.getFieldsList().filter(function (el) {
    return el.getOneOf() === '';
  });
  var oneofMap = new Map();

  if (typpe !== undefined) {
    typpe.getFieldsList().filter(function (el) {
      return el.getOneOf() !== '';
    }).forEach(function (el) {
      var l = el.getOneOf();
      var arr = oneofMap.get(l) || [];
      arr.push(el);
      oneofMap.set(l, arr);
    });
  } else if (!!tid && !tid.startsWith('TYPE_')) {
    console.error('unable to find type ', tid);
  }

  var m = Array.from(oneofMap);
  return React__default.createElement(Fragment, null, React__default.createElement(FieldTableRow, {
    depth: props.depth,
    setVisible: setVisible,
    visible: visible,
    unfoldable: fl.length === 0,
    field: props.field,
    typpe: typpe
  }), visible && fl.map(function (el, key) {
    return React__default.createElement(Fragment, {
      key: key
    }, React__default.createElement(FieldFields, Object.assign({}, props, {
      field: el,
      depth: props.depth + 1,
      lastField: key + 1 === fl.length
    })));
  }), visible && React__default.createElement(OneofFields, Object.assign({}, props, {
    m: m,
    depth: props.depth + 1,
    lastField: m.length > 0
  })));
};

var OneofFields = function OneofFields(props) {
  var _useState2 = useState(props.maxDepth > props.depth),
      visible = _useState2[0],
      setVisible = _useState2[1];

  return React__default.createElement(Fragment, null, props.m.map(function (el, key) {
    var f = new FieldDescription();
    f.setName(el[0]);
    f.setTypeId('[oneof]');
    return React__default.createElement(Fragment, {
      key: key
    }, React__default.createElement(FieldTableRow, {
      depth: props.depth,
      field: f,
      typpe: undefined,
      setVisible: setVisible,
      visible: visible,
      unfoldable: false
    }), visible && el[1].map(function (el2, key2) {
      return React__default.createElement(Fragment, {
        key: key2
      }, React__default.createElement(FieldFields, Object.assign({}, props, {
        field: el2,
        depth: props.depth,
        lastField: key2 + 1 === el[1].length
      })));
    }));
  }));
};

var FieldTableRow = function FieldTableRow(props) {
  return React__default.createElement(TrStyled, null, React__default.createElement(TdStyled, {
    indent: props.depth - 1,
    noItalic: true,
    style: {
      whiteSpace: 'nowrap'
    }
  }, React__default.createElement("ins", {
    style: {
      fontFamily: 'monospace',
      textDecoration: 'none',
      cursor: 'pointer'
    },
    onClick: function onClick() {
      return props.setVisible(!props.visible);
    }
  }, props.unfoldable ? React__default.createElement(Fragment, null, "\xA0\xA0") : props.visible ? React__default.createElement(Fragment, null, "\u25BE\xA0") : React__default.createElement(Fragment, null, "\u25B8\xA0")), !!props.field.getOneOf() && React__default.createElement(FieldMarker, {
    markerType: 'oneof',
    direction: 'left'
  }, "oneof"), props.field.getName()), React__default.createElement(TdStyled, {
    indent: 1,
    style: {
      whiteSpace: 'nowrap',
      minWidth: '100px'
    },
    noItalic: true
  }, !!props.typpe && props.typpe.getIsMapType() ? 'Map' : React__default.createElement(Fragment, null, React__default.createElement("ins", {
    style: {
      display: 'inline-block',
      textDecoration: 'none'
    }
  }, props.typpe === undefined ? getTypeName(props.field.getTypeId()) : props.typpe.getShortName()), props.field.getRepeated() && React__default.createElement(FieldMarker, {
    markerType: 'repeated',
    direction: 'right'
  }, "repeated"))), React__default.createElement(TdStyled, {
    indent: 1,
    noItalic: true,
    dangerouslySetInnerHTML: {
      __html: props.field.getDescription()
    }
  }));
};

var calculateMaxDepth = function calculateMaxDepth(fieldsLength) {
  if (fieldsLength === 0) {
    return 1;
  }

  if (7 - fieldsLength < 0) {
    return 0;
  }

  return 2;
};

var TableWrapper = styled.div(_templateObject$9 || (_templateObject$9 = _taggedTemplateLiteralLoose(["\n  max-width: 100vw;\n  overflow-x: auto;\n  border: 1px solid ", ";\n  border-radius: 8px;\n"])), colors.lightGrey);
var TrHead = styled.tr(_templateObject2$5 || (_templateObject2$5 = _taggedTemplateLiteralLoose(["\n  border-top-left-radius: ", "px;\n  border-top-right-radius: ", "px;\n"])), style.radius, style.radius);
var Table = styled.table(_templateObject3$2 || (_templateObject3$2 = _taggedTemplateLiteralLoose(["\n  border-collapse: collapse;\n  width: 100%;\n  flex: 1;\n"])));
var ThStyled = styled.th(_templateObject4$2 || (_templateObject4$2 = _taggedTemplateLiteralLoose(["\n  overflow-wrap: break-word;\n  hyphens: auto;\n  font-weight: normal;\n  padding: ", "px\n    ", "px;\n  border-bottom: 1px solid ", ";\n  &:nth-child(odd) {\n    background: ", ";\n  }\n"])), style.typeTable.th.padding.vertical, style.typeTable.th.padding.horizontal, colors.lightGrey, colors.veryVeryLightGrey);
var TdStyled = styled.td(_templateObject5$1 || (_templateObject5$1 = _taggedTemplateLiteralLoose(["\n  overflow-wrap: break-word;\n  hyphens: auto;\n  ", "\n  padding: ", "px ", "px;\n  padding-left: ", "px;\n  min-width: 120px;\n  vertical-align: top;\n  &:nth-child(odd) {\n    background: ", ";\n  }\n"])), function (props) {
  return props.noItalic ? '' : 'font-style: oblique;';
}, style.typeTable.td.padding.vertical, style.typeTable.td.padding.horizontal, function (props) {
  return props.indent * style.typeTable.td.indent + style.typeTable.td.padding.vertical;
}, colors.veryVeryLightGrey);
var TrStyled = styled.tr(_templateObject6$1 || (_templateObject6$1 = _taggedTemplateLiteralLoose(["\n  border-bottom: 1px solid ", ";\n  &:last-child {\n    border-bottom: 0px;\n  }\n"])), colors.lightGrey);
var FieldMarker = styled.div(_templateObject7$1 || (_templateObject7$1 = _taggedTemplateLiteralLoose(["\n  display: inline-block;\n  border-radius: 4px;\n  padding: ", "px ", "px;\n  margin-left: ", ";\n  margin-right: ", ";\n  background-color: ", ";\n  color: ", ";\n  white-space: nowrap;\n"])), grid(0.5), grid(1), function (props) {
  return props.direction === 'right' ? '8px' : '0px';
}, function (props) {
  return props.direction === 'left' ? '8px' : '0px';
}, function (props) {
  return props.markerType === 'oneof' ? colors.red : colors.yellow;
}, colors.white);

var _templateObject$a, _templateObject2$6;
var Wrapper = styled.div(_templateObject$a || (_templateObject$a = _taggedTemplateLiteralLoose(["\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 100px;\n"])));
var Wrapper2 = styled.div(_templateObject2$6 || (_templateObject2$6 = _taggedTemplateLiteralLoose(["\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n"])));
var Loading = function Loading() {
  return React__default.createElement(Wrapper, null, React__default.createElement(Wrapper2, null, "Loading"));
};

var _templateObject$b, _templateObject2$7, _templateObject3$3, _templateObject4$3;
var RequestCode = function RequestCode(_ref) {
  var sdkAvailableLanguages = _ref.sdkAvailableLanguages,
      codeProvider = _ref.codeProvider,
      snippetCode = _ref.snippetCode,
      selectedProgrammingLanguage = _ref.selectedProgrammingLanguage,
      selectProgrammingLanguage = _ref.selectProgrammingLanguage;
  return React__default.createElement(Fragment, null, React__default.createElement(CodeSnippetTitle, null, React__default.createElement(CustomSelect, {
    onSelect: function onSelect(x) {
      selectProgrammingLanguage(+x);
    },
    value: '' + selectedProgrammingLanguage
  }, codeProvider.getAvailableProgrammingLanguages(sdkAvailableLanguages).map(function (el, key) {
    return React__default.createElement(CustomOption, {
      key: key,
      value: el
    }, programmingLangToName(el));
  })), React__default.createElement("div", {
    style: {
      borderLeft: '2px solid ' + colors.lightGrey,
      height: '70%',
      opacity: '0.3',
      margin: '0px 8px'
    }
  }), React__default.createElement(CopyButton, {
    text: snippetCode
  })), React__default.createElement(StyledHighlighter, {
    code: snippetCode,
    programmingLanguage: selectedProgrammingLanguage,
    highlightMap: new Map()
  }));
};

var StyledHighlighter = function StyledHighlighter(props) {
  return props.code === '' ? React__default.createElement("div", {
    style: {
      height: '200px',
      border: '1px solid ' + colors.lightGrey,
      borderTop: '0px'
    }
  }, React__default.createElement(Loading, null)) : React__default.createElement(SyntaxHighlighter, {
    style: style.codeStyle,
    customStyle: {
      padding: '16px 8px',
      margin: '0px',
      lineHeight: '1.2',
      boxSizing: 'border-box'
    },
    lineProps: function lineProps(line) {
      return {
        style: {
          backgroundColor: props.highlightMap.has(line) ? colors.codeHighlight : 'transparent',
          boxSizing: 'border-box',
          display: 'block',
          wordBreak: 'break-all',
          whiteSpace: 'pre-wrap'
        }
      };
    },
    showLineNumbers: true,
    language: programmingLangToString(props.programmingLanguage)
  }, props.code);
};

var CustomSelect = function CustomSelect(props) {
  return React__default.createElement(CustomSelectWrapper, null, React__default.createElement(CustomSelectStyle, {
    onChange: function onChange(e) {
      return props.onSelect(e.target.value);
    },
    value: props.value
  }, props.children));
};
var CodeSnippetTitle = styled.div(_templateObject$b || (_templateObject$b = _taggedTemplateLiteralLoose(["\n  border: 1px solid ", ";\n  display: flex;\n  color: black;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  border-top-left-radius: ", "px;\n  border-top-right-radius: ", "px;\n  padding: 0px;\n"])), colors.lightGrey, style.radius, style.radius);
var CustomSelectWrapper = styled.label(_templateObject2$7 || (_templateObject2$7 = _taggedTemplateLiteralLoose(["\n  cursor: pointer;\n  text-align: right;\n"])));
var CustomSelectStyle = styled.select(_templateObject3$3 || (_templateObject3$3 = _taggedTemplateLiteralLoose(["\n  text-indent: 1px;\n  text-overflow: '';\n  border: 0;\n  background-color: transparent;\n  color: inherit;\n  padding: 16px 4px;\n  text-align: right;\n"])));
var CustomOption = styled.option(_templateObject4$3 || (_templateObject4$3 = _taggedTemplateLiteralLoose(["\n  text-align: right;\n  padding: 4px;\n  background-color: white;\n"])));

var MethodOutput = function MethodOutput(_ref) {
  var output = _ref.output,
      language = _ref.language;
  return React__default.createElement(StyledHighlighter$1, {
    code: output,
    programmingLanguage: language
  });
};

var StyledHighlighter$1 = function StyledHighlighter(props) {
  return props.code === '' ? React__default.createElement(Loading, null) : React__default.createElement(SyntaxHighlighter, {
    style: atomOneDarkReasonable,
    customStyle: {
      padding: '16px 8px',
      margin: '0px',
      lineHeight: '1.2',
      boxSizing: 'border-box',
      borderBottomLeftRadius: style.radius,
      borderBottomRightRadius: style.radius
    },
    lineProps: function lineProps() {
      return {
        style: {
          boxSizing: 'border-box',
          display: 'block',
          wordBreak: 'break-all',
          whiteSpace: 'pre-wrap'
        }
      };
    },
    showLineNumbers: true,
    language: props.programmingLanguage
  }, props.code);
};

var _templateObject$c;
var MethodSnippets = function MethodSnippets(_ref) {
  var snippets = _ref.snippets,
      availableProgrammingLangs = _ref.availableProgrammingLangs,
      codeProvider = _ref.codeProvider,
      selectedProgrammingLanguage = _ref.selectedProgrammingLanguage,
      selectProgrammingLanguage = _ref.selectProgrammingLanguage;
  return React__default.createElement(Fragment, null, React__default.createElement(RequestCode, {
    sdkAvailableLanguages: availableProgrammingLangs,
    fullCodeAvailable: false,
    snippetCode: (snippets === null || snippets === void 0 ? void 0 : snippets.code) || '',
    codeProvider: codeProvider,
    selectedProgrammingLanguage: selectedProgrammingLanguage,
    selectProgrammingLanguage: selectProgrammingLanguage
  }), (snippets === null || snippets === void 0 ? void 0 : snippets.output) && React__default.createElement(Fragment, null, React__default.createElement(OutputSeparator, null, "Example output (decoded)"), React__default.createElement(MethodOutput, {
    output: (snippets === null || snippets === void 0 ? void 0 : snippets.output) || '',
    language: 'json'
  })));
};
var OutputSeparator = styled.div(_templateObject$c || (_templateObject$c = _taggedTemplateLiteralLoose(["\n  padding: ", "px ", "px;\n  border-left: 1px solid ", ";\n  border-right: 1px solid ", ";\n"])), grid(2), grid(1), colors.lightGrey, colors.lightGrey);

var _templateObject$d, _templateObject2$8, _templateObject3$4, _templateObject4$4;
var Method = function Method(_ref) {
  var _types$get, _types$get2;

  var snippets = _ref.snippets,
      method = _ref.method,
      types = _ref.types,
      codeProvider = _ref.codeProvider,
      availableProgrammingLangs = _ref.availableProgrammingLangs,
      selectedProgrammingLanguage = _ref.selectedProgrammingLanguage,
      selectProgrammingLanguage = _ref.selectProgrammingLanguage;
  return React__default.createElement(MethodWrapper, null, React__default.createElement(SectionSubtitle, null, React__default.createElement("span", {
    style: {
      color: colors.darkGrey
    }
  }, "rpc"), ' ', toHumanReadableName(method.getName())), React__default.createElement(TwoPaneWrapper, null, React__default.createElement(Pane, null, React__default.createElement("div", null, method.getDescription()), React__default.createElement(MethodTypeName, null, React__default.createElement(TypePrefix, null, "requests", method.getInStreaming() && 'stream of'), "\xA0", cutOutCommonPackage(method.getInTypeId(), method.getMethodId())), React__default.createElement(TypeDescriptionDiv, null, (_types$get = types.get(method.getInTypeId())) === null || _types$get === void 0 ? void 0 : _types$get.getDescription()), React__default.createElement(TypeTable, {
    type: types.get(method.getInTypeId()),
    allTypes: types
  }), React__default.createElement(MethodTypeName, null, React__default.createElement(TypePrefix, null, "returns", method.getOutStreaming() && 'stream of'), "\xA0", cutOutCommonPackage(method.getOutTypeId(), method.getMethodId())), React__default.createElement(TypeDescriptionDiv, null, (_types$get2 = types.get(method.getOutTypeId())) === null || _types$get2 === void 0 ? void 0 : _types$get2.getDescription()), React__default.createElement(TypeTable, {
    type: types.get(method.getOutTypeId()),
    allTypes: types
  })), React__default.createElement(Pane, null, selectedProgrammingLanguage !== ProgrammingLanguage.PYTHON && React__default.createElement(MethodSnippets, {
    codeProvider: codeProvider,
    availableProgrammingLangs: availableProgrammingLangs,
    snippets: snippets,
    selectedProgrammingLanguage: selectedProgrammingLanguage,
    selectProgrammingLanguage: selectProgrammingLanguage
  }))));
};
var TypePrefix = styled.span(_templateObject$d || (_templateObject$d = _taggedTemplateLiteralLoose(["\n  color: ", ";\n"])), colors.darkGrey);
var TypeDescriptionDiv = styled.div(_templateObject2$8 || (_templateObject2$8 = _taggedTemplateLiteralLoose(["\n  margin-top: ", "px;\n  margin-bottom: ", "px;\n"])), grid(1), grid(2));
var MethodTypeName = styled.h4(_templateObject3$4 || (_templateObject3$4 = _taggedTemplateLiteralLoose(["\n  margin-top: ", "px;\n  margin-bottom: ", "px;\n  font-size: 20px;\n  font-weight: normal;\n"])), grid(4), grid(1));
var MethodWrapper = styled.div(_templateObject4$4 || (_templateObject4$4 = _taggedTemplateLiteralLoose(["\n  margin-top: ", "px;\n"])), grid(8));

var APIReference = function APIReference(_ref) {
  var data = _ref.data,
      codeProvider = _ref.codeProvider,
      sdkProgrammingLangs = _ref.sdkProgrammingLangs,
      selectedProgrammingLanguage = _ref.selectedProgrammingLanguage,
      selectProgrammingLanguage = _ref.selectProgrammingLanguage,
      codeSnippets = _ref.codeSnippets;

  var _useState = useState([]),
      services = _useState[0],
      setService = _useState[1];

  var _useState2 = useState(new Map()),
      sid2method = _useState2[0],
      setSid2method = _useState2[1];

  useEffect(function () {
    if (!data) {
      return;
    }

    setService(ServiceDescriptionsInOrder(data.getServicesMap()));
    var mm = new Map();
    data.getMethodsMap().forEach(function (value) {
      var x = mm.get(value.getServiceId());

      if (x === undefined) {
        mm.set(value.getServiceId(), [value]);
      } else {
        x.push(value);
      }
    });
    setSid2method(mm);
  }, [data]);

  if (!data) {
    return React__default.createElement(Loading, null);
  }

  return React__default.createElement(SectionWrapper, null, services.map(function (value, key) {
    var _sid2method$get;

    return React__default.createElement("div", {
      key: key
    }, React__default.createElement(Service, {
      service: value
    }), (_sid2method$get = sid2method.get(value.getServiceId())) === null || _sid2method$get === void 0 ? void 0 : _sid2method$get.map(function (method, key) {
      var codeSnippet = codeSnippets.get(method.getMethodId());
      return React__default.createElement(Fragment, {
        key: key
      }, React__default.createElement(Method, {
        method: method,
        availableProgrammingLangs: sdkProgrammingLangs,
        types: data.getTypesMap(),
        codeProvider: codeProvider,
        snippets: codeSnippet,
        selectedProgrammingLanguage: selectedProgrammingLanguage,
        selectProgrammingLanguage: selectProgrammingLanguage
      }));
    }));
  }));
};

var _templateObject$e, _templateObject2$9;
var DefaultStyle = function DefaultStyle(_ref) {
  var _build$getSdkProvisio, _build$getSdkProvisio2;

  var build = _ref.build,
      availableProgrammingLangs = _ref.availableProgrammingLangs,
      selectedProgrammingLang = _ref.selectedProgrammingLang,
      setProgrammingLang = _ref.setProgrammingLang,
      codeProvider = _ref.codeProvider,
      codeSnippets = _ref.codeSnippets;

  if (availableProgrammingLangs === null) {
    return React__default.createElement(Loading, null);
  }

  return React__default.createElement(DefaultStyleWrapper, null, !!availableProgrammingLangs && React__default.createElement(ClientLibraries, {
    protoUrl: build.getGrpcRepoSourceUrl(),
    availableSetupLangs: availableProgrammingLangs,
    selectedProgrammingLang: selectedProgrammingLang,
    setProgrammingLang: setProgrammingLang,
    repositoryUrl: ((_build$getSdkProvisio = build.getSdkProvisioning()) === null || _build$getSdkProvisio === void 0 ? void 0 : _build$getSdkProvisio.getFetchUrl()) || '',
    projectName: build.getApiName(),
    sdkRepoName: ((_build$getSdkProvisio2 = build.getSdkProvisioning()) === null || _build$getSdkProvisio2 === void 0 ? void 0 : _build$getSdkProvisio2.getSdkRepoCommitSha()) || '',
    sdkBranch: ''
  }), React__default.createElement(APIReference, {
    codeSnippets: codeSnippets,
    data: build.getData(),
    codeProvider: codeProvider,
    sdkProgrammingLangs: availableProgrammingLangs || [],
    selectProgrammingLanguage: setProgrammingLang,
    selectedProgrammingLanguage: selectedProgrammingLang
  }), React__default.createElement(Footer, null, "Generated with", ' ', React__default.createElement("a", {
    href: 'https://github.com/gendocu-com/grpc-docs'
  }, "grpc-docs")));
};
var DefaultStyleWrapper = styled.div(_templateObject$e || (_templateObject$e = _taggedTemplateLiteralLoose(["\n  margin: auto;\n  @media (max-width: 600px) {\n    padding: 0px;\n    border-left: 0px;\n  }\n"])));
var Footer = styled.div(_templateObject2$9 || (_templateObject2$9 = _taggedTemplateLiteralLoose(["\n  margin: ", "px 0px;\n  text-align: center;\n  color: ", ";\n"])), grid(3), colors.grey);

var _templateObject$f;
var ErrorMessage = styled.div(_templateObject$f || (_templateObject$f = _taggedTemplateLiteralLoose(["\n  color: red;\n"])));

function setPreferredProgrammingLanguage(p) {
  localStorage.setItem('preferred_programming_language', '' + p);
}
function getPreferredProgrammingLanguage() {
  var x = localStorage.getItem('preferred_programming_language');
  return x === null ? -1 : +x;
}

var GenDocuBackendSdkBackend = 'https://ncjytmo301.execute-api.eu-central-1.amazonaws.com';
var getMetadata = function getMetadata(passwordSessionId) {
  var meta = new grpc.Metadata();

  if (passwordSessionId) {
    meta.append('session-id', 'pwd ' + passwordSessionId);
  }

  return meta;
};
var LanguageNotSupported = function LanguageNotSupported(e) {
  return e.code === 100 || e.message.includes('unsupported language');
};

var GendocuCodeProvider = /*#__PURE__*/function () {
  function GendocuCodeProvider(buildId) {
    this.buildId = buildId;
    this.sdkGeneratorClient = new SdkGeneratorClient(GenDocuBackendSdkBackend);
  }

  var _proto = GendocuCodeProvider.prototype;

  _proto.getAvailableProgrammingLanguages = function getAvailableProgrammingLanguages(langs) {
    return langs.filter(function (el) {
      return el !== ProgrammingLanguage.PYTHON;
    });
  };

  _proto.getAllSnippets = function getAllSnippets(lang, sessionId) {
    var _this = this;

    return new Promise(function (resolve) {
      var req = new GenerateInputCodeSnippetsRequest();
      req.setBuildId(_this.buildId);
      req.setProgrammingLang(lang);

      _this.sdkGeneratorClient.generateInputCodeSnippets(req, getMetadata(sessionId), function (err, resp) {
        if (!!err || resp === null) {
          if (!!err && LanguageNotSupported(err)) {
            return resolve([]);
          }

          console.error('received error:' + ((err === null || err === void 0 ? void 0 : err.message) || 'received empty response'));
        } else {
          if (resp.getProgrammingLang() !== lang) {
            return resolve([]);
          }

          var snippets = new Map();
          resp.getMethodIdToCodeSnippetMap().forEach(function (el, key) {
            snippets.set(key, el);
          });
          var outputs = new Map();
          resp.getMethodIdToCodeOutputMap().forEach(function (el, key) {
            outputs.set(key, el);
          });
          var res = [];
          snippets.forEach(function (el, key) {
            res.push({
              methodId: key,
              snippetCode: el,
              output: outputs.get(key) || ''
            });
          });
          resolve(res);
        }
      });
    });
  };

  _proto.getCode = function getCode(lang, mode) {
    return {
      code: 'x' + lang + mode,
      output: 'y',
      hasFullCode: false
    };
  };

  return GendocuCodeProvider;
}();

var _templateObject$g, _templateObject2$a, _templateObject3$5, _templateObject4$5, _templateObject5$2, _templateObject6$2, _templateObject7$2, _templateObject8$1;
var DefaultStyleLoginWidget = function DefaultStyleLoginWidget(props) {
  var _props$err;

  var _useState = useState(''),
      newPassword = _useState[0],
      setNewPassword = _useState[1];

  return React__default.createElement(Fragment, null, React__default.createElement(LoginWrapper, null, React__default.createElement(LoginBox, null, React__default.createElement("h1", null, "Password protected"), React__default.createElement("div", null, React__default.createElement(Description, null, "Enter the password."), React__default.createElement(PasswordLine, null, React__default.createElement(PasswordInput, {
    type: 'password',
    placeholder: 'Password',
    onChange: function onChange(val) {
      return setNewPassword(val.target.value);
    }
  }), React__default.createElement(PasswordButton, {
    type: 'button',
    value: 'Submit',
    onClick: function onClick() {
      return props.testPassword(newPassword);
    }
  })), props.message ? React__default.createElement(Message, null, props.message) : React__default.createElement(ErrMessage, null, (_props$err = props.err) === null || _props$err === void 0 ? void 0 : _props$err.message)))));
};
var PasswordLine = styled.div(_templateObject$g || (_templateObject$g = _taggedTemplateLiteralLoose(["\n  display: flex;\n  gap: ", "px;\n  justify-content: center;\n"])), grid(1));
var PasswordInput = styled.input(_templateObject2$a || (_templateObject2$a = _taggedTemplateLiteralLoose(["\n  padding: ", "px ", "px;\n  border-radius: ", "px;\n  box-shadow: 0px;\n  border: 1px solid ", ";\n"])), grid(1), grid(2), style.radius, colors.darkGrey);
var PasswordButton = styled.input(_templateObject3$5 || (_templateObject3$5 = _taggedTemplateLiteralLoose(["\n  padding: ", "px ", "px;\n  border-radius: ", "px;\n  box-shadow: 0px;\n  border: 1px solid ", ";\n"])), grid(1), grid(2), style.radius, colors.darkGrey);
var ErrMessage = styled.div(_templateObject4$5 || (_templateObject4$5 = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  margin: ", "px;\n"])), colors.red, grid(2));
var Message = styled.div(_templateObject5$2 || (_templateObject5$2 = _taggedTemplateLiteralLoose(["\n  color: ", ";\n  margin: ", "px;\n"])), colors.grey, grid(2));
var Description = styled.div(_templateObject6$2 || (_templateObject6$2 = _taggedTemplateLiteralLoose(["\n  margin: ", "px;\n"])), grid(2));
var LoginWrapper = styled.div(_templateObject7$2 || (_templateObject7$2 = _taggedTemplateLiteralLoose(["\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n"])));
var LoginBox = styled.div(_templateObject8$1 || (_templateObject8$1 = _taggedTemplateLiteralLoose(["\n  position: relative;\n  min-height: 300px;\n  top: 50%;\n  transform: translateY(-50%);\n  max-width: ", "px;\n  margin: auto;\n  text-align: center;\n"])), grid(50));

var GenDocuWidget = function GenDocuWidget(props) {
  var _useState = useState(),
      build = _useState[0],
      setBuild = _useState[1];

  var _useState2 = useState(),
      err = _useState2[0],
      setError = _useState2[1];

  var _useState3 = useState(),
      passwordMessage = _useState3[0],
      setPasswordMessage = _useState3[1];

  var _useState4 = useState(),
      passwordSessionId = _useState4[0],
      setPasswordSessionId = _useState4[1];

  var _useState5 = useState(new Map()),
      codeSnippets = _useState5[0],
      setCodeSnippets = _useState5[1];

  var _useState6 = useState(getPreferredProgrammingLanguage()),
      programmingLanguage = _useState6[0],
      setProgrammingLanguageRaw = _useState6[1];

  var _useState7 = useState([]),
      availableProgrammingLangs = _useState7[0],
      setAvailableProgrammingLangs = _useState7[1];

  var setProgrammingLanguage = function setProgrammingLanguage(p) {
    setPreferredProgrammingLanguage(p);
    setProgrammingLanguageRaw(p);
  };

  var sdkGenerator = new SdkGeneratorClient(GenDocuBackendSdkBackend);
  console.log("here!");
  useEffect(function () {
    console.log("here2!");
    var buildwithorgandname = new BuildWithOrgAndName();
    buildwithorgandname.setApiName(props.project);
    buildwithorgandname.setOrganization(props.organization);
    var buildselectorrequest = new BuildSelectorRequest();
    buildselectorrequest.setOrgAndName(buildwithorgandname);
    sdkGenerator.getBuild(buildselectorrequest, getMetadata(passwordSessionId), function (err, value) {
      if (!!err || !value) {
        setError(err || {
          message: 'received empty value',
          code: -1,
          metadata: new grpc.Metadata()
        });
      } else {
        setBuild(value);
        var prov = value.getSdkProvisioning();

        if (prov !== undefined) {
          var langs = [];
          prov.getProvisioningDataMap().forEach(function (el, key) {
            if (el.getError() === '') {
              langs.push(key);
            }
          });

          if (langs.length > 0) {
            var index = langs.findIndex(function (el) {
              return el === getPreferredProgrammingLanguage();
            });

            if (!!index && index !== -1) {
              setProgrammingLanguage(langs[index]);
            } else {
              setProgrammingLanguage(langs[0]);
            }
          }

          console.log("available langs", langs);
          setAvailableProgrammingLangs(langs);
        }
      }
    });
  }, [passwordSessionId]);
  useEffect(function () {
    if (!build) {
      return;
    }

    var codeProvider = new GendocuCodeProvider(build.getBuildId());
    var m = new Map();
    var resp = codeProvider.getAllSnippets(programmingLanguage, passwordSessionId);
    resp.then(function (el) {
      el.forEach(function (el) {
        m.set(el.methodId, {
          code: el.snippetCode,
          output: el.output
        });
      });
      setCodeSnippets(m);
    });
  }, [build, passwordSessionId, programmingLanguage]);

  var testPassword = function testPassword(password) {
    var buildwithorgandname = new BuildWithOrgAndName();
    buildwithorgandname.setApiName(props.project);
    buildwithorgandname.setOrganization(props.organization);
    var buildselectorrequest = new BuildSelectorRequest();
    buildselectorrequest.setOrgAndName(buildwithorgandname);
    var req = new EnterPasswordRequest();
    req.setSelector(buildselectorrequest);
    req.setPassword(password);
    setPasswordMessage('Checking password');
    sdkGenerator.enterPassword(req, getMetadata(), function (err, resp) {
      if (err || !resp) {
        setError(err || {
          message: 'received empty response',
          code: -1,
          metadata: new grpc.Metadata()
        });
        setPasswordMessage(undefined);
      } else {
        setError(undefined);
        setPasswordMessage('Password is valid, loading documentation');
        setPasswordSessionId(resp.getSessionId());
      }
    });
  };

  if (err) {
    if ((err === null || err === void 0 ? void 0 : err.code) === grpc.Code.PermissionDenied) {
      return React__default.createElement(Fragment, null, React__default.createElement(DefaultStyleLoginWidget, {
        testPassword: testPassword,
        err: err,
        message: passwordMessage
      }));
    } else {
      return React__default.createElement(ErrorMessage, null, "Code ", err.code, ": ", err.message);
    }
  } else if (build === undefined) {
    return React__default.createElement(Loading, null);
  }

  return React__default.createElement(DefaultStyle, {
    build: build,
    codeSnippets: codeSnippets,
    availableProgrammingLangs: availableProgrammingLangs,
    selectedProgrammingLang: programmingLanguage,
    setProgrammingLang: setProgrammingLanguage,
    codeProvider: new GendocuCodeProvider(build.getBuildId())
  });
};

var NoBackendCodeProvider = /*#__PURE__*/function () {
  function NoBackendCodeProvider(build) {
    this.build = build;
  }

  var _proto = NoBackendCodeProvider.prototype;

  _proto.getAvailableProgrammingLanguages = function getAvailableProgrammingLanguages() {
    return [ProgrammingLanguage.GRPCURL];
  };

  _proto.getAllSnippets = function getAllSnippets(lang) {
    var _this = this;

    if (lang !== ProgrammingLanguage.GRPCURL) {
      console.error();
      return Promise.reject('selected unsupported programming language');
    }

    var env = this.build.getEnvsList()[0];
    return new Promise(function (resolve) {
      var _this$build$getData;

      var l = [];
      (_this$build$getData = _this.build.getData()) === null || _this$build$getData === void 0 ? void 0 : _this$build$getData.getMethodsMap().forEach(function (el, key) {
        l.push({
          methodId: key,
          snippetCode: "grpcurl -d '{}' " + convertUrlToGRPCurl((env === null || env === void 0 ? void 0 : env.getServiceGrpcUrlMap().get(el.getServiceId())) || 'grpc://unknown-grpc-url') + ' ' + el.getServiceId().substr(1) + '/' + el.getName(),
          output: ''
        });
      });
      resolve(l);
    });
  };

  _proto.getCode = function getCode(lang, mode) {
    return {
      code: 'x' + lang + mode,
      output: 'y',
      hasFullCode: false
    };
  };

  return NoBackendCodeProvider;
}();

function convertUrlToGRPCurl(url) {
  if (!url) {
    return '<unkown-url>';
  }

  if (url.startsWith("grpcs:")) {
    return url.replaceAll('grpcs://', '');
  } else if (url.startsWith('grpc:')) {
    return '-plaintext ' + url.replaceAll('grpc://', '');
  } else {
    return '<invalid-url-scheme:' + url + '>';
  }
}

var PseudomutoProtocGenDoc = function PseudomutoProtocGenDoc(_ref) {
  var file = _ref.file,
      scheme = _ref.scheme,
      definition = _ref.definition;

  var _useState = useState(''),
      err = _useState[0],
      setError = _useState[1];

  var _useState2 = useState(undefined),
      apiBuild = _useState2[0],
      setAPIBuild = _useState2[1];

  var _useState3 = useState(ProgrammingLanguage.GRPCURL),
      selectedProgrammingLanguage = _useState3[0],
      setSelectedProgrammingLanguage = _useState3[1];

  var _useState4 = useState(new Map()),
      codeSnippets = _useState4[0],
      setCodeSnippets = _useState4[1];

  useEffect(function () {
    if (!apiBuild) {
      return;
    }

    var codeProvider = new NoBackendCodeProvider(apiBuild);
    var m = new Map();
    var resp = codeProvider.getAllSnippets(selectedProgrammingLanguage);
    resp.then(function (el) {
      el.forEach(function (el) {
        m.set(el.methodId, {
          code: el.snippetCode,
          output: el.output
        });
      });
      setCodeSnippets(m);
    });
  }, [apiBuild, selectedProgrammingLanguage]);
  useEffect(function () {

    (function () {
      try {
        var _temp7 = function _temp7() {
          function _temp3() {
            if (!file && !definition || file && definition) {
              setError('Make sure you provide either the raw definition or a file to fetch the protoc definition');
            }

            var data = new APIDescriptionGeneratorModel();
            data.setDescription('Documentation generated with github.com/gendocu-com/grpc-docs');
            var map = data.getMethodsMap();
            protocDefinition.files.forEach(function (el) {
              el.services.forEach(function (service) {
                var srvc = new ServiceDescription();
                srvc.setServiceId('.' + service.fullName);
                srvc.setDescription(service.description);
                srvc.setShortName(service.name);
                srvc.setFullName(service.fullName);
                srvc.setSourceProtoFile(el.name);
                data.getServicesMap().set(service.fullName, srvc);
                service.methods.forEach(function (method) {
                  var m = new MethodDescription();
                  m.setName(method.name);
                  m.setDescription(cleanDescription(method.description));
                  m.setMethodId(srvc.getServiceId() + '.' + method.name);
                  m.setServiceId(srvc.getServiceId());
                  m.setInTypeId(getPrimitiveTypename(method.requestFullType));
                  m.setInStreaming(method.requestStreaming);
                  m.setOutTypeId(getPrimitiveTypename(method.responseFullType));
                  m.setOutStreaming(method.responseStreaming);
                  m.setSourceProtoFile(el.name);
                  map.set(m.getMethodId(), m);
                });
              });
              el.messages.forEach(function (type) {
                var typeDescription = new TypeDescription();
                typeDescription.setDescription(cleanDescription(type.description));
                typeDescription.setFullName(type.fullName);
                typeDescription.setShortName(type.name);
                typeDescription.setTypeId(getPrimitiveTypename(type.fullName));
                type.fields.forEach(function (el) {
                  var f = new FieldDescription();
                  f.setTypeId(getPrimitiveTypename(el.fullType));
                  f.setName(el.name || el.fullType);
                  f.setDescription(cleanDescription(el.description));

                  if (el.isoneof) {
                    f.setOneOf(el.oneofdecl);
                  }

                  f.setRepeated(el.label.indexOf('repeated') !== -1);
                  f.setOptional(false);
                  f.setRequired(false);
                  typeDescription.addFields(f);
                });
                data.getTypesMap().set(typeDescription.getTypeId(), typeDescription);
              });
              el.enums.forEach(function (e) {
                var typeDescription = new TypeDescription();
                typeDescription.setTypeId(e.fullName);
                typeDescription.setFullName(e.fullName);
                typeDescription.setDescription(e.description);
                var enumDescription = new EnumDescription();
                e.values.forEach(function (x) {
                  enumDescription.getValuesMap().set(x.name, +x.number);
                });
                typeDescription.setEnumDescription(enumDescription);
                data.getTypesMap().set(typeDescription.getTypeId(), typeDescription);
              });
            });
            var build = new Build();
            build.setData(data);

            if (apiSpec) {
              try {
                var _build$getData;

                var res = apiSpec;
                var env = new Environment();
                env.setId('default');
                build === null || build === void 0 ? void 0 : (_build$getData = build.getData()) === null || _build$getData === void 0 ? void 0 : _build$getData.getServicesMap().forEach(function (entry) {
                  var _res$servers;

                  var name = entry.getFullName();
                  var d = (res === null || res === void 0 ? void 0 : (_res$servers = res.servers) === null || _res$servers === void 0 ? void 0 : _res$servers.find(function (el) {
                    return minimatch(name, el.selector);
                  })) || undefined;

                  if (d && d.envs && d.envs.length > 0) {
                    var grpc = d.envs[0].urls.find(function (el) {
                      return el.startsWith('grpc') && !el.startsWith('grpcweb');
                    });

                    if (grpc) {
                      env.getServiceGrpcUrlMap().set(entry.getServiceId(), grpc);
                    }

                    var grpcweb = d.envs[0].urls.find(function (el) {
                      return el.startsWith('grpcweb');
                    });

                    if (grpcweb) {
                      env.getServiceWebgrpcUrlMap().set(entry.getServiceId(), grpcweb);
                    }
                  }
                });
                build.setEnvsList([env]);
                setAPIBuild(build);
              } catch (err) {
                if (err instanceof Error) {
                  setError(err.message);
                } else {
                  throw err;
                }
              }
            } else {
              setAPIBuild(build);
            }
          }

          var protocDefinition;

          var _temp2 = function () {
            if (definition) {
              protocDefinition = JSON.parse(definition);
            } else {
              var _temp6 = function () {
                if (file) {
                  return Promise.resolve(fetch(file)).then(function (resp) {
                    return Promise.resolve(resp.json()).then(function (_resp$json) {
                      protocDefinition = _resp$json;
                    });
                  });
                }
              }();

              if (_temp6 && _temp6.then) return _temp6.then(function () {});
            }
          }();

          return _temp2 && _temp2.then ? _temp2.then(_temp3) : _temp3(_temp2);
        };

        var apiSpec;

        var _temp8 = function () {
          if (scheme) {
            return Promise.resolve(fetch(scheme)).then(function (resp) {
              var _load = yaml.load;
              return Promise.resolve(resp.text()).then(function (_resp$text) {
                apiSpec = _load.call(yaml, _resp$text);
              });
            });
          }
        }();

        return _temp8 && _temp8.then ? _temp8.then(_temp7) : _temp7(_temp8);
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file, scheme, definition]);

  if (err) {
    return React__default.createElement("h1", {
      style: {
        color: 'red'
      }
    }, "Received error: ", err);
  }

  if (!apiBuild) {
    return React__default.createElement(Loading, null);
  }

  return React__default.createElement(DefaultStyle, {
    codeSnippets: codeSnippets,
    build: apiBuild,
    availableProgrammingLangs: [ProgrammingLanguage.GRPCURL],
    selectedProgrammingLang: ProgrammingLanguage.GRPCURL,
    setProgrammingLang: setSelectedProgrammingLanguage,
    codeProvider: new NoBackendCodeProvider(apiBuild)
  });
};

function getPrimitiveTypename(el) {
  switch (el) {
    case 'string':
      return 'TYPE_STRING';

    case 'bool':
      return 'TYPE_BOOL';

    case 'sfixed32':
      return 'TYPE_SFIXED32';

    case 'fixed32':
      return 'TYPE_FIXED32';

    case 'sint32':
      return 'TYPE_SINT32';

    case 'int32':
      return 'TYPE_INT32';

    case 'sfixed64':
      return 'TYPE_SFIXED64';

    case 'fixed64':
      return 'TYPE_FIXED64';

    case 'sint64':
      return 'TYPE_SINT64';

    case 'int64':
      return 'TYPE_INT64';

    case 'double':
      return 'TYPE_DOUBLE';

    case 'float':
      return 'TYPE_FLOAT';

    case 'uint32':
      return 'TYPE_UINT32';

    case 'uint64':
      return 'TYPE_UINT64';

    case 'bytes':
      return 'TYPE_BYTES';

    default:
      return '.' + el;
  }
}

function cleanDescription(desc) {
  return desc;
}

var GRPCGenDocuAPIReference = function GRPCGenDocuAPIReference(props) {
  return createElement(GenDocuWidget, Object.assign({}, props));
};
var GRPCSelfGeneratedAPIReference = function GRPCSelfGeneratedAPIReference(_ref) {
  var file = _ref.file,
      scheme = _ref.scheme,
      definition = _ref.definition;
  return createElement(PseudomutoProtocGenDoc, {
    file: file,
    scheme: scheme,
    definition: definition
  });
};
var init = function init(config) {
  var el = document.getElementById(config.classname);

  if (!el) {
    console.error('Unable to find element with class=' + config.classname);
    return;
  }

  var component = config.GenDocuBackend.project !== '' ? createElement(GRPCGenDocuAPIReference, {
    project: config.GenDocuBackend.project,
    organization: config.GenDocuBackend.organization
  }) : createElement(GRPCSelfGeneratedAPIReference, {
    file: config.descriptor.file,
    scheme: config.descriptor.scheme
  });
  ReactDOM.render(component, el);
};

export { GRPCGenDocuAPIReference, GRPCSelfGeneratedAPIReference, init };
//# sourceMappingURL=index.modern.js.map
