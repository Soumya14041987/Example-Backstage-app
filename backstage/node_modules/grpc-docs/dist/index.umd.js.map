{"version":3,"file":"index.umd.js","sources":["../src/style/default/Constant.tsx","../src/style/default/common/SectionTitle.tsx","../src/style/default/common/TwoPaneWrapper.tsx","../src/style/default/common/SectionWrapper.tsx","../src/style/default/common/CopyButton.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/Style.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupGolangSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupJavaSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupPythonSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupJavascriptSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupTypescriptSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupCSharpSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupKotlinSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupRustSDK.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SetupGrpcurl.tsx","../src/style/default/sections/ClientLibraries/SDKSetup/SDKSetup.tsx","../src/common/Types.tsx","../src/style/default/sections/ClientLibraries/ProgrammingLanguageSelector.tsx","../src/style/default/sections/ClientLibraries/ClientLibraries.tsx","../src/common/ServiceOrder.ts","../src/style/default/sections/APIReference/Service.tsx","../src/style/default/common/SectionSubtitle.tsx","../src/common/PBUtils.ts","../src/style/default/sections/APIReference/TypeTable.tsx","../src/common/Loading.tsx","../src/style/default/sections/APIReference/RequestCode.tsx","../src/style/default/sections/APIReference/MethodOutput.tsx","../src/style/default/sections/APIReference/MethodSnippets.tsx","../src/style/default/sections/APIReference/Method.tsx","../src/style/default/sections/APIReference/APIReference.tsx","../src/style/default/DefaultStyle.tsx","../src/common/ErrorMessage.tsx","../src/common/StorageUtils.ts","../src/common/GenDocuBackendUtils.ts","../src/components/codeProviders/GendocuCodeProvider.ts","../src/style/default/DefaultStyleLogin.tsx","../src/components/widgets/gendocuWidget.tsx","../src/components/codeProviders/NoBackendCodeProvider.ts","../src/components/widgets/pseudomutoProtocGenDoc.tsx","../src/index.tsx"],"sourcesContent":["import atomOneDarkReasonable from \"react-syntax-highlighter/dist/cjs/styles/hljs/atom-one-dark\";\n\nexport const grid = (x: number) => x * 8\nexport const style = {\n  section: {\n    title: {\n      fontSize: grid(3),\n      margin: {\n        bottom: grid(1),\n        top: grid(2)\n      },\n      padding: {\n        vertical: 0,\n        horizontal: 0\n      }\n    },\n    padding: {\n      mobile: {\n        vertical: grid(2),\n        horizontal: grid(1)\n      },\n      horizontal: grid(3),\n      top: grid(2),\n      bottom: grid(6)\n    },\n    maxWidth: grid(200),\n    gap: grid(2)\n  },\n  typeTable: {\n    th: {\n      padding: {\n        vertical: grid(1),\n        horizontal: grid(2)\n      }\n    },\n    td: {\n      padding: {\n        vertical: grid(1),\n        horizontal: grid(2)\n      },\n      indent: grid(1)\n    }\n  },\n  radius: 8,\n  codeStyle: atomOneDarkReasonable\n}\nexport const colors = {\n  white: 'hsl(48, 60%, 95%)',\n  veryVeryLightGrey: 'hsl(48, 10%, 97%)',\n  veryLightGrey: 'hsl(48, 10%, 90%)',\n  lightGrey: 'hsl(48, 10%, 80%)',\n  grey: 'hsl(0, 0%, 67%)',\n  darkGrey: 'hsl(48, 10%, 40%)',\n  green: 'hsl(98, 70%, 36%)',\n  red: 'hsl(0, 70%, 36%)',\n  blue: 'hsl(213, 70%, 36%)',\n  yellow: 'hsl(48, 80%, 45%)',\n  codeHighlight: 'hsl(213, 45%, 12%)'\n}\n","import styled from 'styled-components'\nimport { style } from '../Constant'\n\nexport const SectionTitle = styled.h2`\n  font-size: ${style.section.title.fontSize}px;\n  margin-top: ${style.section.title.margin.top}px;\n  margin-bottom: ${style.section.title.margin.bottom}px;\n  padding: ${style.section.title.padding.vertical}px\n    ${style.section.title.padding.horizontal}px;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  font-weight: normal;\n`\n","import styled from 'styled-components'\nimport { style } from '../Constant'\n\nexport const TwoPaneWrapper = styled.div<{ direction?: 'column' | 'row' }>`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: ${(props) => (props.direction ? props.direction : 'column')};\n  width: 100%;\n  gap: ${style.section.gap}px;\n`\nexport const Pane = styled.div`\n  display: block;\n  flex-grow: 1;\n  max-width: 100%;\n`\n","import styled from 'styled-components'\nimport { style } from '../Constant'\n\nexport const SectionWrapper = styled.div`\n  margin: auto;\n  max-width: ${style.section.maxWidth}px;\n  padding: ${style.section.padding.horizontal}px;\n  padding-top: ${style.section.padding.top}px;\n  padding-bottom: ${style.section.padding.bottom}px;\n  @media (max-width: 600px) {\n    padding: ${style.section.padding.mobile.vertical}px\n      ${style.section.padding.mobile.horizontal}px;\n  }\n`\n","import React, { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport styled from 'styled-components'\nimport { colors, grid } from '../Constant'\n\nexport const CopyButton = ({ text }: { text: string }) => {\n  const [copied, setCopied] = useState(false)\n  const copyEffect = () => {\n    setCopied(true)\n    setTimeout(() => setCopied(false), 1500)\n  }\n  return (\n    <CopyToClipboard text={text} onCopy={copyEffect}>\n      <div style={{ position: 'relative' }}>\n        <CopyButtonBefore>\n          {/* <Icon icon=\"duplicate\"/> */}\n          Copy\n        </CopyButtonBefore>\n        <TickEffect visible={copied}>Copied!</TickEffect>\n      </div>\n    </CopyToClipboard>\n  )\n}\nconst CopyButtonBefore = styled.div`\n  cursor: pointer;\n  padding: ${grid(2)}px ${grid(2)}px;\n  background: transparent;\n  color: black;\n  text-align: center;\n  align-items: center;\n  display: flex;\n  gap: ${grid(1)}px;\n  &:hover {\n    background: ${colors.veryLightGrey};\n  }\n`\n\nconst TickEffect = styled.div<{ visible: boolean }>`\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  padding: ${grid(1)}px ${grid(2)}px;\n  box-sizing: border-box;\n  background: ${colors.green};\n  color: white;\n  pointer-events: none;\n  opacity: ${(props) => (props.visible ? '1' : '0')};\n  transition: opacity 0.5s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport { CopyButton } from '../../../common/CopyButton'\nimport { colors, grid } from '../../../Constant'\n\nexport const SetupTitle = styled.div`\n  color: ${colors.darkGrey};\n  font-weight: bold;\n  margin: ${grid(1)}px 0px;\n`\nexport const SetupSubtitle = styled.div`\n  color: ${colors.darkGrey};\n  font-weight: bold;\n  margin: ${grid(1)}px 0px;\n`\nexport const SectionSeparator = styled.div`\n    height: ${grid(4)}px;\n    width: 100%;\n`\nexport const BashLine = (props: { children: string }) => {\n  return (\n    <BashLineWrapper>\n      <BashLineDollar>$</BashLineDollar>&nbsp;\n      <BashCodeSection>{props.children}</BashCodeSection>\n      <CopyButton text={props.children} />\n    </BashLineWrapper>\n  )\n}\n\nexport const Troubleshooting = (props: { url: string }) => {\n  return (\n    <TroubleshootingLink>\n      <a href={props.url} target='_blank' rel='noreferrer'>\n        Troubleshooting\n      </a>\n    </TroubleshootingLink>\n  )\n}\nexport const FileContent = (props: { children: string; fileName: string }) => {\n  return (\n    <Fragment>\n      <FileContentTitle>\n        <FileName>{props.fileName}</FileName>\n        <CopyButton text={props.children} />\n      </FileContentTitle>\n      <FileContentWrapper>{props.children}</FileContentWrapper>\n    </Fragment>\n  )\n}\nconst TroubleshootingLink = styled.div`\n  margin: ${grid(1)}px;\n  margin-top: ${grid(2)}px;\n  display: block;\n`\n\nconst BashLineDollar = styled.ins`\n  color: ${colors.darkGrey};\n  text-decoration: none;\n`\nconst BashCodeSection = styled.pre`\n  overflow-x: auto;\n  margin: 0;\n  color: inherit;\n  flex: 1;\n`\nconst BashLineWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`\nconst FileContentTitle = styled.div`\n  border-bottom: 0px;\n  display: flex;\n  margin-top: ${grid(2)}px;\n  justify-content: space-between;\n  align-items: stretch;\n  background-color: ${colors.grey};\n  box-sizing: border-box;\n`\nconst FileContentWrapper = styled.pre`\n  overflow-x: auto;\n  width: 100%;\n  border: 1px solid ${colors.grey};\n  border-top: 0px;\n  margin: 0px;\n  padding: ${grid(1)}px ${grid(2)}px;\n  box-sizing: border-box;\n`\n\nconst FileName = styled.div`\n  padding: ${grid(1)}px ${grid(2)}px;\n  padding-top: ${grid(1.5)}px;\n`\n","import React, { Fragment } from 'react'\nimport { SetupTitle, BashLine } from './Style'\n\nexport const SetupGolangSDK = (props: { repositoryUrl: string, sdkBranch: string }) => {\n  const repositoryUrl = props.repositoryUrl\n    .replaceAll('https://', '')\n    .replaceAll('http://', '')\n  return (\n    <Fragment>\n      <SetupTitle>Go modules (Go 1.12+)</SetupTitle>\n      <BashLine>export GO111MODULE=on</BashLine>\n      <BashLine>\n        {'GOSUMDB=off go get -u ' + repositoryUrl + '/...@' + props.sdkBranch}\n      </BashLine>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport {BashLine, FileContent, SectionSeparator, SetupTitle} from './Style'\n\nexport const SetupJavaSDK = (props: {\n  repositoryUrl: string\n  pathToBinary: string\n  sdkRepoName: string\n  sdkBranch: string\n}) => {\n  const gradle =\n    'plugins {\\n' +\n    '  id \"org.ajoberstar.grgit\" version \"4.1.0\"\\n' +\n    '  id \"com.google.protobuf\" version \"0.8.17\"\\n' +\n    '}\\n' +\n    \"apply plugin: 'java'\\n\" +\n    'repositories {\\n' +\n    '    mavenCentral()\\n' +\n    '}\\n' +\n    'dependencies {\\n' +\n    '    implementation \"com.squareup.okhttp:okhttp:2.7.5\"\\n' +\n    '    implementation \"javax.annotation:javax.annotation-api:1.3.2\"\\n' +\n    '    implementation \"io.grpc:grpc-core:1.41.0\"\\n' +\n    '    implementation \"io.grpc:grpc-stub:1.41.0\"\\n' +\n    '    implementation \"io.grpc:grpc-okhttp:1.41.0\"\\n' +\n    '    implementation \"io.grpc:grpc-api:1.41.0\"\\n' +\n    '    implementation \"io.grpc:grpc-protobuf:1.41.0\"\\n' +\n    '    implementation files(\"sdk/' +\n    props.sdkRepoName  +\n    props.pathToBinary +\n    props.sdkRepoName  +\n    '.jar\")\\n' +\n    '}\\n' +\n    'import org.ajoberstar.grgit.Grgit\\n' +\n    'task downloadSDK {\\n' +\n    '    doLast {\\n' +\n    '        def grgit = Grgit.clone(dir: System.getProperty(\"user.dir\")+\"/sdk/' +\n    props.sdkRepoName  +\n    '\", uri: \\'' +\n    props.repositoryUrl +\n    '\\', refToCheckout: \\'' +\n    props.sdkBranch +\n    '\\')\\n' +\n    '        println grgit.describe()\\n' +\n    '    }\\n' +\n    '}\\n' +\n    'task updateSDK {\\n' +\n    '    doLast {\\n' +\n    '        def grgit = Grgit.open(dir: System.getProperty(\"user.dir\")+\"/sdk/' +\n    props.sdkRepoName  +\n    '\")\\n' +\n    '        grgit.pull()\\n' +\n    '   }\\n' +\n    '}'\n  return (\n    <Fragment>\n      <SetupTitle>Maven</SetupTitle>\n      <BashLine>{`mvn scm:checkout -DconnectionUrl=scm:git:${props.repositoryUrl} -DscmVersionType=${props.sdkBranch} -DcheckoutDirectory=sdk/${props.sdkRepoName}`}</BashLine>\n      <FileContent fileName={\"pom.xml\"} >\n        {`<dependency>\n    <groupId>com.${props.sdkRepoName}</groupId>\n    <artifactId>${props.sdkRepoName}</artifactId>\n    <version>1.0</version>\n    <scope>system</scope>\n    <systemPath>\\${project.basedir}/sdk/${props.sdkRepoName}/sdk/java/${props.sdkRepoName}.jar</systemPath>\n</dependency>\n<dependency>\n    <groupId>io.grpc</groupId>\n    <artifactId>grpc-netty</artifactId>\n    <version>1.41.2</version>\n</dependency>\n<dependency>\n    <groupId>io.grpc</groupId>\n    <artifactId>grpc-protobuf</artifactId>\n    <version>1.41.2</version>\n</dependency>\n<dependency>\n    <groupId>io.grpc</groupId>\n    <artifactId>grpc-stub</artifactId>\n    <version>1.41.2</version>\n</dependency>`}\n      </FileContent>\n      <SectionSeparator/>\n      <SetupTitle>Gradle</SetupTitle>\n      <BashLine>gradle downloadSDK</BashLine>\n      <FileContent fileName='build.gradle'>{gradle}</FileContent>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport {\n  BashLine,\n  FileContent,\n  SetupSubtitle,\n  SetupTitle,\n  Troubleshooting\n} from './Style'\n\nexport const SetupPythonSDK = (props: {\n  repositoryUrl: string\n  projectName: string\n  sdkBranch: string\n}) => {\n  const projectName = props.projectName.toLowerCase().replaceAll(' ', '')\n  return (\n    <Fragment>\n      <SetupTitle>Python 3</SetupTitle>\n      <BashLine>pip3 install grpcio protobuf</BashLine>\n      <BashLine>\n        {'git clone \\\\\\n\\t' +\n          props.repositoryUrl +\n          ' \\\\\\n\\t--branch ' + props.sdkBranch + '  ' +\n          projectName}\n      </BashLine>\n      <SetupSubtitle>Then start with a code:</SetupSubtitle>\n      <FileContent fileName='main.py'>\n        {'from ' + projectName + '.sdk.python3.<filepath> import <servicename>'}\n      </FileContent>\n      <Troubleshooting url='https://wiki.gendocu.com/docs/troubleshooting/python/' />\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { BashLine, SetupTitle } from './Style'\n\nexport const SetupJavascriptSDK = (props: {\n  repositoryUrl: string\n  sdkBranch: string\n}) => {\n  return (\n    <Fragment>\n      <SetupTitle>NPM</SetupTitle>\n      <BashLine>\n        {'npm install git+' + props.repositoryUrl + '#' + props.sdkBranch}\n      </BashLine>\n      <BashLine>npm install @improbable-eng/grpc-web google-protobuf</BashLine>\n      <SetupTitle>Yarn</SetupTitle>\n      <BashLine>\n        {'yarn add ' + props.repositoryUrl + '#' + props.sdkBranch}\n      </BashLine>\n      <BashLine>yarn add @improbable-eng/grpc-web google-protobuf</BashLine>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { BashLine, SetupTitle } from './Style'\n\nexport const SetupTypescriptSDK = (props: {\n  repositoryUrl: string\n  sdkBranch: string\n}) => {\n  return (\n    <Fragment>\n      <SetupTitle>NPM</SetupTitle>\n      <BashLine>\n        {'npm install git+' + props.repositoryUrl + '#' + props.sdkBranch}\n      </BashLine>\n      <BashLine>\n        npm install @improbable-eng/grpc-web google-protobuf\n        @types/google-protobuf\n      </BashLine>\n      <SetupTitle>Yarn</SetupTitle>\n      <BashLine>\n        {'yarn add ' + props.repositoryUrl + '#' + props.sdkBranch}\n      </BashLine>\n      <BashLine>\n        {\n          'yarn add @improbable-eng/grpc-web \\\\\\n\\tgoogle-protobuf @types/google-protobuf'\n        }\n      </BashLine>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { BashLine, FileContent, SetupTitle } from './Style'\n\nexport const SetupCSharpSDK = (props: {\n  repositoryUrl: string\n  projectName: string\n  sdkBranch: string\n}) => {\n  const projectName = props.projectName.replaceAll(' ', '')\n  return (\n    <Fragment>\n      <SetupTitle>NuGet</SetupTitle>\n      In the project root (dir with yourproject.csproj file):\n      <BashLine>\n        {'git clone ' +\n          props.repositoryUrl +\n          ' \\\\\\n\\t --branch ' + props.sdkBranch + ' ../' +\n          projectName}\n      </BashLine>\n      <FileContent fileName='YourProject.csproj'>\n        {CSProjOverride(projectName)}\n      </FileContent>\n    </Fragment>\n  )\n}\n\nconst CSProjOverride = (projectName: string) => {\n  return (\n    '<Project>\\n' +\n    '....\\n' +\n    '  <ItemGroup>\\n' +\n    '    <ProjectReference Include=\"../' +\n    projectName +\n    '/sdk/csharp/*.csproj\"/>\\n' +\n    '  </ItemGroup>\\n' +\n    '....\\n' +\n    '</Project>'\n  )\n}\n","import React, {Fragment} from \"react\";\nimport {BashLine, FileContent, SetupTitle} from \"./Style\";\n\nexport const SetupKotlinSDK = (props:{repositoryUrl:string, branch:string, projectName:string, sdkRepoProjectName: string, pathToBinary:string}) => {\n  const gradle = \"plugins {\\n\" +\n    \"  id \\\"org.ajoberstar.grgit\\\" version \\\"4.1.0\\\"\\n\" +\n    \"  id \\\"com.google.protobuf\\\" version \\\"0.8.17\\\"\\n\" +\n    \"}\\n\" +\n    \"apply plugin: 'java'\\n\" +\n    \"repositories {\\n\" +\n    \"    mavenCentral()\\n\" +\n    \"}\\n\" +\n    \"dependencies {\\n\" +\n    \"    implementation \\\"com.squareup.okhttp:okhttp:2.7.5\\\"\\n\" +\n    \"    implementation \\\"javax.annotation:javax.annotation-api:1.3.2\\\"\\n\" +\n    \"    implementation \\\"io.grpc:grpc-core:1.41.0\\\"\\n\" +\n    \"    implementation \\\"io.grpc:grpc-stub:1.41.0\\\"\\n\" +\n    \"    implementation \\\"io.grpc:grpc-okhttp:1.41.0\\\"\\n\" +\n    \"    implementation \\\"io.grpc:grpc-api:1.41.0\\\"\\n\" +\n    \"    implementation \\\"io.grpc:grpc-protobuf:1.41.0\\\"\\n\" +\n    \"    implementation files(\\\"sdk/\"+props.sdkRepoProjectName+props.pathToBinary+props.sdkRepoProjectName+\".jar\\\")\\n\" +\n    \"}\\n\" +\n    \"import org.ajoberstar.grgit.Grgit\\n\" +\n    \"task downloadSDK {\\n\" +\n    \"    doLast {\\n\" +\n    \"        def grgit = Grgit.clone(dir: System.getProperty(\\\"user.dir\\\")+\\\"/app/sdk/\"+props.sdkRepoProjectName+\"\\\",  refToCheckout: \\\"\" + props.branch + \"\\\", uri: '\"+props.repositoryUrl+\"')\\n\" +\n    \"        println grgit.describe()\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" +\n    \"task updateSDK {\\n\" +\n    \"    doLast {\\n\" +\n    \"        def grgit = Grgit.open(dir: System.getProperty(\\\"user.dir\\\")+\\\"/app/sdk/\" + props.sdkRepoProjectName + \"\\\")\\n\" +\n    \"        grgit.pull()\\n\" +\n    \"   }\\n\" +\n    \"}\\n\" +\n    \"application {\\n\" +\n    \"    // Define the main class for the application.\\n\" +\n    \"    mainClass = 'app.AppKt'\\n\" +\n    \"}\"\n  return <Fragment>\n    <SetupTitle>Gradle</SetupTitle>\n    <FileContent fileName={\"build.gradle\"}>\n      {gradle}\n    </FileContent>\n    <BashLine>gradle downloadSDK</BashLine>\n    Update SDK with command: <BashLine>gradle updateSDK</BashLine>\n  </Fragment>\n}\n","import React, {Fragment} from \"react\";\nimport {FileContent, SetupTitle} from \"./Style\";\n\nexport const SetupRustSDK = ({sdkRepoProjectName, repositoryUrl, branch}:{repositoryUrl:string, branch:string, sdkRepoProjectName: string}) => {\n    return <Fragment>\n        <SetupTitle>Cargo</SetupTitle>\n        <FileContent fileName=\"Cargo.toml\">\n            {   \"[dependencies]\\n\" +\n                \"tonic = \\\"0.8\\\"\\n\" +\n                \"prost-types = \\\"0.11\\\"\\n\" +\n                \"tokio = { version = \\\"1.0\\\", features = [\\\"macros\\\", \\\"rt-multi-thread\\\"] }\\n\" +\n                sdkRepoProjectName + \" = {  git = \\\"\" + repositoryUrl + \"\\\", branch = \\\"\" + branch + \"\\\"}\\n\\n\"\n            }\n        </FileContent>\n    </Fragment>\n}\n","import React, {Fragment} from \"react\";\nimport {BashLine, SetupTitle} from \"./Style\";\n\nexport const SetupGrpcurl = () => (\n  <Fragment>\n    <SetupTitle>Mac OS</SetupTitle>\n    <BashLine>brew install grpcurl</BashLine>\n    <SetupTitle>Linux</SetupTitle>\n    <div>Before installing grpcurl install brew with command: </div>\n    <BashLine>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"</BashLine>\n    <BashLine>brew install grpcurl</BashLine>\n  </Fragment>\n)\n","import React, {Fragment} from \"react\";\nimport {ProgrammingLanguage} from \"GendocuPublicApis/sdk/ts/gendocu/common/types_pb\";\nimport {SetupGolangSDK} from \"./SetupGolangSDK\";\nimport {SetupJavaSDK} from \"./SetupJavaSDK\";\nimport {SetupPythonSDK} from \"./SetupPythonSDK\";\nimport {SetupJavascriptSDK} from \"./SetupJavascriptSDK\";\nimport {SetupTypescriptSDK} from \"./SetupTypescriptSDK\";\nimport {SetupCSharpSDK} from \"./SetupCSharpSDK\";\nimport {SetupKotlinSDK} from \"./SetupKotlinSDK\";\nimport {SetupRustSDK} from \"./SetupRustSDK\";\nimport {ProgrammingLanguageType} from \"../../../../../common/Types\";\nimport {SetupGrpcurl} from \"./SetupGrpcurl\";\n\ninterface SDKSetupProps {\n  lang: ProgrammingLanguageType\n  repositoryUrl: string\n  projectName: string\n  sdkRepoName: string\n  sdkBranch: string\n}\n\nexport const SDKSetup = (props: SDKSetupProps) => {\n  switch (props.lang) {\n    case ProgrammingLanguage.GO:\n      return <SetupGolangSDK repositoryUrl={props.repositoryUrl}\n                             sdkBranch={props.sdkBranch}/>\n    case ProgrammingLanguage.JAVA:\n      return <SetupJavaSDK repositoryUrl={props.repositoryUrl}\n                           sdkRepoName={props.sdkRepoName}\n                           sdkBranch={props.sdkBranch}\n                           pathToBinary={\"/sdk/java/\"}/>\n    case ProgrammingLanguage.PYTHON:\n      return <SetupPythonSDK repositoryUrl={props.repositoryUrl}\n                             sdkBranch={props.sdkBranch}\n                             projectName={props.projectName}/>\n    case ProgrammingLanguage.JAVASCRIPT:\n      return <SetupJavascriptSDK repositoryUrl={props.repositoryUrl}\n                                 sdkBranch={props.sdkBranch}/>\n    case ProgrammingLanguage.TYPESCRIPT:\n      return <SetupTypescriptSDK repositoryUrl={props.repositoryUrl}\n                                 sdkBranch={props.sdkBranch}/>\n    case ProgrammingLanguage.CSHARP:\n      return <SetupCSharpSDK projectName={props.projectName}\n                             sdkBranch={props.sdkBranch}\n                             repositoryUrl={props.repositoryUrl}></SetupCSharpSDK>\n    case ProgrammingLanguage.KOTLIN:\n     return <SetupKotlinSDK sdkRepoProjectName={props.sdkRepoName} repositoryUrl={props.repositoryUrl}\n                            projectName={props.projectName} pathToBinary={\"/sdk/java/\"}\n                            branch={props.sdkBranch}/>\n    case ProgrammingLanguage.GRPCURL:\n      return <SetupGrpcurl />\n    case ProgrammingLanguage.RUST:\n      return <SetupRustSDK sdkRepoProjectName={props.sdkRepoName} repositoryUrl={props.repositoryUrl}\n                           branch={props.sdkBranch}/>\n    default:\n      return <Fragment></Fragment>\n  }\n}\n\n","import * as gendocu_common_types_pb from 'GendocuPublicApis/sdk/ts/gendocu/common/types_pb'\nimport { ProgrammingLanguage } from 'GendocuPublicApis/sdk/ts/gendocu/common/types_pb'\n\nexport type ProgrammingLanguageType =\n  gendocu_common_types_pb.ProgrammingLanguageMap[keyof gendocu_common_types_pb.ProgrammingLanguageMap]\n\n// Those names must be compatible with the syntax highlighter\nexport function programmingLangToString(lang: ProgrammingLanguageType) {\n  switch (lang) {\n    case ProgrammingLanguage.GO:\n      return 'go'\n    case ProgrammingLanguage.TYPESCRIPT:\n      return 'typescript'\n    case ProgrammingLanguage.PYTHON:\n      return 'python'\n    case ProgrammingLanguage.JAVASCRIPT:\n      return 'javascript'\n    case ProgrammingLanguage.REST_CURL:\n      return 'bash'\n    case ProgrammingLanguage.GRPCURL:\n      return 'bash'\n    case ProgrammingLanguage.JAVA:\n      return 'java'\n    case ProgrammingLanguage.RUST:\n      return 'rust'\n    case ProgrammingLanguage.CSHARP:\n      return 'csharp'\n    default:\n      return 'unknown'\n  }\n}\n\nexport function programmingLangToName(lang: ProgrammingLanguageType) {\n  switch (lang) {\n    case ProgrammingLanguage.GO:\n      return 'Golang'\n    case ProgrammingLanguage.TYPESCRIPT:\n      return 'Typescript'\n    case ProgrammingLanguage.KOTLIN:\n      return \"Kotlin\"\n    case ProgrammingLanguage.PYTHON:\n      return 'Python 3'\n    case ProgrammingLanguage.JAVASCRIPT:\n      return 'Javascript'\n    case ProgrammingLanguage.REST_CURL:\n      return 'CURL (REST)'\n    case ProgrammingLanguage.GRPCURL:\n      return 'gRPCURL'\n    case ProgrammingLanguage.JAVA:\n      return 'Java'\n    case ProgrammingLanguage.RUST:\n      return 'Rust'\n    case ProgrammingLanguage.CSHARP:\n      return 'C#'\n    default:\n      return 'unknown'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { colors, grid } from '../../Constant'\nimport {\n  programmingLangToName,\n  ProgrammingLanguageType\n} from '../../../../common/Types'\n\ninterface ProgrammingLanguageSelectorProps {\n  availableProgrammingLangs: ProgrammingLanguageType[]\n  selectedProgrammingLang: ProgrammingLanguageType\n  setProgrammingLang: (lang: ProgrammingLanguageType) => void\n}\n\nexport const ProgrammingLanguageSelector = ({\n  availableProgrammingLangs,\n  selectedProgrammingLang,\n  setProgrammingLang\n}: ProgrammingLanguageSelectorProps) => {\n  const langs = [...availableProgrammingLangs]\n  return (\n    <ProgrammingLanguageContainer>\n      {langs.map((el, key) => (\n        <ProgrammingLanguageSelectorDiv\n          key={key}\n          onClick={() => setProgrammingLang(el)}\n          selected={selectedProgrammingLang === el}\n        >\n          {/* <ProgrammingLanguageIcon */}\n          {/*  alt={programmingLangToName(el)} */}\n          {/*  src={programmingLanguageToIcon(el)} */}\n          {/* /> */}\n          <p>{programmingLangToName(el)}</p>\n        </ProgrammingLanguageSelectorDiv>\n      ))}\n    </ProgrammingLanguageContainer>\n  )\n}\nconst ProgrammingLanguageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: auto;\n  justify-content: center;\n`\n// const ProgrammingLanguageIcon = styled.img`\n//   width: 48px;\n//   height: 30px;\n//   object-fit: contain;\n// `\nconst ProgrammingLanguageSelectorDiv = styled.div<{ selected: boolean }>`\n  text-align: center;\n  opacity: ${(props) => (props.selected ? 1 : 0.5)};\n  cursor: pointer;\n  padding: ${grid(1)}px ${grid(1)}px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom: 2px solid\n    ${(props) => (props.selected ? colors.blue : colors.white)};\n`\n","import React from 'react'\nimport { SectionTitle } from '../../common/SectionTitle'\nimport { TwoPaneWrapper, Pane } from '../../common/TwoPaneWrapper'\nimport { SectionWrapper } from '../../common/SectionWrapper'\nimport styled from 'styled-components'\nimport { SDKSetup } from './SDKSetup/SDKSetup'\nimport { colors, grid, style } from '../../Constant'\nimport { ProgrammingLanguageSelector } from './ProgrammingLanguageSelector'\nimport { ProgrammingLanguageType } from '../../../../common/Types'\n\ninterface ClientLibrariesProps {\n  protoUrl: string\n  repositoryUrl: string\n  projectName: string\n  sdkRepoName: string\n  sdkBranch: string\n  availableSetupLangs: ProgrammingLanguageType[]\n  selectedProgrammingLang: ProgrammingLanguageType\n  setProgrammingLang: (l: ProgrammingLanguageType) => void\n}\n\nexport const ClientLibraries = (props: ClientLibrariesProps) => {\n  return (\n    <SectionWrapper>\n      <TwoPaneWrapper direction='row'>\n        <Pane>\n          <SectionTitle>Client Libraries</SectionTitle>\n          The API is implemented using gRPC framework. You can generate the SDK\n          on your own -{' '}\n          <a href='https://grpc.io/docs/languages/'>\n            check out the official gRPC documentation.\n          </a>\n          <br />\n          The source protofiles are available{' '}\n          <a href={props.protoUrl} rel='noopener noreferrer' target='_blank'>\n            here.\n          </a>\n        </Pane>\n        <Pane>\n          <ClientLibrariesSelector {...props} />\n        </Pane>\n      </TwoPaneWrapper>\n    </SectionWrapper>\n  )\n}\n\nconst ClientLibrariesSelector = (\n  props: Omit<ClientLibrariesProps, 'protoUrl'>\n) => {\n  return (\n    <ClientLibrariesWrapper>\n      <ClientLibrariesSelectorTitleWrapper>\n        <ClientLibrariesSelectorTitle>\n          Client Libraries\n        </ClientLibrariesSelectorTitle>\n        <ProgrammingLanguageSelector\n          availableProgrammingLangs={props.availableSetupLangs}\n          selectedProgrammingLang={props.selectedProgrammingLang}\n          setProgrammingLang={props.setProgrammingLang}\n        />\n      </ClientLibrariesSelectorTitleWrapper>\n      <SDKSetupWrapper>\n        <SDKSetup\n          repositoryUrl={props.repositoryUrl}\n          lang={props.selectedProgrammingLang}\n          projectName={props.projectName}\n          sdkRepoName={props.sdkRepoName}\n          sdkBranch={props.sdkBranch}\n        />\n      </SDKSetupWrapper>\n    </ClientLibrariesWrapper>\n  )\n}\n\nconst ClientLibrariesWrapper = styled.div`\n  flex: 1;\n  min-width: 250px;\n  border-radius: 8px;\n  border: 1px solid ${colors.lightGrey};\n  padding: 0px 0px;\n  max-width: 600px;\n  width: 100%;\n`\n\nconst ClientLibrariesSelectorTitle = styled.div`\n  text-transform: uppercase;\n  margin-bottom: ${grid(1)}px;\n`\nconst ClientLibrariesSelectorTitleWrapper = styled.div`\n  padding: 0px ${grid(2)}px;\n  padding-top: ${grid(1)}px;\n`\n\nconst SDKSetupWrapper = styled.div`\n  width: 100%;\n  border-top: 1px solid ${colors.veryLightGrey};\n  padding: ${grid(1)}px ${grid(1)}px;\n  box-sizing: border-box;\n  background-color: ${colors.veryVeryLightGrey};\n  border-bottom-left-radius: ${style.radius}px;\n  border-bottom-right-radius: ${style.radius}px;\n  line-height: 1.2;\n`\n","import { ServiceDescription } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb'\nimport * as jspb from 'google-protobuf'\n\nexport function ServiceDescriptionsInOrder(\n  services: jspb.Map<string, ServiceDescription>\n) {\n  const res: ServiceDescription[] = []\n  const serviceIds: string[] = services\n    .getEntryList()\n    .map((el) => el[0])\n    .sort((a, b) =>\n      (services.get(a)?.getShortName() || '') <\n      (services.get(b)?.getShortName() || '')\n        ? -1\n        : 1\n    )\n  serviceIds.forEach((el) => {\n    const y = services.get(el)\n    if (y) {\n      res.push(y)\n    }\n  })\n  return res\n}\n\nexport const toHumanReadableName = (s: string) => {\n  const x = s.replace(/([a-z])([A-Z])/g, '$1 $2')\n  return x[0].toUpperCase() + x.substr(1)\n}\n\nexport const cutOutCommonPackage = (typeName: string, pkg: string) => {\n  const y = typeName.split('.')\n  y.pop()\n  const typenamePkg = y.join('.')\n  if (pkg.startsWith(typenamePkg)) {\n    return typeName.substr(typenamePkg.length + 1)\n  } else {\n    return typeName.substr(1)\n  }\n}\n","import React, { Fragment } from 'react'\nimport { SectionTitle } from '../../common/SectionTitle'\nimport { TwoPaneWrapper, Pane } from '../../common/TwoPaneWrapper'\nimport { ServiceDescription } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb'\nimport { toHumanReadableName } from '../../../../common/ServiceOrder'\nimport {colors, grid} from \"../../Constant\";\nimport styled from \"styled-components\";\n\ninterface ServiceProps {\n  service: ServiceDescription\n}\n\nexport const Service = ({ service }: ServiceProps) => (\n  <Fragment>\n    <TwoPaneWrapper>\n      <Pane>\n        <SectionTitle>{toHumanReadableName(service.getShortName())}</SectionTitle>\n        <ServiceId>\n          {getServiceId(service)}\n        </ServiceId>\n        <p>{service.getDescription()}</p>\n      </Pane>\n      <Pane></Pane>\n    </TwoPaneWrapper>\n  </Fragment>\n)\n\nconst getServiceId = (service: ServiceDescription) => {\n  if (service.getServiceId().startsWith('.')) {\n    return service.getServiceId().substr(1)\n  } else {\n    return service.getServiceId()\n  }\n}\n\nconst ServiceId = styled.div`\n  color: ${colors.darkGrey};\n  margin-bottom: ${grid(2)}px;\n  margin-top: ${grid(1)}px;\n`\n","import styled from 'styled-components'\nimport { style } from '../Constant'\n\nexport const SectionSubtitle = styled.h3`\n  font-size: ${style.section.title.fontSize}px;\n  margin-top: ${style.section.title.margin.top}px;\n  margin-bottom: ${style.section.title.margin.bottom}px;\n  padding: ${style.section.title.padding.vertical}px\n    ${style.section.title.padding.horizontal}px;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  font-weight: normal;\n`\n","export const getTypeName = (typpe: string) => {\n  switch (typpe) {\n    case 'TYPE_STRING':\n      return 'string'\n    case 'TYPE_ENUM':\n      return 'enum' // TODO\n    case 'TYPE_SFIXED32':\n    case 'TYPE_FIXED32':\n    case 'TYPE_SINT32':\n    case 'TYPE_INT32':\n      return 'int (32 bit)'\n    case 'TYPE_SFIXED64':\n    case 'TYPE_FIXED64':\n    case 'TYPE_SINT64':\n    case 'TYPE_INT64':\n      return 'int (64 bit)'\n    case 'TYPE_DOUBLE':\n      return 'float (64 bit)'\n    case 'TYPE_FLOAT':\n      return 'float (32 bit)'\n    case 'TYPE_UINT32':\n      return 'unsigned int (32 bit)'\n    case 'TYPE_UINT64':\n      return 'unsigned int (64 bit)'\n    case 'TYPE_BOOL':\n      return 'boolean'\n    case 'TYPE_BYTES':\n      return 'array of bytes'\n    case '[oneof]':\n      return '[oneof]'\n    default:\n      console.error('unknown scalar type', typpe)\n      return typpe.substr(1)\n  }\n}\n","import React, { Fragment, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {colors, grid, style} from '../../Constant'\nimport {\n  TypeDescription,\n  FieldDescription\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb'\nimport * as jspb from 'google-protobuf'\nimport { getTypeName } from '../../../../common/PBUtils'\n\ninterface TypeTable {\n  type: TypeDescription | undefined\n  allTypes: jspb.Map<string, TypeDescription>\n}\nexport const TypeTable = ({ type, allTypes }: TypeTable) => {\n  if (!type) {\n    return <Fragment />\n  }\n  return (\n    <TableWrapper>\n      <Table>\n        <thead>\n          <TrHead>\n            <ThStyled>Field</ThStyled>\n            <ThStyled>Type</ThStyled>\n            <ThStyled>Description</ThStyled>\n          </TrHead>\n        </thead>\n        <tbody>\n          <TypeFields type={type} allTypes={allTypes} />\n        </tbody>\n      </Table>\n    </TableWrapper>\n  )\n}\n\ninterface TypeFieldsProps {\n  type: TypeDescription | undefined\n  allTypes: jspb.Map<string, TypeDescription>\n}\n\nconst TypeFields = (props: TypeFieldsProps) => {\n  if (props.type === undefined) {\n    return <Fragment />\n  }\n  const maxDepth = calculateMaxDepth(1) - 1\n  if (!props.type || props.type.getFieldsList().length === 0) {\n    return (\n      <TrStyled>\n        <TdStyled indent={0} colSpan={3}>\n          There are no fields!\n        </TdStyled>\n      </TrStyled>\n    )\n  }\n  const fl = props.type.getFieldsList().filter((el) => el.getOneOf() === '')\n  const oneofMap = new Map<string, FieldDescription[]>()\n  if (props.type !== undefined) {\n    props.type\n      .getFieldsList()\n      .filter((el) => el.getOneOf() !== '')\n      .forEach((el) => {\n        const l = el.getOneOf()\n        const arr = oneofMap.get(l) || []\n        arr.push(el)\n        oneofMap.set(l, arr)\n      })\n  }\n  return (\n    <Fragment>\n      {fl.map((el, key) => (\n        <Fragment key={key}>\n          <FieldFields\n            {...props}\n            field={el}\n            depth={1}\n            maxDepth={maxDepth}\n            lastField={key === fl.length + oneofMap.size - 1}\n          />\n        </Fragment>\n      ))}\n      <OneofFields\n        {...props}\n        m={Array.from(oneofMap)}\n        depth={1}\n        maxDepth={maxDepth}\n        lastField={oneofMap.size > 0}\n      />\n    </Fragment>\n  )\n}\nconst FieldFields = (props: {\n  field: FieldDescription | undefined\n  allTypes: jspb.Map<string, TypeDescription>\n  depth: number\n  maxDepth: number\n  lastField: boolean\n}) => {\n  const [visible, setVisible] = useState(props.maxDepth > props.depth)\n  useEffect(() => {\n    setVisible(props.maxDepth > props.depth)\n  }, [props.maxDepth, props.depth])\n  if (!props.field) {\n    console.error('field undefined ', props)\n    return <Fragment />\n  }\n  const tid = props.field.getTypeId()\n  const typpe = props.allTypes.get(tid)\n  if (props.depth >= 25) {\n    console.error('depth exceeded ', props)\n    return <Fragment />\n  }\n  const fl =\n    typpe === undefined\n      ? []\n      : typpe.getFieldsList().filter((el) => el.getOneOf() === '')\n  const oneofMap = new Map<string, FieldDescription[]>()\n  if (typpe !== undefined) {\n    typpe\n      .getFieldsList()\n      .filter((el) => el.getOneOf() !== '')\n      .forEach((el) => {\n        const l = el.getOneOf()\n        const arr = oneofMap.get(l) || []\n        arr.push(el)\n        oneofMap.set(l, arr)\n      })\n  } else if (!!tid && !tid.startsWith('TYPE_')) {\n    console.error('unable to find type ', tid)\n  }\n  const m = Array.from(oneofMap)\n  return (\n    <Fragment>\n      <FieldTableRow\n        depth={props.depth}\n        setVisible={setVisible}\n        visible={visible}\n        unfoldable={fl.length === 0}\n        field={props.field}\n        typpe={typpe}\n      />\n      {visible &&\n        fl.map((el, key) => (\n          <Fragment key={key}>\n            <FieldFields\n              {...props}\n              field={el}\n              depth={props.depth + 1}\n              lastField={key + 1 === fl.length}\n            />\n          </Fragment>\n        ))}\n      {visible && (\n        <OneofFields\n          {...props}\n          m={m}\n          depth={props.depth + 1}\n          lastField={m.length > 0}\n        />\n      )}\n    </Fragment>\n  )\n}\nconst OneofFields = (props: {\n  m: [string, FieldDescription[]][]\n  allTypes: jspb.Map<string, TypeDescription>\n  depth: number\n  maxDepth: number\n  lastField: boolean\n}) => {\n  const [visible, setVisible] = useState(props.maxDepth > props.depth)\n  return (\n    <Fragment>\n      {props.m.map((el, key) => {\n        const f = new FieldDescription()\n        f.setName(el[0])\n        f.setTypeId('[oneof]')\n        return (\n          <Fragment key={key}>\n            <FieldTableRow\n              depth={props.depth}\n              field={f}\n              typpe={undefined}\n              setVisible={setVisible}\n              visible={visible}\n              unfoldable={false}\n            />\n            {visible &&\n              el[1].map((el2, key2) => (\n                <Fragment key={key2}>\n                  <FieldFields\n                    {...props}\n                    field={el2}\n                    depth={props.depth}\n                    lastField={key2 + 1 === el[1].length}\n                  />\n                </Fragment>\n              ))}\n          </Fragment>\n        )\n      })}\n    </Fragment>\n  )\n}\nconst FieldTableRow = (props: {\n  depth: number\n  field: FieldDescription\n  typpe: TypeDescription | undefined\n  setVisible: (x: boolean) => void\n  visible: boolean\n  unfoldable: boolean\n}) => {\n  return (\n    <TrStyled>\n      <TdStyled\n        indent={props.depth - 1}\n        noItalic\n        style={{ whiteSpace: 'nowrap' }}\n      >\n        <ins\n          style={{\n            fontFamily: 'monospace',\n            textDecoration: 'none',\n            cursor: 'pointer'\n          }}\n          onClick={() => props.setVisible(!props.visible)}\n        >\n          {props.unfoldable ? (\n            <Fragment>&nbsp;&nbsp;</Fragment>\n          ) : props.visible ? (\n            <Fragment>▾&nbsp;</Fragment>\n          ) : (\n            <Fragment>▸&nbsp;</Fragment>\n          )}\n        </ins>\n        {!!props.field.getOneOf() && (\n          <FieldMarker markerType='oneof' direction='left'>\n            oneof\n          </FieldMarker>\n        )}\n        {/* {!!props.field.getRequired() && <FieldMarker bgColor=\"red\" color=\"white\">required</FieldMarker>} */}\n        {props.field.getName()}\n      </TdStyled>\n      <TdStyled\n        indent={1}\n        style={{ whiteSpace: 'nowrap', minWidth: '100px' }}\n        noItalic\n      >\n        {!!props.typpe && props.typpe.getIsMapType() ? (\n          'Map'\n        ) : (\n          <Fragment>\n            <ins\n              style={{\n                display: 'inline-block',\n                textDecoration: 'none'\n              }}\n            >\n              {props.typpe === undefined\n                ? getTypeName(props.field.getTypeId())\n                : props.typpe.getShortName()}\n            </ins>\n            {props.field.getRepeated() && (\n              <FieldMarker markerType='repeated' direction='right'>\n                repeated\n              </FieldMarker>\n            )}\n          </Fragment>\n        )}\n      </TdStyled>\n      <TdStyled\n        indent={1}\n        noItalic\n        dangerouslySetInnerHTML={{ __html: props.field.getDescription() }}\n      />\n    </TrStyled>\n  )\n}\n\nconst calculateMaxDepth = (fieldsLength: number): number => {\n  if (fieldsLength === 0) {\n    return 1\n  }\n  if (7 - fieldsLength < 0) {\n    return 0\n  }\n  return 2\n}\n\nconst TableWrapper = styled.div`\n  max-width: 100vw;\n  overflow-x: auto;\n  border: 1px solid ${colors.lightGrey};\n  border-radius: 8px;\n`\n\nconst TrHead = styled.tr`\n  border-top-left-radius: ${style.radius}px;\n  border-top-right-radius: ${style.radius}px;\n`\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n  flex: 1;\n`\n\nconst ThStyled = styled.th`\n  overflow-wrap: break-word;\n  hyphens: auto;\n  font-weight: normal;\n  padding: ${style.typeTable.th.padding.vertical}px\n    ${style.typeTable.th.padding.horizontal}px;\n  border-bottom: 1px solid ${colors.lightGrey};\n  &:nth-child(odd) {\n    background: ${colors.veryVeryLightGrey};\n  }\n`\n\nconst TdStyled = styled.td<{ indent: number; noItalic?: boolean }>`\n  overflow-wrap: break-word;\n  hyphens: auto;\n  ${(props) => (props.noItalic ? '' : 'font-style: oblique;')}\n  padding: ${style.typeTable.td.padding.vertical}px ${style.typeTable.td.padding.horizontal}px;\n  padding-left: ${(props) => props.indent * style.typeTable.td.indent + style.typeTable.td.padding.vertical}px;\n  min-width: 120px;\n  vertical-align: top;\n  &:nth-child(odd) {\n    background: ${colors.veryVeryLightGrey};\n  }\n`\n\nconst TrStyled = styled.tr`\n  border-bottom: 1px solid ${colors.lightGrey};\n  &:last-child {\n    border-bottom: 0px;\n  }\n`\n\nconst FieldMarker = styled.div<{\n  direction: 'left' | 'right'\n  markerType: 'oneof' | 'repeated'\n}>`\n  display: inline-block;\n  border-radius: 4px;\n  padding: ${grid(0.5)}px ${grid(1)}px;\n  margin-left: ${(props) => (props.direction === 'right' ? '8px' : '0px')};\n  margin-right: ${(props) => (props.direction === 'left' ? '8px' : '0px')};\n  background-color: ${(props) =>\n    props.markerType === 'oneof' ? colors.red : colors.yellow};\n  color: ${colors.white};\n  white-space: nowrap;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 100px;\n`\n\nconst Wrapper2 = styled.div`\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n`\n// const Img = styled.img`\n//   width: 64px;\n//   -webkit-animation: spin 1s ease infinite;\n//   -moz-animation: spin 1s ease infinite;\n//   animation: spin 1s ease infinite;\n// `\n\nexport const Loading = () => (\n  <Wrapper>\n    <Wrapper2>\n      {/*<Img src={smartAsset.load(\"../assets/images/gendocu-favico-256.png\")} alt='loading' />*/}\n      Loading\n    </Wrapper2>\n  </Wrapper>\n)\n","import React, { Fragment } from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport styled from 'styled-components'\nimport { colors, style } from '../../Constant'\nimport {\n  programmingLangToName,\n  programmingLangToString,\n  ProgrammingLanguageType\n} from '../../../../common/Types'\nimport { CopyButton } from '../../common/CopyButton'\nimport { Loading } from '../../../../common/Loading'\nimport { CodeProvider } from '../../../../common/CodeProvider'\n\ninterface RequestCodeProps {\n  sdkAvailableLanguages: ProgrammingLanguageType[]\n  codeProvider: CodeProvider\n  snippetCode: string\n  fullCodeAvailable: boolean\n  selectedProgrammingLanguage: ProgrammingLanguageType\n  selectProgrammingLanguage: (p: ProgrammingLanguageType) => void\n}\n\nexport const RequestCode = ({\n  sdkAvailableLanguages,\n  codeProvider,\n  snippetCode,\n  selectedProgrammingLanguage,\n  selectProgrammingLanguage\n}: RequestCodeProps) => {\n  return (\n    <Fragment>\n      <CodeSnippetTitle>\n        <CustomSelect\n          onSelect={(x) => {\n            selectProgrammingLanguage(+x as ProgrammingLanguageType)\n          }}\n          value={'' + selectedProgrammingLanguage}\n        >\n          {codeProvider\n            .getAvailableProgrammingLanguages(sdkAvailableLanguages)\n            .map((el, key) => (\n              <CustomOption key={key} value={el}>\n                {programmingLangToName(el)}\n              </CustomOption>\n            ))}\n        </CustomSelect>\n        <div\n          style={{\n            borderLeft: '2px solid ' + colors.lightGrey,\n            height: '70%',\n            opacity: '0.3',\n            margin: '0px 8px'\n          }}\n        />\n        <CopyButton text={snippetCode} />\n      </CodeSnippetTitle>\n      <StyledHighlighter\n        code={snippetCode}\n        programmingLanguage={selectedProgrammingLanguage}\n        highlightMap={new Map<number, number>()}\n      />\n    </Fragment>\n  )\n}\n\nconst StyledHighlighter = (props: {\n  code: string\n  programmingLanguage: ProgrammingLanguageType\n  highlightMap: Map<number, number>\n}) =>\n  props.code === '' ? (\n    <div\n      style={{\n        height: '200px',\n        border: '1px solid ' + colors.lightGrey,\n        borderTop: '0px'\n      }}\n    >\n      <Loading />\n    </div>\n  ) : (\n    <SyntaxHighlighter\n      style={style.codeStyle}\n      customStyle={{\n        padding: '16px 8px',\n        margin: '0px',\n        lineHeight: '1.2',\n        boxSizing: 'border-box'\n      }}\n      lineProps={(line: number | any) => {\n        return {\n          style: {\n            backgroundColor: props.highlightMap.has(line)\n              ? colors.codeHighlight\n              : 'transparent',\n            boxSizing: 'border-box',\n            display: 'block',\n            wordBreak: 'break-all',\n            whiteSpace: 'pre-wrap'\n          }\n        }\n      }}\n      showLineNumbers\n      language={programmingLangToString(props.programmingLanguage)}\n    >\n      {props.code}\n    </SyntaxHighlighter>\n  )\n\nexport const CustomSelect = (props: {\n  children: React.ReactNode\n  onSelect: (e: string) => void\n  value: string\n}) => {\n  return (\n    <CustomSelectWrapper>\n      <CustomSelectStyle\n        onChange={(e) => props.onSelect(e.target.value)}\n        value={props.value}\n      >\n        {props.children}\n      </CustomSelectStyle>\n    </CustomSelectWrapper>\n  )\n}\n\nconst CodeSnippetTitle = styled.div`\n  border: 1px solid ${colors.lightGrey};\n  display: flex;\n  color: black;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  border-top-left-radius: ${style.radius}px;\n  border-top-right-radius: ${style.radius}px;\n  padding: 0px;\n`\n\nconst CustomSelectWrapper = styled.label`\n  cursor: pointer;\n  text-align: right;\n`\n\nconst CustomSelectStyle = styled.select`\n  text-indent: 1px;\n  text-overflow: '';\n  border: 0;\n  background-color: transparent;\n  color: inherit;\n  padding: 16px 4px;\n  text-align: right;\n`\n\nexport const CustomOption = styled.option`\n  text-align: right;\n  padding: 4px;\n  background-color: white;\n`\n","import React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { style } from '../../Constant'\nimport atomOneDarkReasonable from 'react-syntax-highlighter/dist/cjs/styles/hljs/atom-one-dark'\nimport { Loading } from '../../../../common/Loading'\n\ninterface MethodOutputProps {\n  output: string\n  language: string\n}\nexport const MethodOutput = ({ output, language }: MethodOutputProps) => {\n  return <StyledHighlighter code={output} programmingLanguage={language} />\n}\n\nconst StyledHighlighter = (props: {\n  code: string\n  programmingLanguage: string\n}) =>\n  props.code === '' ? (\n    <Loading />\n  ) : (\n    <SyntaxHighlighter\n      style={atomOneDarkReasonable}\n      customStyle={{\n        padding: '16px 8px',\n        margin: '0px',\n        lineHeight: '1.2',\n        boxSizing: 'border-box',\n        borderBottomLeftRadius: style.radius,\n        borderBottomRightRadius: style.radius\n      }}\n      // lineNumberStyle={(line: number) => {\n      // return !!props.highlightMap.get(line) ? lineNumberStyle() : {}\n      // }}\n      lineProps={() => {\n        return {\n          style: {\n            boxSizing: 'border-box',\n            display: 'block',\n            wordBreak: 'break-all',\n            whiteSpace: 'pre-wrap'\n          }\n        }\n      }}\n      showLineNumbers\n      language={props.programmingLanguage}\n    >\n      {props.code}\n    </SyntaxHighlighter>\n  )\n","import React, { Fragment } from 'react'\nimport { RequestCode } from './RequestCode'\nimport { MethodOutput } from './MethodOutput'\nimport styled from 'styled-components'\nimport { colors, grid } from '../../Constant'\nimport { ProgrammingLanguageType } from '../../../../common/Types'\nimport { CodeProvider } from '../../../../common/CodeProvider'\n\ninterface MethodSnippetsProps {\n  availableProgrammingLangs: ProgrammingLanguageType[]\n  codeProvider: CodeProvider\n  snippets: { code: string; output: string } | undefined\n  selectedProgrammingLanguage: ProgrammingLanguageType\n  selectProgrammingLanguage: (p: ProgrammingLanguageType) => void\n}\n\nexport const MethodSnippets = ({\n  snippets,\n  availableProgrammingLangs,\n  codeProvider,\n  selectedProgrammingLanguage,\n  selectProgrammingLanguage\n}: MethodSnippetsProps) => {\n  return (\n    <Fragment>\n      <RequestCode\n        sdkAvailableLanguages={availableProgrammingLangs}\n        fullCodeAvailable={false}\n        snippetCode={snippets?.code || ''}\n        codeProvider={codeProvider}\n        selectedProgrammingLanguage={selectedProgrammingLanguage}\n        selectProgrammingLanguage={selectProgrammingLanguage}\n      />\n      {snippets?.output && (\n        <Fragment>\n          <OutputSeparator>Example output (decoded)</OutputSeparator>\n          <MethodOutput output={snippets?.output || ''} language='json' />\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nconst OutputSeparator = styled.div`\n  padding: ${grid(2)}px ${grid(1)}px;\n  border-left: 1px solid ${colors.lightGrey};\n  border-right: 1px solid ${colors.lightGrey};\n`\n","import React from 'react'\nimport { TwoPaneWrapper, Pane } from '../../common/TwoPaneWrapper'\nimport { SectionSubtitle } from '../../common/SectionSubtitle'\nimport {\n  MethodDescription,\n  TypeDescription\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb'\nimport {\n  cutOutCommonPackage,\n  toHumanReadableName\n} from '../../../../common/ServiceOrder'\nimport { colors, grid } from '../../Constant'\nimport styled from 'styled-components'\nimport { TypeTable } from './TypeTable'\nimport * as jspb from 'google-protobuf'\nimport { MethodSnippets } from './MethodSnippets'\nimport { CodeProvider } from '../../../../common/CodeProvider'\nimport { ProgrammingLanguageType } from '../../../../common/Types'\nimport {ProgrammingLanguage} from \"GendocuPublicApis/sdk/ts/gendocu/common/types_pb\";\n\ninterface MethodProps {\n  method: MethodDescription\n  types: jspb.Map<string, TypeDescription>\n  availableProgrammingLangs: ProgrammingLanguageType[]\n  snippets: { code: string; output: string } | undefined\n  codeProvider: CodeProvider\n  selectedProgrammingLanguage: ProgrammingLanguageType\n  selectProgrammingLanguage: (p: ProgrammingLanguageType) => void\n}\n\nexport const Method = ({\n  snippets,\n  method,\n  types,\n  codeProvider,\n  availableProgrammingLangs,\n  selectedProgrammingLanguage,\n  selectProgrammingLanguage\n}: MethodProps) => {\n  return (\n    <MethodWrapper>\n      <SectionSubtitle>\n        <span style={{ color: colors.darkGrey }}>rpc</span>{' '}\n        {toHumanReadableName(method.getName())}\n      </SectionSubtitle>\n      <TwoPaneWrapper>\n        <Pane>\n          <div>{method.getDescription()}</div>\n          <MethodTypeName>\n            <TypePrefix>\n              requests\n              {method.getInStreaming() && 'stream of'}\n            </TypePrefix>\n            &nbsp;\n            {cutOutCommonPackage(method.getInTypeId(), method.getMethodId())}\n          </MethodTypeName>\n          <TypeDescriptionDiv>\n            {types.get(method.getInTypeId())?.getDescription()}\n          </TypeDescriptionDiv>\n          <TypeTable type={types.get(method.getInTypeId())} allTypes={types} />\n          <MethodTypeName>\n            <TypePrefix>\n              returns\n              {method.getOutStreaming() && 'stream of'}\n            </TypePrefix>\n            &nbsp;\n            {cutOutCommonPackage(method.getOutTypeId(), method.getMethodId())}\n          </MethodTypeName>\n          <TypeDescriptionDiv>\n            {types.get(method.getOutTypeId())?.getDescription()}\n          </TypeDescriptionDiv>\n          <TypeTable type={types.get(method.getOutTypeId())} allTypes={types} />\n        </Pane>\n        <Pane>\n          {selectedProgrammingLanguage !== ProgrammingLanguage.PYTHON && (\n            <MethodSnippets\n              codeProvider={codeProvider}\n              availableProgrammingLangs={availableProgrammingLangs}\n              snippets={snippets}\n              selectedProgrammingLanguage={selectedProgrammingLanguage}\n              selectProgrammingLanguage={selectProgrammingLanguage}\n            />\n          )}\n        </Pane>\n      </TwoPaneWrapper>\n    </MethodWrapper>\n  )\n}\n\nconst TypePrefix = styled.span`\n  color: ${colors.darkGrey};\n`\nconst TypeDescriptionDiv = styled.div`\n  margin-top: ${grid(1)}px;\n  margin-bottom: ${grid(2)}px;\n`\nconst MethodTypeName = styled.h4`\n  margin-top: ${grid(4)}px;\n  margin-bottom: ${grid(1)}px;\n  font-size: 20px;\n  font-weight: normal;\n`\nconst MethodWrapper = styled.div`\n  margin-top: ${grid(8)}px;\n`\n","import React, { useEffect, useState, Fragment } from 'react'\n\nimport { SectionWrapper } from '../../common/SectionWrapper'\nimport { Service } from './Service'\nimport { Method } from './Method'\nimport {\n  APIDescriptionGeneratorModel,\n  MethodDescription,\n  ServiceDescription\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb'\nimport { ServiceDescriptionsInOrder } from '../../../../common/ServiceOrder'\nimport { Loading } from '../../../../common/Loading'\nimport { CodeProvider } from '../../../../common/CodeProvider'\nimport { ProgrammingLanguageType } from '../../../../common/Types'\nimport { CodeSnippet } from '../../../../common/CodeSnippet'\n\ninterface APIReferenceProps {\n  data: APIDescriptionGeneratorModel | undefined\n  sdkProgrammingLangs: ProgrammingLanguageType[]\n  codeProvider: CodeProvider\n  selectedProgrammingLanguage: ProgrammingLanguageType\n  selectProgrammingLanguage: (p: ProgrammingLanguageType) => void\n  codeSnippets: Map<string, CodeSnippet>\n}\n\nexport const APIReference = ({\n  data,\n  codeProvider,\n  sdkProgrammingLangs,\n  selectedProgrammingLanguage,\n  selectProgrammingLanguage,\n  codeSnippets\n}: APIReferenceProps) => {\n  const [services, setService] = useState<ServiceDescription[]>([])\n  const [sid2method, setSid2method] = useState(\n    new Map<string, MethodDescription[]>()\n  )\n  useEffect(() => {\n    if (!data) {\n      return\n    }\n    setService(ServiceDescriptionsInOrder(data.getServicesMap()))\n    const mm = new Map<string, MethodDescription[]>()\n    data.getMethodsMap().forEach((value: MethodDescription) => {\n      const x = mm.get(value.getServiceId())\n      if (x === undefined) {\n        mm.set(value.getServiceId(), [value])\n      } else {\n        x.push(value)\n      }\n    })\n    setSid2method(mm)\n  }, [data])\n  if (!data) {\n    return <Loading />\n  }\n  return (\n    <SectionWrapper>\n      {services.map((value: ServiceDescription, key: number) => (\n        <div key={key}>\n          <Service service={value} />\n          {sid2method.get(value.getServiceId())?.map((method, key) => {\n            const codeSnippet = codeSnippets.get(method.getMethodId())\n            return (\n              <Fragment key={key}>\n                <Method\n                  method={method}\n                  availableProgrammingLangs={sdkProgrammingLangs}\n                  types={data.getTypesMap()}\n                  codeProvider={codeProvider}\n                  snippets={codeSnippet}\n                  selectedProgrammingLanguage={selectedProgrammingLanguage}\n                  selectProgrammingLanguage={selectProgrammingLanguage}\n                />\n              </Fragment>\n            )\n          })}\n        </div>\n      ))}\n    </SectionWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ClientLibraries } from './sections/ClientLibraries/ClientLibraries'\nimport { APIReference } from './sections/APIReference/APIReference'\nimport { Build } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb'\nimport { ProgrammingLanguageType } from '../../common/Types'\nimport { Loading } from '../../common/Loading'\nimport { CodeProvider } from '../../common/CodeProvider'\nimport { colors, grid } from './Constant'\nimport {CodeSnippet} from \"../../common/CodeSnippet\";\n\ninterface DefaultStyleProps {\n  build: Build\n  availableProgrammingLangs: ProgrammingLanguageType[] | null\n  selectedProgrammingLang: ProgrammingLanguageType\n  setProgrammingLang: (l: ProgrammingLanguageType) => void\n  codeProvider: CodeProvider\n  codeSnippets: Map<string, CodeSnippet>\n}\n\nexport const DefaultStyle = ({\n  build,\n  availableProgrammingLangs,\n  selectedProgrammingLang,\n  setProgrammingLang,\n  codeProvider,\n  codeSnippets\n}: DefaultStyleProps) => {\n  if (availableProgrammingLangs === null) {\n    return <Loading />\n  }\n  return (\n    <DefaultStyleWrapper>\n      {!!availableProgrammingLangs && (\n        <ClientLibraries\n          protoUrl={build.getGrpcRepoSourceUrl()}\n          availableSetupLangs={availableProgrammingLangs}\n          selectedProgrammingLang={selectedProgrammingLang}\n          setProgrammingLang={setProgrammingLang}\n          repositoryUrl={build.getSdkProvisioning()?.getFetchUrl() || ''}\n          projectName={build.getApiName()}\n          sdkRepoName={build.getSdkProvisioning()?.getSdkRepoCommitSha() || ''}\n          sdkBranch={''}\n        />\n      )}\n      {/* TODO implement me */}\n      {/* <Authentication */}\n      {/*  description={build.getData()?.getAuthenticationDescription() || ''} */}\n      {/*  authMethods={build.getAuthenticationDescription()?.getMethodsList()} */}\n      {/* /> */}\n      <APIReference\n        codeSnippets={codeSnippets}\n        data={build.getData()}\n        codeProvider={codeProvider}\n        sdkProgrammingLangs={availableProgrammingLangs || []}\n        selectProgrammingLanguage={setProgrammingLang}\n        selectedProgrammingLanguage={selectedProgrammingLang}\n      />\n      <Footer>\n        Generated with{' '}\n        <a href='https://github.com/gendocu-com/grpc-docs'>grpc-docs</a>\n      </Footer>\n    </DefaultStyleWrapper>\n  )\n}\n\nconst DefaultStyleWrapper = styled.div`\n  margin: auto;\n  @media (max-width: 600px) {\n    padding: 0px;\n    border-left: 0px;\n  }\n`\n\nconst Footer = styled.div`\n  margin: ${grid(3)}px 0px;\n  text-align: center;\n  color: ${colors.grey};\n`\n","import styled from \"styled-components\";\n\nexport const ErrorMessage = styled.div`\n  color: red;\n`\n","import { ProgrammingLanguageType } from './Types'\n\nexport function setPreferredProgrammingLanguage(p: ProgrammingLanguageType) {\n  localStorage.setItem('preferred_programming_language', '' + p)\n}\n\nexport function getPreferredProgrammingLanguage() {\n  const x = localStorage.getItem('preferred_programming_language')\n  return x === null ? -1 : +x\n}\n","import { grpc } from '@improbable-eng/grpc-web'\n\nexport const GenDocuBackendSdkBackend =\n  'https://ncjytmo301.execute-api.eu-central-1.amazonaws.com'\n\nexport const getMetadata = (passwordSessionId?: string) => {\n  const meta = new grpc.Metadata()\n  if (passwordSessionId) {\n    meta.append('session-id', 'pwd ' + passwordSessionId)\n  }\n  return meta\n}\nexport const LanguageNotSupported = (e: { code: number; message: string }) => {\n  return e.code === 100 || e.message.includes('unsupported language')\n}\n","import { ProgrammingLanguageType } from '../../common/Types'\nimport { SdkGeneratorClient } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb_service'\nimport {\n  GenDocuBackendSdkBackend,\n  getMetadata,\n  LanguageNotSupported\n} from '../../common/GenDocuBackendUtils'\nimport { GenerateInputCodeSnippetsRequest } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb'\nimport { ProgrammingLanguage } from 'GendocuPublicApis/sdk/ts/gendocu/common/types_pb'\n\nexport class GendocuCodeProvider {\n  buildId: string\n  sdkGeneratorClient: SdkGeneratorClient\n\n  constructor(buildId: string) {\n    this.buildId = buildId\n    this.sdkGeneratorClient = new SdkGeneratorClient(GenDocuBackendSdkBackend)\n  }\n\n  getAvailableProgrammingLanguages(\n    langs: ProgrammingLanguageType[]\n  ): ProgrammingLanguageType[] {\n    return langs.filter((el) => el !== ProgrammingLanguage.PYTHON)\n  }\n\n  getAllSnippets(\n    lang: ProgrammingLanguageType,\n    sessionId?: string,\n  ): Promise<{ methodId: string; snippetCode: string; output: string }[]> {\n    return new Promise<\n      { methodId: string; snippetCode: string; output: string }[]\n    >((resolve) => {\n      const req = new GenerateInputCodeSnippetsRequest()\n      req.setBuildId(this.buildId)\n      req.setProgrammingLang(lang)\n      this.sdkGeneratorClient.generateInputCodeSnippets(\n        req,\n        getMetadata(sessionId),\n        (err, resp) => {\n          if (!!err || resp === null) {\n            if (!!err && LanguageNotSupported(err)) {\n              return resolve([])\n            }\n            console.error(\n              'received error:' + (err?.message || 'received empty response')\n            )\n          } else {\n            if (resp.getProgrammingLang() !== lang) {\n              return resolve([])\n            }\n            const snippets: Map<string, string> = new Map<string, string>()\n            resp\n              .getMethodIdToCodeSnippetMap()\n              .forEach((el: string, key: string) => {\n                snippets.set(key, el)\n              })\n            const outputs: Map<string, string> = new Map<string, string>()\n            resp\n              .getMethodIdToCodeOutputMap()\n              .forEach((el: string, key: string) => {\n                outputs.set(key, el)\n              })\n            const res: {\n              methodId: string\n              snippetCode: string\n              output: string\n            }[] = []\n            snippets.forEach((el, key) => {\n              res.push({\n                methodId: key,\n                snippetCode: el,\n                output: outputs.get(key) || ''\n              })\n            })\n            resolve(res)\n          }\n        }\n      )\n    })\n  }\n\n  getCode(\n    lang: ProgrammingLanguageType,\n    mode: 'snippet' | 'full'\n  ): { code: string; output: string; hasFullCode: boolean } {\n    return { code: 'x' + lang + mode, output: 'y', hasFullCode: false }\n  }\n}\n","import React, { Fragment, useState } from 'react'\nimport { ServiceError } from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb_service'\nimport { colors, grid, style } from './Constant'\nimport styled from 'styled-components'\n\nexport const DefaultStyleLoginWidget = (props: {\n  testPassword: (x: string) => void\n  err: ServiceError | undefined\n  message: string | undefined\n}) => {\n  const [newPassword, setNewPassword] = useState('')\n  return (\n    <Fragment>\n      <LoginWrapper>\n        <LoginBox>\n          <h1>Password protected</h1>\n          <div>\n            <Description>Enter the password.</Description>\n            <PasswordLine>\n              <PasswordInput\n                type='password'\n                placeholder='Password'\n                onChange={(val) => setNewPassword(val.target.value)}\n              />\n              <PasswordButton\n                type='button'\n                value='Submit'\n                onClick={() => props.testPassword(newPassword)}\n              />\n            </PasswordLine>\n            {props.message ? (\n              <Message>{props.message}</Message>\n            ) : (\n              <ErrMessage>{props.err?.message}</ErrMessage>\n            )}\n          </div>\n        </LoginBox>\n      </LoginWrapper>\n    </Fragment>\n  )\n}\nconst PasswordLine = styled.div`\n  display: flex;\n  gap: ${grid(1)}px;\n  justify-content: center;\n`\nconst PasswordInput = styled.input`\n  padding: ${grid(1)}px ${grid(2)}px;\n  border-radius: ${style.radius}px;\n  box-shadow: 0px;\n  border: 1px solid ${colors.darkGrey};\n`\nconst PasswordButton = styled.input`\n  padding: ${grid(1)}px ${grid(2)}px;\n  border-radius: ${style.radius}px;\n  box-shadow: 0px;\n  border: 1px solid ${colors.darkGrey};\n`\n\nconst ErrMessage = styled.div`\n  color: ${colors.red};\n  margin: ${grid(2)}px;\n`\nconst Message = styled.div`\n  color: ${colors.grey};\n  margin: ${grid(2)}px;\n`\nconst Description = styled.div`\n  margin: ${grid(2)}px;\n`\nconst LoginWrapper = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n`\nconst LoginBox = styled.div`\n  position: relative;\n  min-height: 300px;\n  top: 50%;\n  transform: translateY(-50%);\n  max-width: ${grid(50)}px;\n  margin: auto;\n  text-align: center;\n`\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { DefaultStyle } from '../../style/default/DefaultStyle'\nimport {\n  SdkGeneratorClient,\n  ServiceError\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb_service'\nimport {\n  Build,\n  BuildSelectorRequest,\n  BuildWithOrgAndName,\n  EnterPasswordRequest\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb'\nimport { Loading } from '../../common/Loading'\nimport { ErrorMessage } from '../../common/ErrorMessage'\nimport { ProgrammingLanguageType } from '../../common/Types'\nimport {\n  getPreferredProgrammingLanguage,\n  setPreferredProgrammingLanguage\n} from '../../common/StorageUtils'\nimport { GendocuCodeProvider } from '../codeProviders/GendocuCodeProvider'\nimport {\n  GenDocuBackendSdkBackend,\n  getMetadata\n} from '../../common/GenDocuBackendUtils'\nimport { grpc } from '@improbable-eng/grpc-web'\nimport { DefaultStyleLoginWidget } from '../../style/default/DefaultStyleLogin'\nimport { CodeSnippet } from '../../common/CodeSnippet'\n\ninterface GenDocuWidgetProps {\n  project: string\n  organization: string\n}\n\nexport const GenDocuWidget = (props: GenDocuWidgetProps) => {\n  const [build, setBuild] = useState<Build>()\n  const [err, setError] = useState<ServiceError>()\n  const [passwordMessage, setPasswordMessage] = useState<string>()\n  const [passwordSessionId, setPasswordSessionId] = useState<string>()\n  const [codeSnippets, setCodeSnippets] = useState(\n    new Map<string, CodeSnippet>()\n  )\n  const [programmingLanguage, setProgrammingLanguageRaw] =\n    useState<ProgrammingLanguageType>(\n      getPreferredProgrammingLanguage() as ProgrammingLanguageType\n    )\n  const [availableProgrammingLangs, setAvailableProgrammingLangs] = useState<\n    ProgrammingLanguageType[] | null\n  >([])\n  const setProgrammingLanguage = (p: ProgrammingLanguageType) => {\n    setPreferredProgrammingLanguage(p)\n    setProgrammingLanguageRaw(p)\n  }\n  var sdkGenerator = new SdkGeneratorClient(GenDocuBackendSdkBackend)\n  console.log(\"here!\")\n  useEffect(() => {\n    console.log(\"here2!\")\n    const buildwithorgandname = new BuildWithOrgAndName()\n    buildwithorgandname.setApiName(props.project)\n    buildwithorgandname.setOrganization(props.organization)\n\n    const buildselectorrequest = new BuildSelectorRequest()\n    buildselectorrequest.setOrgAndName(buildwithorgandname)\n\n    sdkGenerator.getBuild(\n      buildselectorrequest,\n      getMetadata(passwordSessionId),\n      (err, value: Build | null) => {\n        if (!!err || !value) {\n          setError(\n            err || {\n              message: 'received empty value',\n              code: -1,\n              metadata: new grpc.Metadata()\n            }\n          )\n        } else {\n          setBuild(value)\n          const prov = value.getSdkProvisioning()\n          if (prov !== undefined) {\n            const langs: ProgrammingLanguageType[] = []\n            prov.getProvisioningDataMap().forEach((el, key) => {\n              if (el.getError() === '') {\n                langs.push(key as ProgrammingLanguageType)\n              }\n            })\n            if (langs.length > 0) {\n              const index = langs.findIndex(\n                (el) => el === getPreferredProgrammingLanguage()\n              )\n              if (!!index && index !== -1) {\n                setProgrammingLanguage(langs[index])\n              } else {\n                setProgrammingLanguage(langs[0])\n              }\n            }\n            console.log(\"available langs\", langs)\n            setAvailableProgrammingLangs(langs)\n          }\n        }\n      }\n    )\n  }, [passwordSessionId])\n\n  useEffect(() => {\n    if (!build) {\n      return\n    }\n    const codeProvider = new GendocuCodeProvider(build.getBuildId())\n    const m = new Map<string, { code: string; output: string }>()\n    const resp = codeProvider.getAllSnippets(\n      programmingLanguage,\n      passwordSessionId\n    )\n    resp.then((el) => {\n      el.forEach((el) => {\n        m.set(el.methodId, { code: el.snippetCode, output: el.output })\n      })\n      setCodeSnippets(m)\n    })\n  }, [build, passwordSessionId, programmingLanguage])\n  const testPassword = (password: string) => {\n    const buildwithorgandname = new BuildWithOrgAndName()\n    buildwithorgandname.setApiName(props.project)\n    buildwithorgandname.setOrganization(props.organization)\n\n    const buildselectorrequest = new BuildSelectorRequest()\n    buildselectorrequest.setOrgAndName(buildwithorgandname)\n\n    const req = new EnterPasswordRequest()\n    req.setSelector(buildselectorrequest)\n    req.setPassword(password)\n    setPasswordMessage('Checking password')\n    sdkGenerator.enterPassword(req, getMetadata(), (err, resp) => {\n      if (err || !resp) {\n        setError(\n          err || {\n            message: 'received empty response',\n            code: -1,\n            metadata: new grpc.Metadata()\n          }\n        )\n        setPasswordMessage(undefined)\n      } else {\n        setError(undefined)\n        setPasswordMessage('Password is valid, loading documentation')\n        setPasswordSessionId(resp.getSessionId())\n      }\n    })\n  }\n  if (err) {\n    if (err?.code === grpc.Code.PermissionDenied) {\n      return (\n        <Fragment>\n          <DefaultStyleLoginWidget\n            testPassword={testPassword}\n            err={err}\n            message={passwordMessage}\n          />\n        </Fragment>\n      )\n    } else {\n      return (\n        <ErrorMessage>\n          Code {err.code}: {err.message}\n        </ErrorMessage>\n      )\n    }\n  } else if (build === undefined) {\n    return <Loading />\n  }\n  return (\n    <DefaultStyle\n      build={build}\n      codeSnippets={codeSnippets}\n      availableProgrammingLangs={availableProgrammingLangs}\n      selectedProgrammingLang={programmingLanguage}\n      setProgrammingLang={setProgrammingLanguage}\n      codeProvider={new GendocuCodeProvider(build.getBuildId())}\n    />\n  )\n}\n","import { ProgrammingLanguageType } from '../../common/Types'\nimport {Build, Environment} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb'\nimport { ProgrammingLanguage } from 'GendocuPublicApis/sdk/ts/gendocu/common/types_pb'\n\nexport class NoBackendCodeProvider {\n  build: Build\n\n  constructor(build: Build) {\n    this.build = build\n  }\n\n  getAvailableProgrammingLanguages(): ProgrammingLanguageType[] {\n    return [ProgrammingLanguage.GRPCURL]\n  }\n\n  getAllSnippets(\n    lang: ProgrammingLanguageType\n  ): Promise<{ methodId: string; snippetCode: string; output: string }[]> {\n    if (lang !== ProgrammingLanguage.GRPCURL) {\n      console.error()\n      return Promise.reject('selected unsupported programming language')\n    }\n    const env: Environment | undefined = this.build.getEnvsList()[0]\n    return new Promise<\n      { methodId: string; snippetCode: string; output: string }[]\n    >((resolve) => {\n      const l: { methodId: string; snippetCode: string; output: string }[] = []\n      this.build\n        .getData()\n        ?.getMethodsMap()\n        .forEach((el, key) => {\n          l.push({\n            methodId: key,\n            snippetCode:\n              \"grpcurl -d '{}' \" +\n              convertUrlToGRPCurl(\n                env?.getServiceGrpcUrlMap().get(el.getServiceId()) ||\n                  'grpc://unknown-grpc-url'\n              ) +\n              ' ' +\n              el.getServiceId().substr(1) +\n              '/' +\n              el.getName(),\n            output: ''\n          })\n        })\n      resolve(l)\n    })\n  }\n\n  getCode(\n    lang: ProgrammingLanguageType,\n    mode: 'snippet' | 'full'\n  ): { code: string; output: string; hasFullCode: boolean } {\n    return { code: 'x' + lang + mode, output: 'y', hasFullCode: false }\n  }\n}\n\nfunction convertUrlToGRPCurl(url?: string) {\n  if(!url) {\n    return '<unkown-url>'\n  }\n  if(url.startsWith(\"grpcs:\")) {\n    return url.replaceAll('grpcs://', '')\n  } else if(url.startsWith('grpc:')) {\n    return '-plaintext ' + url.replaceAll('grpc://', '')\n  } else {\n    return '<invalid-url-scheme:' + url + '>'\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Build,\n  Environment\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/api_description_service_pb'\nimport { Loading } from '../../common/Loading'\nimport {\n  APIDescriptionGeneratorModel,\n  EnumDescription,\n  FieldDescription,\n  MethodDescription,\n  ServiceDescription,\n  TypeDescription\n} from 'GendocuPublicApis/sdk/ts/gendocu/sdk_generator/v3/sdk_generator_pb'\nimport { DefaultStyle } from '../../style/default/DefaultStyle'\nimport { NoBackendCodeProvider } from '../codeProviders/NoBackendCodeProvider'\nimport { ProgrammingLanguage } from 'GendocuPublicApis/sdk/ts/gendocu/common/types_pb'\nimport yaml from 'js-yaml'\nimport minimatch from 'minimatch'\nimport { CodeSnippet } from '../../common/CodeSnippet'\nimport { ProgrammingLanguageType } from '../../common/Types'\n\ninterface DescriptorSetWidgetProps {\n  file?: string\n  definition?: string\n  scheme?: string\n}\n\nexport const PseudomutoProtocGenDoc = ({\n  file,\n  scheme,\n  definition\n}: DescriptorSetWidgetProps) => {\n  const [err, setError] = useState('')\n  const [apiBuild, setAPIBuild] = useState<Build | undefined>(undefined)\n  const [selectedProgrammingLanguage, setSelectedProgrammingLanguage] =\n    useState<ProgrammingLanguageType>(ProgrammingLanguage.GRPCURL)\n  const [codeSnippets, setCodeSnippets] = useState(\n    new Map<string, CodeSnippet>()\n  )\n  useEffect(() => {\n    if (!apiBuild) {\n      return\n    }\n    const codeProvider = new NoBackendCodeProvider(apiBuild)\n    const m = new Map<string, { code: string; output: string }>()\n    const resp = codeProvider.getAllSnippets(selectedProgrammingLanguage)\n    resp.then((el) => {\n      el.forEach((el) => {\n        m.set(el.methodId, { code: el.snippetCode, output: el.output })\n      })\n      setCodeSnippets(m)\n    })\n  }, [apiBuild, selectedProgrammingLanguage])\n  useEffect(() => {\n    ;(async () => {\n      let apiSpec\n      if (scheme) {\n        const resp = await fetch(scheme)\n        apiSpec = yaml.load(await resp.text()) as APISpec\n      }\n      let protocDefinition\n      if (definition) {\n        protocDefinition = JSON.parse(definition)\n      } else if (file) {\n        const resp = await fetch(file)\n        protocDefinition = await resp.json()\n      }\n\n      if ((!file && !definition) || (file && definition)) {\n        setError(\n          'Make sure you provide either the raw definition or a file to fetch the protoc definition'\n        )\n      }\n\n      const data = new APIDescriptionGeneratorModel()\n      data.setDescription(\n        'Documentation generated with github.com/gendocu-com/grpc-docs'\n      )\n      const map = data.getMethodsMap()\n      protocDefinition.files.forEach((el: FileDocDescription) => {\n        el.services.forEach((service: ServiceDocDescription) => {\n          const srvc = new ServiceDescription()\n          srvc.setServiceId('.' + service.fullName)\n          srvc.setDescription(service.description)\n          srvc.setShortName(service.name)\n          srvc.setFullName(service.fullName)\n          srvc.setSourceProtoFile(el.name)\n          data.getServicesMap().set(service.fullName, srvc)\n          service.methods.forEach((method: MethodDocDescription) => {\n            const m = new MethodDescription()\n            m.setName(method.name)\n            m.setDescription(cleanDescription(method.description))\n            m.setMethodId(srvc.getServiceId() + '.' + method.name)\n            m.setServiceId(srvc.getServiceId())\n            m.setInTypeId(getPrimitiveTypename(method.requestFullType))\n            m.setInStreaming(method.requestStreaming)\n            m.setOutTypeId(getPrimitiveTypename(method.responseFullType))\n            m.setOutStreaming(method.responseStreaming)\n            m.setSourceProtoFile(el.name)\n            map.set(m.getMethodId(), m)\n          })\n        })\n        el.messages.forEach((type: TypeDocDescription) => {\n          const typeDescription = new TypeDescription()\n          typeDescription.setDescription(cleanDescription(type.description))\n          typeDescription.setFullName(type.fullName)\n          typeDescription.setShortName(type.name)\n          typeDescription.setTypeId(getPrimitiveTypename(type.fullName))\n          type.fields.forEach((el) => {\n            const f = new FieldDescription()\n            f.setTypeId(getPrimitiveTypename(el.fullType))\n            f.setName(el.name || el.fullType)\n            f.setDescription(cleanDescription(el.description))\n            if (el.isoneof) {\n              f.setOneOf(el.oneofdecl)\n            }\n            f.setRepeated(el.label.indexOf('repeated') !== -1)\n            f.setOptional(false) // TODO\n            f.setRequired(false) // TODO\n            typeDescription.addFields(f)\n          })\n          data.getTypesMap().set(typeDescription.getTypeId(), typeDescription)\n        })\n        el.enums.forEach((e: EnumDocDescription) => {\n          const typeDescription = new TypeDescription()\n          typeDescription.setTypeId(e.fullName)\n          typeDescription.setFullName(e.fullName)\n          typeDescription.setDescription(e.description)\n          const enumDescription = new EnumDescription()\n          e.values.forEach((x) => {\n            enumDescription.getValuesMap().set(x.name, +x.number)\n          })\n          typeDescription.setEnumDescription(enumDescription)\n          data.getTypesMap().set(typeDescription.getTypeId(), typeDescription)\n        })\n      })\n      const build = new Build()\n      build.setData(data)\n      if (apiSpec) {\n        try {\n          const res = apiSpec\n          const env = new Environment()\n          env.setId('default')\n          build\n            ?.getData()\n            ?.getServicesMap()\n            .forEach((entry) => {\n              const name = entry.getFullName()\n              const d =\n                res?.servers?.find((el) => {\n                  return minimatch(name, el.selector)\n                }) || undefined\n              if (d && d.envs && d.envs.length > 0) {\n                const grpc = d.envs[0].urls.find(\n                  (el) => el.startsWith('grpc') && !el.startsWith('grpcweb')\n                )\n                if (grpc) {\n                  env.getServiceGrpcUrlMap().set(entry.getServiceId(), grpc)\n                }\n                const grpcweb = d.envs[0].urls.find((el) =>\n                  el.startsWith('grpcweb')\n                )\n                if (grpcweb) {\n                  env\n                    .getServiceWebgrpcUrlMap()\n                    .set(entry.getServiceId(), grpcweb)\n                }\n              }\n            })\n          build.setEnvsList([env])\n          setAPIBuild(build)\n        } catch (err) {\n          if (err instanceof Error) {\n            setError(err.message)\n          } else {\n            throw err\n          }\n        }\n      } else {\n        setAPIBuild(build)\n      }\n    })()\n  }, [file, scheme, definition])\n  if (err) {\n    return <h1 style={{ color: 'red' }}>Received error: {err}</h1>\n  }\n  if (!apiBuild) {\n    return <Loading />\n  }\n  return (\n    <DefaultStyle\n      codeSnippets={codeSnippets}\n      build={apiBuild}\n      availableProgrammingLangs={[ProgrammingLanguage.GRPCURL]}\n      selectedProgrammingLang={ProgrammingLanguage.GRPCURL}\n      setProgrammingLang={setSelectedProgrammingLanguage}\n      codeProvider={new NoBackendCodeProvider(apiBuild)}\n    />\n  )\n}\nfunction getPrimitiveTypename(el: string) {\n  switch (el) {\n    case 'string':\n      return 'TYPE_STRING'\n    case 'bool':\n      return 'TYPE_BOOL'\n    case 'sfixed32':\n      return 'TYPE_SFIXED32'\n    case 'fixed32':\n      return 'TYPE_FIXED32'\n    case 'sint32':\n      return 'TYPE_SINT32'\n    case 'int32':\n      return 'TYPE_INT32'\n    case 'sfixed64':\n      return 'TYPE_SFIXED64'\n    case 'fixed64':\n      return 'TYPE_FIXED64'\n    case 'sint64':\n      return 'TYPE_SINT64'\n    case 'int64':\n      return 'TYPE_INT64'\n    case 'double':\n      return 'TYPE_DOUBLE'\n    case 'float':\n      return 'TYPE_FLOAT'\n    case 'uint32':\n      return 'TYPE_UINT32'\n    case 'uint64':\n      return 'TYPE_UINT64'\n    case 'bytes':\n      return 'TYPE_BYTES'\n    default:\n      return '.' + el\n  }\n}\n\nfunction cleanDescription(desc: string) {\n  return desc\n  // return desc.replaceAll(/\\[Example[^\\]]*]\\s*\\{[^}]*}/gi, \"\") // TODO remove the whole valid JSON object\n}\n\ninterface ServiceDocDescription {\n  name: string\n  longName: string\n  fullName: string\n  description: string\n  methods: MethodDocDescription[]\n}\n\ninterface MethodDocDescription {\n  name: string\n  description: string\n  requestFullType: string\n  requestStreaming: boolean\n  responseFullType: string\n  responseStreaming: boolean\n}\n\ninterface TypeDocDescription {\n  name: string\n  fullName: string\n  description: string\n  fields: FieldDocDescription[]\n}\n\ninterface FieldDocDescription {\n  name: string\n  description: string\n  label: string\n  fullType: string\n  ismap: boolean\n  isoneof: boolean\n  oneofdecl: string\n  defaultValue: string\n}\n\ninterface EnumDocDescription {\n  name: string\n  longName: string\n  fullName: string\n  description: string\n  values: EnumDocValue[]\n}\n\ninterface EnumDocValue {\n  name: string\n  number: string\n  description: string\n}\n\ninterface FileDocDescription {\n  name: string\n  description: string\n  enums: EnumDocDescription[]\n  messages: TypeDocDescription[]\n  services: ServiceDocDescription[]\n}\n\ninterface APISpec {\n  servers: APISpecServer[] | undefined\n}\ninterface APISpecServer {\n  envs: APISpecServerEnvironment[] | undefined\n  selector: string\n}\ninterface APISpecServerEnvironment {\n  name: string\n  urls: string[]\n}\n","import * as React from 'react'\nimport { GenDocuWidget } from './components/widgets/gendocuWidget'\nimport { PseudomutoProtocGenDoc } from './components/widgets/pseudomutoProtocGenDoc'\nimport ReactDOM from 'react-dom'\n\nexport const GRPCGenDocuAPIReference = (props: {\n  project: string\n  organization: string\n}) => {\n  return <GenDocuWidget {...props} />\n}\n\nexport const GRPCSelfGeneratedAPIReference = ({\n  file,\n  scheme,\n  definition\n}: {\n  file?: string\n  definition?: string\n  scheme?: string\n}) => {\n  return (\n    <PseudomutoProtocGenDoc\n      file={file}\n      scheme={scheme}\n      definition={definition}\n    />\n  )\n}\n\ninterface Config {\n  classname: string\n  GenDocuBackend: {\n    project: string\n    organization: string\n  }\n  descriptor: {\n    file: string\n    scheme: string\n  }\n}\n\nexport const init = (config: Config) => {\n  const el = document.getElementById(config.classname)\n  if (!el) {\n    console.error('Unable to find element with class=' + config.classname)\n    return\n  }\n  const component =\n    config.GenDocuBackend.project !== '' ? (\n      <GRPCGenDocuAPIReference\n        project={config.GenDocuBackend.project}\n        organization={config.GenDocuBackend.organization}\n      />\n    ) : (\n      <GRPCSelfGeneratedAPIReference\n        file={config.descriptor.file}\n        scheme={config.descriptor.scheme}\n      />\n    )\n  ReactDOM.render(component, el)\n}\n"],"names":["grid","x","style","section","title","fontSize","margin","bottom","top","padding","vertical","horizontal","mobile","maxWidth","gap","typeTable","th","td","indent","radius","codeStyle","atomOneDarkReasonable","colors","white","veryVeryLightGrey","veryLightGrey","lightGrey","grey","darkGrey","green","red","blue","yellow","codeHighlight","SectionTitle","styled","h2","TwoPaneWrapper","div","props","direction","Pane","SectionWrapper","CopyButton","text","useState","copied","setCopied","copyEffect","setTimeout","React","CopyToClipboard","onCopy","position","CopyButtonBefore","TickEffect","visible","SetupTitle","SetupSubtitle","SectionSeparator","BashLine","BashLineWrapper","BashLineDollar","BashCodeSection","children","Troubleshooting","TroubleshootingLink","href","url","target","rel","FileContent","Fragment","FileContentTitle","FileName","fileName","FileContentWrapper","ins","pre","SetupGolangSDK","repositoryUrl","replaceAll","sdkBranch","SetupJavaSDK","gradle","sdkRepoName","pathToBinary","SetupPythonSDK","projectName","toLowerCase","SetupJavascriptSDK","SetupTypescriptSDK","SetupCSharpSDK","CSProjOverride","SetupKotlinSDK","sdkRepoProjectName","branch","SetupRustSDK","SetupGrpcurl","SDKSetup","lang","ProgrammingLanguage","GO","JAVA","PYTHON","JAVASCRIPT","TYPESCRIPT","CSHARP","KOTLIN","GRPCURL","RUST","programmingLangToString","REST_CURL","programmingLangToName","ProgrammingLanguageSelector","availableProgrammingLangs","selectedProgrammingLang","setProgrammingLang","langs","ProgrammingLanguageContainer","map","el","key","ProgrammingLanguageSelectorDiv","onClick","selected","ClientLibraries","protoUrl","ClientLibrariesSelector","ClientLibrariesWrapper","ClientLibrariesSelectorTitleWrapper","ClientLibrariesSelectorTitle","availableSetupLangs","SDKSetupWrapper","ServiceDescriptionsInOrder","services","res","serviceIds","getEntryList","sort","a","b","get","getShortName","forEach","y","push","toHumanReadableName","s","replace","toUpperCase","substr","cutOutCommonPackage","typeName","pkg","split","pop","typenamePkg","join","startsWith","length","Service","service","ServiceId","getServiceId","getDescription","SectionSubtitle","h3","getTypeName","typpe","console","error","TypeTable","type","allTypes","TableWrapper","Table","TrHead","ThStyled","TypeFields","undefined","maxDepth","calculateMaxDepth","getFieldsList","TrStyled","TdStyled","colSpan","fl","filter","getOneOf","oneofMap","Map","l","arr","set","FieldFields","field","depth","lastField","size","OneofFields","m","Array","from","setVisible","useEffect","tid","getTypeId","FieldTableRow","unfoldable","f","FieldDescription","setName","setTypeId","el2","key2","noItalic","whiteSpace","fontFamily","textDecoration","cursor","FieldMarker","markerType","getName","minWidth","getIsMapType","display","getRepeated","dangerouslySetInnerHTML","__html","fieldsLength","tr","table","Wrapper","Wrapper2","Loading","RequestCode","sdkAvailableLanguages","codeProvider","snippetCode","selectedProgrammingLanguage","selectProgrammingLanguage","CodeSnippetTitle","CustomSelect","onSelect","value","getAvailableProgrammingLanguages","CustomOption","borderLeft","height","opacity","StyledHighlighter","code","programmingLanguage","highlightMap","border","borderTop","SyntaxHighlighter","customStyle","lineHeight","boxSizing","lineProps","line","backgroundColor","has","wordBreak","showLineNumbers","language","CustomSelectWrapper","CustomSelectStyle","onChange","e","label","select","option","MethodOutput","output","borderBottomLeftRadius","borderBottomRightRadius","MethodSnippets","snippets","fullCodeAvailable","OutputSeparator","Method","method","types","MethodWrapper","color","MethodTypeName","TypePrefix","getInStreaming","getInTypeId","getMethodId","TypeDescriptionDiv","getOutStreaming","getOutTypeId","span","h4","APIReference","data","sdkProgrammingLangs","codeSnippets","setService","sid2method","setSid2method","getServicesMap","mm","getMethodsMap","codeSnippet","getTypesMap","DefaultStyle","build","DefaultStyleWrapper","getGrpcRepoSourceUrl","getSdkProvisioning","getFetchUrl","getApiName","getSdkRepoCommitSha","getData","Footer","ErrorMessage","setPreferredProgrammingLanguage","p","localStorage","setItem","getPreferredProgrammingLanguage","getItem","GenDocuBackendSdkBackend","getMetadata","passwordSessionId","meta","grpc","Metadata","append","LanguageNotSupported","message","includes","GendocuCodeProvider","buildId","sdkGeneratorClient","SdkGeneratorClient","getAllSnippets","sessionId","Promise","resolve","req","GenerateInputCodeSnippetsRequest","setBuildId","generateInputCodeSnippets","err","resp","getProgrammingLang","getMethodIdToCodeSnippetMap","outputs","getMethodIdToCodeOutputMap","methodId","getCode","mode","hasFullCode","DefaultStyleLoginWidget","newPassword","setNewPassword","LoginWrapper","LoginBox","Description","PasswordLine","PasswordInput","placeholder","val","PasswordButton","testPassword","Message","ErrMessage","input","GenDocuWidget","setBuild","setError","passwordMessage","setPasswordMessage","setPasswordSessionId","setCodeSnippets","setProgrammingLanguageRaw","setAvailableProgrammingLangs","setProgrammingLanguage","sdkGenerator","log","buildwithorgandname","BuildWithOrgAndName","setApiName","project","setOrganization","organization","buildselectorrequest","BuildSelectorRequest","setOrgAndName","getBuild","metadata","prov","getProvisioningDataMap","getError","index","findIndex","getBuildId","then","password","EnterPasswordRequest","setSelector","setPassword","enterPassword","getSessionId","Code","PermissionDenied","NoBackendCodeProvider","reject","env","getEnvsList","convertUrlToGRPCurl","getServiceGrpcUrlMap","PseudomutoProtocGenDoc","file","scheme","definition","apiBuild","setAPIBuild","setSelectedProgrammingLanguage","APIDescriptionGeneratorModel","setDescription","protocDefinition","files","srvc","ServiceDescription","setServiceId","fullName","description","setShortName","name","setFullName","setSourceProtoFile","methods","MethodDescription","cleanDescription","setMethodId","setInTypeId","getPrimitiveTypename","requestFullType","setInStreaming","requestStreaming","setOutTypeId","responseFullType","setOutStreaming","responseStreaming","messages","typeDescription","TypeDescription","fields","fullType","isoneof","setOneOf","oneofdecl","setRepeated","indexOf","setOptional","setRequired","addFields","enums","enumDescription","EnumDescription","values","getValuesMap","number","setEnumDescription","Build","setData","apiSpec","Environment","setId","entry","getFullName","d","servers","find","minimatch","selector","envs","urls","grpcweb","getServiceWebgrpcUrlMap","setEnvsList","Error","JSON","parse","fetch","json","yaml","load","desc","GRPCGenDocuAPIReference","GRPCSelfGeneratedAPIReference","init","config","document","getElementById","classname","component","GenDocuBackend","descriptor","ReactDOM","render"],"mappings":"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"}